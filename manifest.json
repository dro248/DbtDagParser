{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v2.json", "dbt_version": "0.21.0b1", "generated_at": "2021-08-18T22:37:10.390381Z", "invocation_id": "f486b174-dc16-42bc-bd44-2291b3b7f853", "env": {}, "project_id": "07623abe61acc0b129f1658dcdb9b1ee", "user_id": "528fc94c-5457-4351-841c-12b624994060", "send_anonymous_usage_stats": true, "adapter_type": "snowflake"}, "nodes": {"model.sdna_project.mx_stores_stg": {"raw_sql": "{{ config(tags=[\"mx\", \"intermediate\"]) }}\nSELECT DISTINCT\n    a11.id_cliente AS id_cliente,\n    a12.des_cliente AS des_cliente,\n    CONCAT(a12.des_numero, a12.des_calle) AS direccion,\n    a12.des_municipio AS des_municipio,\n    a12.des_edo AS des_edo,\n    a12.des_cp AS des_cp,\n    a12.des_corx AS lat,\n    a12.des_cory AS long,\n    a11.id_cia_ruta AS idcia_ruta,\n    a17.des_cia_ruta AS des_cia_ruta,\n    a14.id_zona AS id_zona,\n    a14.des_zona AS des_zona,\n    a14.id_division AS id_division,\n    CONCAT(a14.id_div_ods, ' ', a14.des_division) AS division,\n    a12.id_sucursal AS id_sucursal,\n    CONCAT(a14.id_suc_corp, '  ', COALESCE(a14.des_sucursal, '')) AS sucursal,\n    a19.id_tiporuta AS id_tiporuta,\n    a111.des_tiporuta AS des_tiporuta,\n    a111.tru_clave AS tru_clave,\n    a11.id_ruta AS id_ruta,\n    CONCAT(a19.id_ruta_corp, '  ', COALESCE(a19.des_ruta, '')) AS ruta,\n    a19.id_ruta_corp AS id_ruta_corp,\n    a12.id_cli_corp AS id_cli_corp,\n    a11.id_tipocliente AS id_tipocliente,\n    CONCAT(a110.id_tcl_corp, '  ', a110.des_tipocliente) AS tipocliente,\n    a11.id_nivelcliente AS id_nivelcliente,\n    a18.id_ncl_corp AS des_nivelcliente\nFROM\n    {{ ref('dls_latam_ins_vtaclipro_sem_v') }} AS a11\n    JOIN\n        {{ ref('dls_latam_ins_maestrocliente') }} AS a12\n        ON (a11.id_cliente = a12.id_cliente)\n    JOIN\n        {{ ref('dls_latam_ins_sucursal') }} AS a14\n        ON (a12.id_sucursal = a14.id_sucursal)\n    JOIN\n        {{ ref('dls_latam_ins_cia_ruta') }} AS a17\n        ON (a11.id_cia_ruta = a17.id_cia_ruta)\n    JOIN\n        {{ ref('dls_latam_ins_nivelcliente') }} AS a18\n        ON (a11.id_cia_ruta = a18.id_cia_ruta\n        AND a11.id_nivelcliente = a18.id_nivelcliente)\n    JOIN\n        {{ ref('dls_latam_ins_ruta') }} AS a19\n        ON (a11.id_cia_ruta = a19.id_cia_ruta\n        AND a11.id_ruta = a19.id_ruta\n        AND a14.id_sucursal = a19.id_sucursal)\n    JOIN\n        {{ ref('dls_latam_ins_tipocliente') }} AS a110\n        ON (a11.id_tipocliente = a110.id_tipocliente)\n    JOIN\n        {{ ref('dls_latam_ins_tiporuta') }} AS a111\n        ON (TRY_CAST(a19.id_tiporuta AS number) = a111.id_tiporuta)", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.dls_latam_ins_vtaclipro_sem_v", "model.sdna_project.dls_latam_ins_maestrocliente", "model.sdna_project.dls_latam_ins_sucursal", "model.sdna_project.dls_latam_ins_cia_ruta", "model.sdna_project.dls_latam_ins_nivelcliente", "model.sdna_project.dls_latam_ins_ruta", "model.sdna_project.dls_latam_ins_tipocliente", "model.sdna_project.dls_latam_ins_tiporuta"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "intermediate"], "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "intermediate", "mx_stores_stg"], "unique_id": "model.sdna_project.mx_stores_stg", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/intermediate/mx_stores_stg.sql", "original_file_path": "models/sdna_mx/intermediate/mx_stores_stg.sql", "name": "mx_stores_stg", "alias": "mx_stores_stg", "checksum": {"name": "sha256", "checksum": "8c54b2f4573b8be7a9d520c64e9f1e8b685667e2dd196b831ebbaabe7bc9827a"}, "tags": ["mx", "intermediate"], "refs": [["dls_latam_ins_vtaclipro_sem_v"], ["dls_latam_ins_maestrocliente"], ["dls_latam_ins_sucursal"], ["dls_latam_ins_cia_ruta"], ["dls_latam_ins_nivelcliente"], ["dls_latam_ins_ruta"], ["dls_latam_ins_tipocliente"], ["dls_latam_ins_tiporuta"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/intermediate/mx_stores_stg.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "ephemeral", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "tags": ["mx", "intermediate"]}, "created_at": 1629326231, "compiled_sql": "\nSELECT DISTINCT\n    a11.id_cliente AS id_cliente,\n    a12.des_cliente AS des_cliente,\n    CONCAT(a12.des_numero, a12.des_calle) AS direccion,\n    a12.des_municipio AS des_municipio,\n    a12.des_edo AS des_edo,\n    a12.des_cp AS des_cp,\n    a12.des_corx AS lat,\n    a12.des_cory AS long,\n    a11.id_cia_ruta AS idcia_ruta,\n    a17.des_cia_ruta AS des_cia_ruta,\n    a14.id_zona AS id_zona,\n    a14.des_zona AS des_zona,\n    a14.id_division AS id_division,\n    CONCAT(a14.id_div_ods, ' ', a14.des_division) AS division,\n    a12.id_sucursal AS id_sucursal,\n    CONCAT(a14.id_suc_corp, '  ', COALESCE(a14.des_sucursal, '')) AS sucursal,\n    a19.id_tiporuta AS id_tiporuta,\n    a111.des_tiporuta AS des_tiporuta,\n    a111.tru_clave AS tru_clave,\n    a11.id_ruta AS id_ruta,\n    CONCAT(a19.id_ruta_corp, '  ', COALESCE(a19.des_ruta, '')) AS ruta,\n    a19.id_ruta_corp AS id_ruta_corp,\n    a12.id_cli_corp AS id_cli_corp,\n    a11.id_tipocliente AS id_tipocliente,\n    CONCAT(a110.id_tcl_corp, '  ', a110.des_tipocliente) AS tipocliente,\n    a11.id_nivelcliente AS id_nivelcliente,\n    a18.id_ncl_corp AS des_nivelcliente\nFROM\n    DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_vtaclipro_sem_v AS a11\n    JOIN\n        DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_maestrocliente AS a12\n        ON (a11.id_cliente = a12.id_cliente)\n    JOIN\n        DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_sucursal AS a14\n        ON (a12.id_sucursal = a14.id_sucursal)\n    JOIN\n        DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_cia_ruta AS a17\n        ON (a11.id_cia_ruta = a17.id_cia_ruta)\n    JOIN\n        DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_nivelcliente AS a18\n        ON (a11.id_cia_ruta = a18.id_cia_ruta\n        AND a11.id_nivelcliente = a18.id_nivelcliente)\n    JOIN\n        DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_ruta AS a19\n        ON (a11.id_cia_ruta = a19.id_cia_ruta\n        AND a11.id_ruta = a19.id_ruta\n        AND a14.id_sucursal = a19.id_sucursal)\n    JOIN\n        DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_tipocliente AS a110\n        ON (a11.id_tipocliente = a110.id_tipocliente)\n    JOIN\n        DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_tiporuta AS a111\n        ON (TRY_CAST(a19.id_tiporuta AS number) = a111.id_tiporuta)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.sdna_project.stg_dataplor_coordinates": {"raw_sql": "{{ config(tags=[\"mx\", \"intermediate\"]) }}\nselect distinct\n    dataplor_id,\n    to_geography(st_makepoint(longitude, latitude)) as coords\nfrom {{ ref('dataplor') }}\nwhere country = 'Mexico'\n-- filters out invalid lat / long values\nand latitude between -90 and 90\nand longitude between -180 and 180", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.dataplor"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "intermediate"], "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "intermediate", "stg_dataplor_coordinates"], "unique_id": "model.sdna_project.stg_dataplor_coordinates", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/intermediate/stg_dataplor_coordinates.sql", "original_file_path": "models/sdna_mx/intermediate/stg_dataplor_coordinates.sql", "name": "stg_dataplor_coordinates", "alias": "stg_dataplor_coordinates", "checksum": {"name": "sha256", "checksum": "43ac799929d6d50ca7ed6bee39585d304da55d9a7ff64b3790dc2697c66813e7"}, "tags": ["mx", "intermediate"], "refs": [["dataplor"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/intermediate/stg_dataplor_coordinates.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "ephemeral", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "tags": ["mx", "intermediate"]}, "created_at": 1629326231, "compiled_sql": "\nselect distinct\n    dataplor_id,\n    to_geography(st_makepoint(longitude, latitude)) as coords\nfrom DP_SDNA_MX.SDNA_MX_DEV.dataplor\nwhere country = 'Mexico'\n-- filters out invalid lat / long values\nand latitude between -90 and 90\nand longitude between -180 and 180", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.sdna_project.stg_mx_store_coordinates": {"raw_sql": "{{ config(tags=[\"mx\", \"intermediate\"]) }}\nselect distinct\n    id_cliente,\n    lat,\n    long,\n    to_geography(st_makepoint(long, lat)) as coords\nfrom {{ ref('mx_stores') }}\n-- filters out invalid lat / long values\nwhere lat between -90 and 90\nand long between -180 and 180", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mx_stores"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "intermediate"], "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "intermediate", "stg_mx_store_coordinates"], "unique_id": "model.sdna_project.stg_mx_store_coordinates", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/intermediate/stg_mx_store_coordinates.sql", "original_file_path": "models/sdna_mx/intermediate/stg_mx_store_coordinates.sql", "name": "stg_mx_store_coordinates", "alias": "stg_mx_store_coordinates", "checksum": {"name": "sha256", "checksum": "ba06498eb90717e7a1e56e9a5d8a0909d05b481e10071d560e59eab24a762fef"}, "tags": ["mx", "intermediate"], "refs": [["mx_stores"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/intermediate/stg_mx_store_coordinates.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "ephemeral", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "tags": ["mx", "intermediate"]}, "created_at": 1629326231, "compiled_sql": "\nselect distinct\n    id_cliente,\n    lat,\n    long,\n    to_geography(st_makepoint(long, lat)) as coords\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\n-- filters out invalid lat / long values\nwhere lat between -90 and 90\nand long between -180 and 180", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.sdna_project.inegi2_step1": {"raw_sql": "{{ config(tags=[\"mx\", \"intermediate\"]) }}\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        lpad(ent, 2, 0) as ent,\n        nom_ent,\n        lpad(mun, 3, 0) as mun,\n        nom_mun,\n        lpad(loc, 4, 0) as loc,\n        nom_loc,\n        lpad(ageb, 4, 0) as ageb,\n        lpad(mza, 3, 0) as mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from {{ ref('inegi_2_stg') }}\n)\nselect distinct\n    *\nfrom x", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.inegi_2_stg"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "intermediate"], "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "intermediate", "inegi", "inegi2_step1"], "unique_id": "model.sdna_project.inegi2_step1", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/intermediate/inegi/inegi2_step1.sql", "original_file_path": "models/sdna_mx/intermediate/inegi/inegi2_step1.sql", "name": "inegi2_step1", "alias": "inegi2_step1", "checksum": {"name": "sha256", "checksum": "7ffb957b23f58f8e36b784471d7f287efc9e40a858b1aebc77475c4cc4856a5a"}, "tags": ["mx", "intermediate"], "refs": [["inegi_2_stg"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/intermediate/inegi/inegi2_step1.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "ephemeral", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "tags": ["mx", "intermediate"]}, "created_at": 1629326231, "compiled_sql": "\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        lpad(ent, 2, 0) as ent,\n        nom_ent,\n        lpad(mun, 3, 0) as mun,\n        nom_mun,\n        lpad(loc, 4, 0) as loc,\n        nom_loc,\n        lpad(ageb, 4, 0) as ageb,\n        lpad(mza, 3, 0) as mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from DP_SDNA_MX.SDNA_MX_DEV.inegi_2_stg\n)\nselect distinct\n    *\nfrom x", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.sdna_project.inegi2_step2": {"raw_sql": "{{ config(tags=[\"mx\", \"intermediate\"]) }}\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        ent,\n        nom_ent,\n        mun,\n        nom_mun,\n        loc,\n        nom_loc,\n        concat(ent, mun, loc) as loc_cod,\n        ageb,\n        mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from {{ ref('inegi2_step1') }}\n),\nurb as (\n    select distinct\n        localidad_codigo,\n        ambito\n    from {{ ref('urbanicity') }}\n)\nselect distinct\n    a.cvegeo,\n    a.vivtot,\n    a.tvivhab,\n    a.p_tvivhab,\n    a.tvivpar,\n    a.p_tvivpar,\n    a.tvivparhab,\n    a.pvivparhab,\n    a.vivpar_des,\n    a.p_vivpar_d,\n    a.vivpar_ut,\n    a.p_vivpar_u,\n    a.vivnohab,\n    a.p_vivnohab,\n    a.proocup_c,\n    a.pobtot,\n    a.p0a14a,\n    a.pp0a14a,\n    a.p15a29a,\n    a.pp15a29a,\n    a.p30a59a,\n    a.pp30a59a,\n    a.p_60ymas,\n    a.pp_60ymas,\n    a.pcon_lim,\n    a.ppcon_lim,\n    a.graproes,\n    a.ent,\n    a.nom_ent,\n    a.mun,\n    a.nom_mun,\n    a.loc,\n    a.nom_loc,\n    a.ageb,\n    a.mza,\n    b.ambito,\n    a.fecha_poli,\n    a.fecha_inf,\n    a.fecha_ceu,\n    a.oid,\n    a.geometry\nfrom x a\njoin urb b\non a.loc_cod = b.localidad_codigo", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.inegi2_step1", "model.sdna_project.urbanicity"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "intermediate"], "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "intermediate", "inegi", "inegi2_step2"], "unique_id": "model.sdna_project.inegi2_step2", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/intermediate/inegi/inegi2_step2.sql", "original_file_path": "models/sdna_mx/intermediate/inegi/inegi2_step2.sql", "name": "inegi2_step2", "alias": "inegi2_step2", "checksum": {"name": "sha256", "checksum": "01c90ab3db50d4a08d54c2034fd65464056cebf915857c900d82ab662013dc58"}, "tags": ["mx", "intermediate"], "refs": [["inegi2_step1"], ["urbanicity"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/intermediate/inegi/inegi2_step2.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "ephemeral", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "tags": ["mx", "intermediate"]}, "created_at": 1629326231, "compiled_sql": "\nwith  __dbt__cte__inegi2_step1 as (\n\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        lpad(ent, 2, 0) as ent,\n        nom_ent,\n        lpad(mun, 3, 0) as mun,\n        nom_mun,\n        lpad(loc, 4, 0) as loc,\n        nom_loc,\n        lpad(ageb, 4, 0) as ageb,\n        lpad(mza, 3, 0) as mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from DP_SDNA_MX.SDNA_MX_DEV.inegi_2_stg\n)\nselect distinct\n    *\nfrom x\n),x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        ent,\n        nom_ent,\n        mun,\n        nom_mun,\n        loc,\n        nom_loc,\n        concat(ent, mun, loc) as loc_cod,\n        ageb,\n        mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from __dbt__cte__inegi2_step1\n),\nurb as (\n    select distinct\n        localidad_codigo,\n        ambito\n    from DP_SDNA_MX.SDNA_MX_DEV.urbanicity\n)\nselect distinct\n    a.cvegeo,\n    a.vivtot,\n    a.tvivhab,\n    a.p_tvivhab,\n    a.tvivpar,\n    a.p_tvivpar,\n    a.tvivparhab,\n    a.pvivparhab,\n    a.vivpar_des,\n    a.p_vivpar_d,\n    a.vivpar_ut,\n    a.p_vivpar_u,\n    a.vivnohab,\n    a.p_vivnohab,\n    a.proocup_c,\n    a.pobtot,\n    a.p0a14a,\n    a.pp0a14a,\n    a.p15a29a,\n    a.pp15a29a,\n    a.p30a59a,\n    a.pp30a59a,\n    a.p_60ymas,\n    a.pp_60ymas,\n    a.pcon_lim,\n    a.ppcon_lim,\n    a.graproes,\n    a.ent,\n    a.nom_ent,\n    a.mun,\n    a.nom_mun,\n    a.loc,\n    a.nom_loc,\n    a.ageb,\n    a.mza,\n    b.ambito,\n    a.fecha_poli,\n    a.fecha_inf,\n    a.fecha_ceu,\n    a.oid,\n    a.geometry\nfrom x a\njoin urb b\non a.loc_cod = b.localidad_codigo", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sdna_project.inegi2_step1", "sql": " __dbt__cte__inegi2_step1 as (\n\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        lpad(ent, 2, 0) as ent,\n        nom_ent,\n        lpad(mun, 3, 0) as mun,\n        nom_mun,\n        lpad(loc, 4, 0) as loc,\n        nom_loc,\n        lpad(ageb, 4, 0) as ageb,\n        lpad(mza, 3, 0) as mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from DP_SDNA_MX.SDNA_MX_DEV.inegi_2_stg\n)\nselect distinct\n    *\nfrom x\n)"}], "relation_name": null}, "model.sdna_project.inegi2_step3": {"raw_sql": "{{ config(tags=[\"mx\", \"intermediate\"]) }}\nselect distinct\n    cvegeo,\n    case when vivtot in ('N.D.','*','*********') then 0 else cast(vivtot as int) end as vivtot,\n    case when tvivhab in ('N.D.','*','*********') then 0 else cast(tvivhab as int) end as tvivhab,\n    case when p_tvivhab in ('N.D.','*','*********') then 0 else cast(p_tvivhab as decimal(5,2)) end as p_tvivhab,\n    case when tvivpar in ('N.D.','*','*********') then 0 else cast(tvivpar as int) end as tvivpar,\n    case when p_tvivpar in ('N.D.','*','*********') then 0 else cast(p_tvivpar as decimal(5,2)) end as p_tvivpar,\n    case when tvivparhaB in ('N.D.','*','*********') then 0 else cast(tvivparhab as int) end as tvivparhab,\n    case when pvivparhaB in ('N.D.','*','*********') then 0 else cast(pvivparhab as decimal(5,2)) end as pvivparhab,\n    case when vivpar_deS in ('N.D.','*','*********') then 0 else cast(vivpar_des as int) end as vivpar_des,\n    case when p_vivpar_D in ('N.D.','*','*********') then 0 else cast(p_vivpar_d as decimal(5,2)) end as p_vivpar_d,\n    case when vivpar_ut in ('N.D.','*','*********') then 0 else cast(vivpar_ut as int) end as vivpar_ut,\n    case when p_vivpar_U in ('N.D.','*','*********') then 0 else cast(p_vivpar_u as decimal(5,2)) end as p_vivpar_u,\n    case when vivnohab in ('N.D.','*','*********') then 0 else cast(vivnohab as int) end as vivnohab,\n    case when p_vivnohaB in ('N.D.','*','*********') then 0 else cast(p_vivnohab as decimal(5,2)) end as p_vivnohab,\n    case when proocup_c in ('N.D.','*','*********') then 0 else cast(proocup_c as decimal(10,2)) end as proocup_c,\n    case when pobtot in ('N.D.','*','*********') then 0 else cast(pobtot as int) end as pobtot,\n    case when p0a14a in ('N.D.','*','*********') then 0 else cast(p0a14a as int) end as p0a14a,\n    case when pp0a14a in ('N.D.','*','*********') then 0 else cast(pp0a14a as decimal(5,2)) end as pp0a14a,\n    case when p15a29a in ('N.D.','*','*********') then 0 else cast(p15a29a as int) end as p15a29a,\n    case when pp15a29a in ('N.D.','*','*********') then 0 else cast(pp15a29a as decimal(5,2)) end as pp15a29a,\n    case when p30a59a in ('N.D.','*','*********') then 0 else cast(p30a59a as int) end as p30a59a,\n    case when pp30a59a in ('N.D.','*','*********') then 0 else cast(pp30a59a as decimal(5,2)) end as pp30a59a,\n    case when p_60ymas in ('N.D.','*','*********') then 0 else cast(p_60ymas as int) end as p_60ymas,\n    case when pp_60ymas in ('N.D.','*','*********') then 0 else cast(pp_60ymas as decimal(5,2)) end as pp_60ymas,\n    case when pcon_lim in ('N.D.','*','*********') then 0 else cast(pcon_lim as int) end as pcon_lim,\n    case when ppcon_lim in ('N.D.','*','*********') then 0 else cast(ppcon_lim as decimal(5,2)) end as ppcon_lim,\n    case when graproes in ('N.D.','*','*********') then 0 else cast(graproes as decimal(10,2)) end as graproes,\n    ent,\n    nom_ent,\n    mun,\n    nom_mun,\n    loc,\n    nom_loc,\n    ageb,\n    mza,\n    ambito,\n    fecha_poli,\n    fecha_inf,\n    fecha_ceu,\n    oid,\n    geometry\nfrom {{ ref('inegi2_step2') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.inegi2_step2"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "intermediate"], "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "intermediate", "inegi", "inegi2_step3"], "unique_id": "model.sdna_project.inegi2_step3", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/intermediate/inegi/inegi2_step3.sql", "original_file_path": "models/sdna_mx/intermediate/inegi/inegi2_step3.sql", "name": "inegi2_step3", "alias": "inegi2_step3", "checksum": {"name": "sha256", "checksum": "f4cf92912861f247b2d06afce9ad900f0c616b4a4f7dfe316022ed6ff9f36626"}, "tags": ["mx", "intermediate"], "refs": [["inegi2_step2"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/intermediate/inegi/inegi2_step3.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "ephemeral", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "tags": ["mx", "intermediate"]}, "created_at": 1629326231, "compiled_sql": "\nwith __dbt__cte__inegi2_step1 as (\n\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        lpad(ent, 2, 0) as ent,\n        nom_ent,\n        lpad(mun, 3, 0) as mun,\n        nom_mun,\n        lpad(loc, 4, 0) as loc,\n        nom_loc,\n        lpad(ageb, 4, 0) as ageb,\n        lpad(mza, 3, 0) as mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from DP_SDNA_MX.SDNA_MX_DEV.inegi_2_stg\n)\nselect distinct\n    *\nfrom x\n),  __dbt__cte__inegi2_step2 as (\n\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        ent,\n        nom_ent,\n        mun,\n        nom_mun,\n        loc,\n        nom_loc,\n        concat(ent, mun, loc) as loc_cod,\n        ageb,\n        mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from __dbt__cte__inegi2_step1\n),\nurb as (\n    select distinct\n        localidad_codigo,\n        ambito\n    from DP_SDNA_MX.SDNA_MX_DEV.urbanicity\n)\nselect distinct\n    a.cvegeo,\n    a.vivtot,\n    a.tvivhab,\n    a.p_tvivhab,\n    a.tvivpar,\n    a.p_tvivpar,\n    a.tvivparhab,\n    a.pvivparhab,\n    a.vivpar_des,\n    a.p_vivpar_d,\n    a.vivpar_ut,\n    a.p_vivpar_u,\n    a.vivnohab,\n    a.p_vivnohab,\n    a.proocup_c,\n    a.pobtot,\n    a.p0a14a,\n    a.pp0a14a,\n    a.p15a29a,\n    a.pp15a29a,\n    a.p30a59a,\n    a.pp30a59a,\n    a.p_60ymas,\n    a.pp_60ymas,\n    a.pcon_lim,\n    a.ppcon_lim,\n    a.graproes,\n    a.ent,\n    a.nom_ent,\n    a.mun,\n    a.nom_mun,\n    a.loc,\n    a.nom_loc,\n    a.ageb,\n    a.mza,\n    b.ambito,\n    a.fecha_poli,\n    a.fecha_inf,\n    a.fecha_ceu,\n    a.oid,\n    a.geometry\nfrom x a\njoin urb b\non a.loc_cod = b.localidad_codigo\n)select distinct\n    cvegeo,\n    case when vivtot in ('N.D.','*','*********') then 0 else cast(vivtot as int) end as vivtot,\n    case when tvivhab in ('N.D.','*','*********') then 0 else cast(tvivhab as int) end as tvivhab,\n    case when p_tvivhab in ('N.D.','*','*********') then 0 else cast(p_tvivhab as decimal(5,2)) end as p_tvivhab,\n    case when tvivpar in ('N.D.','*','*********') then 0 else cast(tvivpar as int) end as tvivpar,\n    case when p_tvivpar in ('N.D.','*','*********') then 0 else cast(p_tvivpar as decimal(5,2)) end as p_tvivpar,\n    case when tvivparhaB in ('N.D.','*','*********') then 0 else cast(tvivparhab as int) end as tvivparhab,\n    case when pvivparhaB in ('N.D.','*','*********') then 0 else cast(pvivparhab as decimal(5,2)) end as pvivparhab,\n    case when vivpar_deS in ('N.D.','*','*********') then 0 else cast(vivpar_des as int) end as vivpar_des,\n    case when p_vivpar_D in ('N.D.','*','*********') then 0 else cast(p_vivpar_d as decimal(5,2)) end as p_vivpar_d,\n    case when vivpar_ut in ('N.D.','*','*********') then 0 else cast(vivpar_ut as int) end as vivpar_ut,\n    case when p_vivpar_U in ('N.D.','*','*********') then 0 else cast(p_vivpar_u as decimal(5,2)) end as p_vivpar_u,\n    case when vivnohab in ('N.D.','*','*********') then 0 else cast(vivnohab as int) end as vivnohab,\n    case when p_vivnohaB in ('N.D.','*','*********') then 0 else cast(p_vivnohab as decimal(5,2)) end as p_vivnohab,\n    case when proocup_c in ('N.D.','*','*********') then 0 else cast(proocup_c as decimal(10,2)) end as proocup_c,\n    case when pobtot in ('N.D.','*','*********') then 0 else cast(pobtot as int) end as pobtot,\n    case when p0a14a in ('N.D.','*','*********') then 0 else cast(p0a14a as int) end as p0a14a,\n    case when pp0a14a in ('N.D.','*','*********') then 0 else cast(pp0a14a as decimal(5,2)) end as pp0a14a,\n    case when p15a29a in ('N.D.','*','*********') then 0 else cast(p15a29a as int) end as p15a29a,\n    case when pp15a29a in ('N.D.','*','*********') then 0 else cast(pp15a29a as decimal(5,2)) end as pp15a29a,\n    case when p30a59a in ('N.D.','*','*********') then 0 else cast(p30a59a as int) end as p30a59a,\n    case when pp30a59a in ('N.D.','*','*********') then 0 else cast(pp30a59a as decimal(5,2)) end as pp30a59a,\n    case when p_60ymas in ('N.D.','*','*********') then 0 else cast(p_60ymas as int) end as p_60ymas,\n    case when pp_60ymas in ('N.D.','*','*********') then 0 else cast(pp_60ymas as decimal(5,2)) end as pp_60ymas,\n    case when pcon_lim in ('N.D.','*','*********') then 0 else cast(pcon_lim as int) end as pcon_lim,\n    case when ppcon_lim in ('N.D.','*','*********') then 0 else cast(ppcon_lim as decimal(5,2)) end as ppcon_lim,\n    case when graproes in ('N.D.','*','*********') then 0 else cast(graproes as decimal(10,2)) end as graproes,\n    ent,\n    nom_ent,\n    mun,\n    nom_mun,\n    loc,\n    nom_loc,\n    ageb,\n    mza,\n    ambito,\n    fecha_poli,\n    fecha_inf,\n    fecha_ceu,\n    oid,\n    geometry\nfrom __dbt__cte__inegi2_step2", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sdna_project.inegi2_step1", "sql": " __dbt__cte__inegi2_step1 as (\n\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        lpad(ent, 2, 0) as ent,\n        nom_ent,\n        lpad(mun, 3, 0) as mun,\n        nom_mun,\n        lpad(loc, 4, 0) as loc,\n        nom_loc,\n        lpad(ageb, 4, 0) as ageb,\n        lpad(mza, 3, 0) as mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from DP_SDNA_MX.SDNA_MX_DEV.inegi_2_stg\n)\nselect distinct\n    *\nfrom x\n)"}, {"id": "model.sdna_project.inegi2_step2", "sql": " __dbt__cte__inegi2_step2 as (\n\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        ent,\n        nom_ent,\n        mun,\n        nom_mun,\n        loc,\n        nom_loc,\n        concat(ent, mun, loc) as loc_cod,\n        ageb,\n        mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from __dbt__cte__inegi2_step1\n),\nurb as (\n    select distinct\n        localidad_codigo,\n        ambito\n    from DP_SDNA_MX.SDNA_MX_DEV.urbanicity\n)\nselect distinct\n    a.cvegeo,\n    a.vivtot,\n    a.tvivhab,\n    a.p_tvivhab,\n    a.tvivpar,\n    a.p_tvivpar,\n    a.tvivparhab,\n    a.pvivparhab,\n    a.vivpar_des,\n    a.p_vivpar_d,\n    a.vivpar_ut,\n    a.p_vivpar_u,\n    a.vivnohab,\n    a.p_vivnohab,\n    a.proocup_c,\n    a.pobtot,\n    a.p0a14a,\n    a.pp0a14a,\n    a.p15a29a,\n    a.pp15a29a,\n    a.p30a59a,\n    a.pp30a59a,\n    a.p_60ymas,\n    a.pp_60ymas,\n    a.pcon_lim,\n    a.ppcon_lim,\n    a.graproes,\n    a.ent,\n    a.nom_ent,\n    a.mun,\n    a.nom_mun,\n    a.loc,\n    a.nom_loc,\n    a.ageb,\n    a.mza,\n    b.ambito,\n    a.fecha_poli,\n    a.fecha_inf,\n    a.fecha_ceu,\n    a.oid,\n    a.geometry\nfrom x a\njoin urb b\non a.loc_cod = b.localidad_codigo\n)"}], "relation_name": null}, "model.sdna_project.inegi2_step4": {"raw_sql": "{{ config(tags=[\"mx\", \"intermediate\"]) }}\nselect distinct\n    cvegeo,\n    vivtot,\n    tvivhab,\n    p_tvivhab,\n    tvivpar,\n    p_tvivpar,\n    tvivparhab,\n    pvivparhab,\n    vivpar_des,\n    p_vivpar_d,\n    vivpar_ut,\n    p_vivpar_u,\n    vivnohab,\n    p_vivnohab,\n    proocup_c,\n    pobtot,\n    p0a14a,\n    pp0a14a,\n    p15a29a,\n    pp15a29a,\n    p30a59a,\n    pp30a59a,\n    p_60ymas,\n    pp_60ymas,\n    case when p15a29a >= 0 then round(p15a29a*.8) else 0 end as genz,\n    case when p15a29a >= 0 or p30a59a >= 0 then round((p15a29a*.2) + (p30a59a*.37)) else 0 end as millenial,\n    case when p30a59a >= 0  then round(p30a59a*.5) else 0 end as genx,\n    case when p30a59a >= 0 or p_60ymas >= 0 then round((p30a59a*.13) + p_60ymas) else 0 end as baby_boomer,\n    case when pobtot >= 0 then round(pobtot*a_b) else 0 end as a_b,\n    case when pobtot >= 0 then round(pobtot*c_plus) else 0 end as c_plus,\n    case when pobtot >= 0 then round(pobtot*c) else 0 end as c,\n    case when pobtot >= 0 then round(pobtot*c_minus) else 0 end as c_minus,\n    case when pobtot >= 0 then round(pobtot*d_plus) else 0 end as d_plus,\n    case when pobtot >= 0 then round(pobtot*d) else 0 end as d,\n    case when pobtot >= 0 then round(pobtot*e) else 0 end as e,\n    pcon_lim,\n    ppcon_lim,\n    graproes,\n    x.ent,\n    x.nom_ent,\n    mun,\n    nom_mun,\n    loc,\n    nom_loc,\n    ageb,\n    mza,\n    ambito,\n    fecha_poli,\n    fecha_inf,\n    fecha_ceu,\n    oid,\n    geometry\nfrom {{ ref('inegi2_step3') }} x\njoin {{ ref('nse') }} y\non x.ent = y.ent", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.inegi2_step3", "model.sdna_project.nse"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "intermediate"], "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "intermediate", "inegi", "inegi2_step4"], "unique_id": "model.sdna_project.inegi2_step4", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/intermediate/inegi/inegi2_step4.sql", "original_file_path": "models/sdna_mx/intermediate/inegi/inegi2_step4.sql", "name": "inegi2_step4", "alias": "inegi2_step4", "checksum": {"name": "sha256", "checksum": "c126ef54353da559a4876e5a430b36a0abd88c61c9c0f335f0e754f7333dc28c"}, "tags": ["mx", "intermediate"], "refs": [["inegi2_step3"], ["nse"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/intermediate/inegi/inegi2_step4.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "ephemeral", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "tags": ["mx", "intermediate"]}, "created_at": 1629326231, "compiled_sql": "\nwith __dbt__cte__inegi2_step1 as (\n\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        lpad(ent, 2, 0) as ent,\n        nom_ent,\n        lpad(mun, 3, 0) as mun,\n        nom_mun,\n        lpad(loc, 4, 0) as loc,\n        nom_loc,\n        lpad(ageb, 4, 0) as ageb,\n        lpad(mza, 3, 0) as mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from DP_SDNA_MX.SDNA_MX_DEV.inegi_2_stg\n)\nselect distinct\n    *\nfrom x\n),  __dbt__cte__inegi2_step2 as (\n\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        ent,\n        nom_ent,\n        mun,\n        nom_mun,\n        loc,\n        nom_loc,\n        concat(ent, mun, loc) as loc_cod,\n        ageb,\n        mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from __dbt__cte__inegi2_step1\n),\nurb as (\n    select distinct\n        localidad_codigo,\n        ambito\n    from DP_SDNA_MX.SDNA_MX_DEV.urbanicity\n)\nselect distinct\n    a.cvegeo,\n    a.vivtot,\n    a.tvivhab,\n    a.p_tvivhab,\n    a.tvivpar,\n    a.p_tvivpar,\n    a.tvivparhab,\n    a.pvivparhab,\n    a.vivpar_des,\n    a.p_vivpar_d,\n    a.vivpar_ut,\n    a.p_vivpar_u,\n    a.vivnohab,\n    a.p_vivnohab,\n    a.proocup_c,\n    a.pobtot,\n    a.p0a14a,\n    a.pp0a14a,\n    a.p15a29a,\n    a.pp15a29a,\n    a.p30a59a,\n    a.pp30a59a,\n    a.p_60ymas,\n    a.pp_60ymas,\n    a.pcon_lim,\n    a.ppcon_lim,\n    a.graproes,\n    a.ent,\n    a.nom_ent,\n    a.mun,\n    a.nom_mun,\n    a.loc,\n    a.nom_loc,\n    a.ageb,\n    a.mza,\n    b.ambito,\n    a.fecha_poli,\n    a.fecha_inf,\n    a.fecha_ceu,\n    a.oid,\n    a.geometry\nfrom x a\njoin urb b\non a.loc_cod = b.localidad_codigo\n),  __dbt__cte__inegi2_step3 as (\n\nselect distinct\n    cvegeo,\n    case when vivtot in ('N.D.','*','*********') then 0 else cast(vivtot as int) end as vivtot,\n    case when tvivhab in ('N.D.','*','*********') then 0 else cast(tvivhab as int) end as tvivhab,\n    case when p_tvivhab in ('N.D.','*','*********') then 0 else cast(p_tvivhab as decimal(5,2)) end as p_tvivhab,\n    case when tvivpar in ('N.D.','*','*********') then 0 else cast(tvivpar as int) end as tvivpar,\n    case when p_tvivpar in ('N.D.','*','*********') then 0 else cast(p_tvivpar as decimal(5,2)) end as p_tvivpar,\n    case when tvivparhaB in ('N.D.','*','*********') then 0 else cast(tvivparhab as int) end as tvivparhab,\n    case when pvivparhaB in ('N.D.','*','*********') then 0 else cast(pvivparhab as decimal(5,2)) end as pvivparhab,\n    case when vivpar_deS in ('N.D.','*','*********') then 0 else cast(vivpar_des as int) end as vivpar_des,\n    case when p_vivpar_D in ('N.D.','*','*********') then 0 else cast(p_vivpar_d as decimal(5,2)) end as p_vivpar_d,\n    case when vivpar_ut in ('N.D.','*','*********') then 0 else cast(vivpar_ut as int) end as vivpar_ut,\n    case when p_vivpar_U in ('N.D.','*','*********') then 0 else cast(p_vivpar_u as decimal(5,2)) end as p_vivpar_u,\n    case when vivnohab in ('N.D.','*','*********') then 0 else cast(vivnohab as int) end as vivnohab,\n    case when p_vivnohaB in ('N.D.','*','*********') then 0 else cast(p_vivnohab as decimal(5,2)) end as p_vivnohab,\n    case when proocup_c in ('N.D.','*','*********') then 0 else cast(proocup_c as decimal(10,2)) end as proocup_c,\n    case when pobtot in ('N.D.','*','*********') then 0 else cast(pobtot as int) end as pobtot,\n    case when p0a14a in ('N.D.','*','*********') then 0 else cast(p0a14a as int) end as p0a14a,\n    case when pp0a14a in ('N.D.','*','*********') then 0 else cast(pp0a14a as decimal(5,2)) end as pp0a14a,\n    case when p15a29a in ('N.D.','*','*********') then 0 else cast(p15a29a as int) end as p15a29a,\n    case when pp15a29a in ('N.D.','*','*********') then 0 else cast(pp15a29a as decimal(5,2)) end as pp15a29a,\n    case when p30a59a in ('N.D.','*','*********') then 0 else cast(p30a59a as int) end as p30a59a,\n    case when pp30a59a in ('N.D.','*','*********') then 0 else cast(pp30a59a as decimal(5,2)) end as pp30a59a,\n    case when p_60ymas in ('N.D.','*','*********') then 0 else cast(p_60ymas as int) end as p_60ymas,\n    case when pp_60ymas in ('N.D.','*','*********') then 0 else cast(pp_60ymas as decimal(5,2)) end as pp_60ymas,\n    case when pcon_lim in ('N.D.','*','*********') then 0 else cast(pcon_lim as int) end as pcon_lim,\n    case when ppcon_lim in ('N.D.','*','*********') then 0 else cast(ppcon_lim as decimal(5,2)) end as ppcon_lim,\n    case when graproes in ('N.D.','*','*********') then 0 else cast(graproes as decimal(10,2)) end as graproes,\n    ent,\n    nom_ent,\n    mun,\n    nom_mun,\n    loc,\n    nom_loc,\n    ageb,\n    mza,\n    ambito,\n    fecha_poli,\n    fecha_inf,\n    fecha_ceu,\n    oid,\n    geometry\nfrom __dbt__cte__inegi2_step2\n)select distinct\n    cvegeo,\n    vivtot,\n    tvivhab,\n    p_tvivhab,\n    tvivpar,\n    p_tvivpar,\n    tvivparhab,\n    pvivparhab,\n    vivpar_des,\n    p_vivpar_d,\n    vivpar_ut,\n    p_vivpar_u,\n    vivnohab,\n    p_vivnohab,\n    proocup_c,\n    pobtot,\n    p0a14a,\n    pp0a14a,\n    p15a29a,\n    pp15a29a,\n    p30a59a,\n    pp30a59a,\n    p_60ymas,\n    pp_60ymas,\n    case when p15a29a >= 0 then round(p15a29a*.8) else 0 end as genz,\n    case when p15a29a >= 0 or p30a59a >= 0 then round((p15a29a*.2) + (p30a59a*.37)) else 0 end as millenial,\n    case when p30a59a >= 0  then round(p30a59a*.5) else 0 end as genx,\n    case when p30a59a >= 0 or p_60ymas >= 0 then round((p30a59a*.13) + p_60ymas) else 0 end as baby_boomer,\n    case when pobtot >= 0 then round(pobtot*a_b) else 0 end as a_b,\n    case when pobtot >= 0 then round(pobtot*c_plus) else 0 end as c_plus,\n    case when pobtot >= 0 then round(pobtot*c) else 0 end as c,\n    case when pobtot >= 0 then round(pobtot*c_minus) else 0 end as c_minus,\n    case when pobtot >= 0 then round(pobtot*d_plus) else 0 end as d_plus,\n    case when pobtot >= 0 then round(pobtot*d) else 0 end as d,\n    case when pobtot >= 0 then round(pobtot*e) else 0 end as e,\n    pcon_lim,\n    ppcon_lim,\n    graproes,\n    x.ent,\n    x.nom_ent,\n    mun,\n    nom_mun,\n    loc,\n    nom_loc,\n    ageb,\n    mza,\n    ambito,\n    fecha_poli,\n    fecha_inf,\n    fecha_ceu,\n    oid,\n    geometry\nfrom __dbt__cte__inegi2_step3 x\njoin DP_SDNA_MX.SDNA_MX_DEV.nse y\non x.ent = y.ent", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sdna_project.inegi2_step1", "sql": " __dbt__cte__inegi2_step1 as (\n\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        lpad(ent, 2, 0) as ent,\n        nom_ent,\n        lpad(mun, 3, 0) as mun,\n        nom_mun,\n        lpad(loc, 4, 0) as loc,\n        nom_loc,\n        lpad(ageb, 4, 0) as ageb,\n        lpad(mza, 3, 0) as mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from DP_SDNA_MX.SDNA_MX_DEV.inegi_2_stg\n)\nselect distinct\n    *\nfrom x\n)"}, {"id": "model.sdna_project.inegi2_step2", "sql": " __dbt__cte__inegi2_step2 as (\n\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        ent,\n        nom_ent,\n        mun,\n        nom_mun,\n        loc,\n        nom_loc,\n        concat(ent, mun, loc) as loc_cod,\n        ageb,\n        mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from __dbt__cte__inegi2_step1\n),\nurb as (\n    select distinct\n        localidad_codigo,\n        ambito\n    from DP_SDNA_MX.SDNA_MX_DEV.urbanicity\n)\nselect distinct\n    a.cvegeo,\n    a.vivtot,\n    a.tvivhab,\n    a.p_tvivhab,\n    a.tvivpar,\n    a.p_tvivpar,\n    a.tvivparhab,\n    a.pvivparhab,\n    a.vivpar_des,\n    a.p_vivpar_d,\n    a.vivpar_ut,\n    a.p_vivpar_u,\n    a.vivnohab,\n    a.p_vivnohab,\n    a.proocup_c,\n    a.pobtot,\n    a.p0a14a,\n    a.pp0a14a,\n    a.p15a29a,\n    a.pp15a29a,\n    a.p30a59a,\n    a.pp30a59a,\n    a.p_60ymas,\n    a.pp_60ymas,\n    a.pcon_lim,\n    a.ppcon_lim,\n    a.graproes,\n    a.ent,\n    a.nom_ent,\n    a.mun,\n    a.nom_mun,\n    a.loc,\n    a.nom_loc,\n    a.ageb,\n    a.mza,\n    b.ambito,\n    a.fecha_poli,\n    a.fecha_inf,\n    a.fecha_ceu,\n    a.oid,\n    a.geometry\nfrom x a\njoin urb b\non a.loc_cod = b.localidad_codigo\n)"}, {"id": "model.sdna_project.inegi2_step3", "sql": " __dbt__cte__inegi2_step3 as (\n\nselect distinct\n    cvegeo,\n    case when vivtot in ('N.D.','*','*********') then 0 else cast(vivtot as int) end as vivtot,\n    case when tvivhab in ('N.D.','*','*********') then 0 else cast(tvivhab as int) end as tvivhab,\n    case when p_tvivhab in ('N.D.','*','*********') then 0 else cast(p_tvivhab as decimal(5,2)) end as p_tvivhab,\n    case when tvivpar in ('N.D.','*','*********') then 0 else cast(tvivpar as int) end as tvivpar,\n    case when p_tvivpar in ('N.D.','*','*********') then 0 else cast(p_tvivpar as decimal(5,2)) end as p_tvivpar,\n    case when tvivparhaB in ('N.D.','*','*********') then 0 else cast(tvivparhab as int) end as tvivparhab,\n    case when pvivparhaB in ('N.D.','*','*********') then 0 else cast(pvivparhab as decimal(5,2)) end as pvivparhab,\n    case when vivpar_deS in ('N.D.','*','*********') then 0 else cast(vivpar_des as int) end as vivpar_des,\n    case when p_vivpar_D in ('N.D.','*','*********') then 0 else cast(p_vivpar_d as decimal(5,2)) end as p_vivpar_d,\n    case when vivpar_ut in ('N.D.','*','*********') then 0 else cast(vivpar_ut as int) end as vivpar_ut,\n    case when p_vivpar_U in ('N.D.','*','*********') then 0 else cast(p_vivpar_u as decimal(5,2)) end as p_vivpar_u,\n    case when vivnohab in ('N.D.','*','*********') then 0 else cast(vivnohab as int) end as vivnohab,\n    case when p_vivnohaB in ('N.D.','*','*********') then 0 else cast(p_vivnohab as decimal(5,2)) end as p_vivnohab,\n    case when proocup_c in ('N.D.','*','*********') then 0 else cast(proocup_c as decimal(10,2)) end as proocup_c,\n    case when pobtot in ('N.D.','*','*********') then 0 else cast(pobtot as int) end as pobtot,\n    case when p0a14a in ('N.D.','*','*********') then 0 else cast(p0a14a as int) end as p0a14a,\n    case when pp0a14a in ('N.D.','*','*********') then 0 else cast(pp0a14a as decimal(5,2)) end as pp0a14a,\n    case when p15a29a in ('N.D.','*','*********') then 0 else cast(p15a29a as int) end as p15a29a,\n    case when pp15a29a in ('N.D.','*','*********') then 0 else cast(pp15a29a as decimal(5,2)) end as pp15a29a,\n    case when p30a59a in ('N.D.','*','*********') then 0 else cast(p30a59a as int) end as p30a59a,\n    case when pp30a59a in ('N.D.','*','*********') then 0 else cast(pp30a59a as decimal(5,2)) end as pp30a59a,\n    case when p_60ymas in ('N.D.','*','*********') then 0 else cast(p_60ymas as int) end as p_60ymas,\n    case when pp_60ymas in ('N.D.','*','*********') then 0 else cast(pp_60ymas as decimal(5,2)) end as pp_60ymas,\n    case when pcon_lim in ('N.D.','*','*********') then 0 else cast(pcon_lim as int) end as pcon_lim,\n    case when ppcon_lim in ('N.D.','*','*********') then 0 else cast(ppcon_lim as decimal(5,2)) end as ppcon_lim,\n    case when graproes in ('N.D.','*','*********') then 0 else cast(graproes as decimal(10,2)) end as graproes,\n    ent,\n    nom_ent,\n    mun,\n    nom_mun,\n    loc,\n    nom_loc,\n    ageb,\n    mza,\n    ambito,\n    fecha_poli,\n    fecha_inf,\n    fecha_ceu,\n    oid,\n    geometry\nfrom __dbt__cte__inegi2_step2\n)"}], "relation_name": null}, "model.sdna_project.inegi2_step5": {"raw_sql": "{{ config(tags=[\"mx\", \"intermediate\"]) }}\nwith x as (\n    select\n        cvegeo,\n        round(p_0a2_f + p_3a5_f + p_6a11_f + p_12a14_f + (pob15_64*.51) + (pob65_mas*.51)) as f_pob,\n        round(p_0a2_m + p_3a5_m + p_6a11_m + p_12a14_m + (pob15_64*.49) + (pob65_mas*.49)) as m_pob\n    from\n        {{ ref('inegi') }}\n    group by\n        cvegeo,\n        p_0a2_f,\n        p_0a2_m,\n        p_3a5_f,\n        p_3a5_m,\n        p_6a11_f,\n        p_6a11_m,\n        p_12a14_f,\n        p_12a14_m,\n        pob15_64,\n        pob65_mas\n)\nselect distinct\n    a.cvegeo,\n    a.vivtot,\n    a.tvivhab,\n    a.p_tvivhab,\n    a.tvivpar,\n    a.p_tvivpar,\n    a.tvivparhab,\n    a.pvivparhab,\n    a.vivpar_des,\n    a.p_vivpar_d,\n    a.vivpar_ut,\n    a.p_vivpar_u,\n    a.vivnohab,\n    a.p_vivnohab,\n    a.proocup_c,\n    a.pobtot,\n    a.p0a14a,\n    a.pp0a14a,\n    a.p15a29a,\n    a.pp15a29a,\n    a.p30a59a,\n    a.pp30a59a,\n    a.p_60ymas,\n    a.pp_60ymas,\n    a.genz,\n    a.millenial,\n    a.genx,\n    a.baby_boomer,\n    a.a_b,\n    a.c_plus,\n    a.c,\n    a.c_minus,\n    a.d_plus,\n    a.d,\n    a.e,\n    f_pob,\n    m_pob,\n    a.pcon_lim,\n    a.ppcon_lim,\n    a.graproes,\n    a.ent,\n    a.nom_ent,\n    a.mun,\n    a.nom_mun,\n    a.loc,\n    a.nom_loc,\n    a.ageb,\n    a.mza,\n    a.ambito,\n    a.fecha_poli,\n    a.fecha_inf,\n    a.fecha_ceu,\n    a.oid,\n    a.geometry\nfrom {{ ref('inegi2_step4') }} a\njoin x\non a.cvegeo = x.cvegeo", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.inegi", "model.sdna_project.inegi2_step4"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "intermediate"], "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "intermediate", "inegi", "inegi2_step5"], "unique_id": "model.sdna_project.inegi2_step5", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/intermediate/inegi/inegi2_step5.sql", "original_file_path": "models/sdna_mx/intermediate/inegi/inegi2_step5.sql", "name": "inegi2_step5", "alias": "inegi2_step5", "checksum": {"name": "sha256", "checksum": "1e0cd1b1b58b4976ed34815e42ab66c0f19fb7033e28efc4189a2a621558b1fb"}, "tags": ["mx", "intermediate"], "refs": [["inegi"], ["inegi2_step4"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/intermediate/inegi/inegi2_step5.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "ephemeral", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "tags": ["mx", "intermediate"]}, "created_at": 1629326231, "compiled_sql": "\nwith  __dbt__cte__inegi2_step1 as (\n\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        lpad(ent, 2, 0) as ent,\n        nom_ent,\n        lpad(mun, 3, 0) as mun,\n        nom_mun,\n        lpad(loc, 4, 0) as loc,\n        nom_loc,\n        lpad(ageb, 4, 0) as ageb,\n        lpad(mza, 3, 0) as mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from DP_SDNA_MX.SDNA_MX_DEV.inegi_2_stg\n)\nselect distinct\n    *\nfrom x\n),  __dbt__cte__inegi2_step2 as (\n\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        ent,\n        nom_ent,\n        mun,\n        nom_mun,\n        loc,\n        nom_loc,\n        concat(ent, mun, loc) as loc_cod,\n        ageb,\n        mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from __dbt__cte__inegi2_step1\n),\nurb as (\n    select distinct\n        localidad_codigo,\n        ambito\n    from DP_SDNA_MX.SDNA_MX_DEV.urbanicity\n)\nselect distinct\n    a.cvegeo,\n    a.vivtot,\n    a.tvivhab,\n    a.p_tvivhab,\n    a.tvivpar,\n    a.p_tvivpar,\n    a.tvivparhab,\n    a.pvivparhab,\n    a.vivpar_des,\n    a.p_vivpar_d,\n    a.vivpar_ut,\n    a.p_vivpar_u,\n    a.vivnohab,\n    a.p_vivnohab,\n    a.proocup_c,\n    a.pobtot,\n    a.p0a14a,\n    a.pp0a14a,\n    a.p15a29a,\n    a.pp15a29a,\n    a.p30a59a,\n    a.pp30a59a,\n    a.p_60ymas,\n    a.pp_60ymas,\n    a.pcon_lim,\n    a.ppcon_lim,\n    a.graproes,\n    a.ent,\n    a.nom_ent,\n    a.mun,\n    a.nom_mun,\n    a.loc,\n    a.nom_loc,\n    a.ageb,\n    a.mza,\n    b.ambito,\n    a.fecha_poli,\n    a.fecha_inf,\n    a.fecha_ceu,\n    a.oid,\n    a.geometry\nfrom x a\njoin urb b\non a.loc_cod = b.localidad_codigo\n),  __dbt__cte__inegi2_step3 as (\n\nselect distinct\n    cvegeo,\n    case when vivtot in ('N.D.','*','*********') then 0 else cast(vivtot as int) end as vivtot,\n    case when tvivhab in ('N.D.','*','*********') then 0 else cast(tvivhab as int) end as tvivhab,\n    case when p_tvivhab in ('N.D.','*','*********') then 0 else cast(p_tvivhab as decimal(5,2)) end as p_tvivhab,\n    case when tvivpar in ('N.D.','*','*********') then 0 else cast(tvivpar as int) end as tvivpar,\n    case when p_tvivpar in ('N.D.','*','*********') then 0 else cast(p_tvivpar as decimal(5,2)) end as p_tvivpar,\n    case when tvivparhaB in ('N.D.','*','*********') then 0 else cast(tvivparhab as int) end as tvivparhab,\n    case when pvivparhaB in ('N.D.','*','*********') then 0 else cast(pvivparhab as decimal(5,2)) end as pvivparhab,\n    case when vivpar_deS in ('N.D.','*','*********') then 0 else cast(vivpar_des as int) end as vivpar_des,\n    case when p_vivpar_D in ('N.D.','*','*********') then 0 else cast(p_vivpar_d as decimal(5,2)) end as p_vivpar_d,\n    case when vivpar_ut in ('N.D.','*','*********') then 0 else cast(vivpar_ut as int) end as vivpar_ut,\n    case when p_vivpar_U in ('N.D.','*','*********') then 0 else cast(p_vivpar_u as decimal(5,2)) end as p_vivpar_u,\n    case when vivnohab in ('N.D.','*','*********') then 0 else cast(vivnohab as int) end as vivnohab,\n    case when p_vivnohaB in ('N.D.','*','*********') then 0 else cast(p_vivnohab as decimal(5,2)) end as p_vivnohab,\n    case when proocup_c in ('N.D.','*','*********') then 0 else cast(proocup_c as decimal(10,2)) end as proocup_c,\n    case when pobtot in ('N.D.','*','*********') then 0 else cast(pobtot as int) end as pobtot,\n    case when p0a14a in ('N.D.','*','*********') then 0 else cast(p0a14a as int) end as p0a14a,\n    case when pp0a14a in ('N.D.','*','*********') then 0 else cast(pp0a14a as decimal(5,2)) end as pp0a14a,\n    case when p15a29a in ('N.D.','*','*********') then 0 else cast(p15a29a as int) end as p15a29a,\n    case when pp15a29a in ('N.D.','*','*********') then 0 else cast(pp15a29a as decimal(5,2)) end as pp15a29a,\n    case when p30a59a in ('N.D.','*','*********') then 0 else cast(p30a59a as int) end as p30a59a,\n    case when pp30a59a in ('N.D.','*','*********') then 0 else cast(pp30a59a as decimal(5,2)) end as pp30a59a,\n    case when p_60ymas in ('N.D.','*','*********') then 0 else cast(p_60ymas as int) end as p_60ymas,\n    case when pp_60ymas in ('N.D.','*','*********') then 0 else cast(pp_60ymas as decimal(5,2)) end as pp_60ymas,\n    case when pcon_lim in ('N.D.','*','*********') then 0 else cast(pcon_lim as int) end as pcon_lim,\n    case when ppcon_lim in ('N.D.','*','*********') then 0 else cast(ppcon_lim as decimal(5,2)) end as ppcon_lim,\n    case when graproes in ('N.D.','*','*********') then 0 else cast(graproes as decimal(10,2)) end as graproes,\n    ent,\n    nom_ent,\n    mun,\n    nom_mun,\n    loc,\n    nom_loc,\n    ageb,\n    mza,\n    ambito,\n    fecha_poli,\n    fecha_inf,\n    fecha_ceu,\n    oid,\n    geometry\nfrom __dbt__cte__inegi2_step2\n),  __dbt__cte__inegi2_step4 as (\n\nselect distinct\n    cvegeo,\n    vivtot,\n    tvivhab,\n    p_tvivhab,\n    tvivpar,\n    p_tvivpar,\n    tvivparhab,\n    pvivparhab,\n    vivpar_des,\n    p_vivpar_d,\n    vivpar_ut,\n    p_vivpar_u,\n    vivnohab,\n    p_vivnohab,\n    proocup_c,\n    pobtot,\n    p0a14a,\n    pp0a14a,\n    p15a29a,\n    pp15a29a,\n    p30a59a,\n    pp30a59a,\n    p_60ymas,\n    pp_60ymas,\n    case when p15a29a >= 0 then round(p15a29a*.8) else 0 end as genz,\n    case when p15a29a >= 0 or p30a59a >= 0 then round((p15a29a*.2) + (p30a59a*.37)) else 0 end as millenial,\n    case when p30a59a >= 0  then round(p30a59a*.5) else 0 end as genx,\n    case when p30a59a >= 0 or p_60ymas >= 0 then round((p30a59a*.13) + p_60ymas) else 0 end as baby_boomer,\n    case when pobtot >= 0 then round(pobtot*a_b) else 0 end as a_b,\n    case when pobtot >= 0 then round(pobtot*c_plus) else 0 end as c_plus,\n    case when pobtot >= 0 then round(pobtot*c) else 0 end as c,\n    case when pobtot >= 0 then round(pobtot*c_minus) else 0 end as c_minus,\n    case when pobtot >= 0 then round(pobtot*d_plus) else 0 end as d_plus,\n    case when pobtot >= 0 then round(pobtot*d) else 0 end as d,\n    case when pobtot >= 0 then round(pobtot*e) else 0 end as e,\n    pcon_lim,\n    ppcon_lim,\n    graproes,\n    x.ent,\n    x.nom_ent,\n    mun,\n    nom_mun,\n    loc,\n    nom_loc,\n    ageb,\n    mza,\n    ambito,\n    fecha_poli,\n    fecha_inf,\n    fecha_ceu,\n    oid,\n    geometry\nfrom __dbt__cte__inegi2_step3 x\njoin DP_SDNA_MX.SDNA_MX_DEV.nse y\non x.ent = y.ent\n),x as (\n    select\n        cvegeo,\n        round(p_0a2_f + p_3a5_f + p_6a11_f + p_12a14_f + (pob15_64*.51) + (pob65_mas*.51)) as f_pob,\n        round(p_0a2_m + p_3a5_m + p_6a11_m + p_12a14_m + (pob15_64*.49) + (pob65_mas*.49)) as m_pob\n    from\n        DP_SDNA_MX.SDNA_MX_DEV.inegi\n    group by\n        cvegeo,\n        p_0a2_f,\n        p_0a2_m,\n        p_3a5_f,\n        p_3a5_m,\n        p_6a11_f,\n        p_6a11_m,\n        p_12a14_f,\n        p_12a14_m,\n        pob15_64,\n        pob65_mas\n)\nselect distinct\n    a.cvegeo,\n    a.vivtot,\n    a.tvivhab,\n    a.p_tvivhab,\n    a.tvivpar,\n    a.p_tvivpar,\n    a.tvivparhab,\n    a.pvivparhab,\n    a.vivpar_des,\n    a.p_vivpar_d,\n    a.vivpar_ut,\n    a.p_vivpar_u,\n    a.vivnohab,\n    a.p_vivnohab,\n    a.proocup_c,\n    a.pobtot,\n    a.p0a14a,\n    a.pp0a14a,\n    a.p15a29a,\n    a.pp15a29a,\n    a.p30a59a,\n    a.pp30a59a,\n    a.p_60ymas,\n    a.pp_60ymas,\n    a.genz,\n    a.millenial,\n    a.genx,\n    a.baby_boomer,\n    a.a_b,\n    a.c_plus,\n    a.c,\n    a.c_minus,\n    a.d_plus,\n    a.d,\n    a.e,\n    f_pob,\n    m_pob,\n    a.pcon_lim,\n    a.ppcon_lim,\n    a.graproes,\n    a.ent,\n    a.nom_ent,\n    a.mun,\n    a.nom_mun,\n    a.loc,\n    a.nom_loc,\n    a.ageb,\n    a.mza,\n    a.ambito,\n    a.fecha_poli,\n    a.fecha_inf,\n    a.fecha_ceu,\n    a.oid,\n    a.geometry\nfrom __dbt__cte__inegi2_step4 a\njoin x\non a.cvegeo = x.cvegeo", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sdna_project.inegi2_step1", "sql": " __dbt__cte__inegi2_step1 as (\n\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        lpad(ent, 2, 0) as ent,\n        nom_ent,\n        lpad(mun, 3, 0) as mun,\n        nom_mun,\n        lpad(loc, 4, 0) as loc,\n        nom_loc,\n        lpad(ageb, 4, 0) as ageb,\n        lpad(mza, 3, 0) as mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from DP_SDNA_MX.SDNA_MX_DEV.inegi_2_stg\n)\nselect distinct\n    *\nfrom x\n)"}, {"id": "model.sdna_project.inegi2_step2", "sql": " __dbt__cte__inegi2_step2 as (\n\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        ent,\n        nom_ent,\n        mun,\n        nom_mun,\n        loc,\n        nom_loc,\n        concat(ent, mun, loc) as loc_cod,\n        ageb,\n        mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from __dbt__cte__inegi2_step1\n),\nurb as (\n    select distinct\n        localidad_codigo,\n        ambito\n    from DP_SDNA_MX.SDNA_MX_DEV.urbanicity\n)\nselect distinct\n    a.cvegeo,\n    a.vivtot,\n    a.tvivhab,\n    a.p_tvivhab,\n    a.tvivpar,\n    a.p_tvivpar,\n    a.tvivparhab,\n    a.pvivparhab,\n    a.vivpar_des,\n    a.p_vivpar_d,\n    a.vivpar_ut,\n    a.p_vivpar_u,\n    a.vivnohab,\n    a.p_vivnohab,\n    a.proocup_c,\n    a.pobtot,\n    a.p0a14a,\n    a.pp0a14a,\n    a.p15a29a,\n    a.pp15a29a,\n    a.p30a59a,\n    a.pp30a59a,\n    a.p_60ymas,\n    a.pp_60ymas,\n    a.pcon_lim,\n    a.ppcon_lim,\n    a.graproes,\n    a.ent,\n    a.nom_ent,\n    a.mun,\n    a.nom_mun,\n    a.loc,\n    a.nom_loc,\n    a.ageb,\n    a.mza,\n    b.ambito,\n    a.fecha_poli,\n    a.fecha_inf,\n    a.fecha_ceu,\n    a.oid,\n    a.geometry\nfrom x a\njoin urb b\non a.loc_cod = b.localidad_codigo\n)"}, {"id": "model.sdna_project.inegi2_step3", "sql": " __dbt__cte__inegi2_step3 as (\n\nselect distinct\n    cvegeo,\n    case when vivtot in ('N.D.','*','*********') then 0 else cast(vivtot as int) end as vivtot,\n    case when tvivhab in ('N.D.','*','*********') then 0 else cast(tvivhab as int) end as tvivhab,\n    case when p_tvivhab in ('N.D.','*','*********') then 0 else cast(p_tvivhab as decimal(5,2)) end as p_tvivhab,\n    case when tvivpar in ('N.D.','*','*********') then 0 else cast(tvivpar as int) end as tvivpar,\n    case when p_tvivpar in ('N.D.','*','*********') then 0 else cast(p_tvivpar as decimal(5,2)) end as p_tvivpar,\n    case when tvivparhaB in ('N.D.','*','*********') then 0 else cast(tvivparhab as int) end as tvivparhab,\n    case when pvivparhaB in ('N.D.','*','*********') then 0 else cast(pvivparhab as decimal(5,2)) end as pvivparhab,\n    case when vivpar_deS in ('N.D.','*','*********') then 0 else cast(vivpar_des as int) end as vivpar_des,\n    case when p_vivpar_D in ('N.D.','*','*********') then 0 else cast(p_vivpar_d as decimal(5,2)) end as p_vivpar_d,\n    case when vivpar_ut in ('N.D.','*','*********') then 0 else cast(vivpar_ut as int) end as vivpar_ut,\n    case when p_vivpar_U in ('N.D.','*','*********') then 0 else cast(p_vivpar_u as decimal(5,2)) end as p_vivpar_u,\n    case when vivnohab in ('N.D.','*','*********') then 0 else cast(vivnohab as int) end as vivnohab,\n    case when p_vivnohaB in ('N.D.','*','*********') then 0 else cast(p_vivnohab as decimal(5,2)) end as p_vivnohab,\n    case when proocup_c in ('N.D.','*','*********') then 0 else cast(proocup_c as decimal(10,2)) end as proocup_c,\n    case when pobtot in ('N.D.','*','*********') then 0 else cast(pobtot as int) end as pobtot,\n    case when p0a14a in ('N.D.','*','*********') then 0 else cast(p0a14a as int) end as p0a14a,\n    case when pp0a14a in ('N.D.','*','*********') then 0 else cast(pp0a14a as decimal(5,2)) end as pp0a14a,\n    case when p15a29a in ('N.D.','*','*********') then 0 else cast(p15a29a as int) end as p15a29a,\n    case when pp15a29a in ('N.D.','*','*********') then 0 else cast(pp15a29a as decimal(5,2)) end as pp15a29a,\n    case when p30a59a in ('N.D.','*','*********') then 0 else cast(p30a59a as int) end as p30a59a,\n    case when pp30a59a in ('N.D.','*','*********') then 0 else cast(pp30a59a as decimal(5,2)) end as pp30a59a,\n    case when p_60ymas in ('N.D.','*','*********') then 0 else cast(p_60ymas as int) end as p_60ymas,\n    case when pp_60ymas in ('N.D.','*','*********') then 0 else cast(pp_60ymas as decimal(5,2)) end as pp_60ymas,\n    case when pcon_lim in ('N.D.','*','*********') then 0 else cast(pcon_lim as int) end as pcon_lim,\n    case when ppcon_lim in ('N.D.','*','*********') then 0 else cast(ppcon_lim as decimal(5,2)) end as ppcon_lim,\n    case when graproes in ('N.D.','*','*********') then 0 else cast(graproes as decimal(10,2)) end as graproes,\n    ent,\n    nom_ent,\n    mun,\n    nom_mun,\n    loc,\n    nom_loc,\n    ageb,\n    mza,\n    ambito,\n    fecha_poli,\n    fecha_inf,\n    fecha_ceu,\n    oid,\n    geometry\nfrom __dbt__cte__inegi2_step2\n)"}, {"id": "model.sdna_project.inegi2_step4", "sql": " __dbt__cte__inegi2_step4 as (\n\nselect distinct\n    cvegeo,\n    vivtot,\n    tvivhab,\n    p_tvivhab,\n    tvivpar,\n    p_tvivpar,\n    tvivparhab,\n    pvivparhab,\n    vivpar_des,\n    p_vivpar_d,\n    vivpar_ut,\n    p_vivpar_u,\n    vivnohab,\n    p_vivnohab,\n    proocup_c,\n    pobtot,\n    p0a14a,\n    pp0a14a,\n    p15a29a,\n    pp15a29a,\n    p30a59a,\n    pp30a59a,\n    p_60ymas,\n    pp_60ymas,\n    case when p15a29a >= 0 then round(p15a29a*.8) else 0 end as genz,\n    case when p15a29a >= 0 or p30a59a >= 0 then round((p15a29a*.2) + (p30a59a*.37)) else 0 end as millenial,\n    case when p30a59a >= 0  then round(p30a59a*.5) else 0 end as genx,\n    case when p30a59a >= 0 or p_60ymas >= 0 then round((p30a59a*.13) + p_60ymas) else 0 end as baby_boomer,\n    case when pobtot >= 0 then round(pobtot*a_b) else 0 end as a_b,\n    case when pobtot >= 0 then round(pobtot*c_plus) else 0 end as c_plus,\n    case when pobtot >= 0 then round(pobtot*c) else 0 end as c,\n    case when pobtot >= 0 then round(pobtot*c_minus) else 0 end as c_minus,\n    case when pobtot >= 0 then round(pobtot*d_plus) else 0 end as d_plus,\n    case when pobtot >= 0 then round(pobtot*d) else 0 end as d,\n    case when pobtot >= 0 then round(pobtot*e) else 0 end as e,\n    pcon_lim,\n    ppcon_lim,\n    graproes,\n    x.ent,\n    x.nom_ent,\n    mun,\n    nom_mun,\n    loc,\n    nom_loc,\n    ageb,\n    mza,\n    ambito,\n    fecha_poli,\n    fecha_inf,\n    fecha_ceu,\n    oid,\n    geometry\nfrom __dbt__cte__inegi2_step3 x\njoin DP_SDNA_MX.SDNA_MX_DEV.nse y\non x.ent = y.ent\n)"}], "relation_name": null}, "model.sdna_project.stg_lookup": {"raw_sql": "select\n    unit_code as geo_code,\n    name as state,\n    centroid as centroid\n\nfrom dp_data_share_aws_to_az_replica.mapbox.mapbox_lookup_adm1\nwhere country = 'MX'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "intermediate", "mobility", "stg_lookup"], "unique_id": "model.sdna_project.stg_lookup", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/intermediate/mobility/stg_lookup.sql", "original_file_path": "models/sdna_mx/intermediate/mobility/stg_lookup.sql", "name": "stg_lookup", "alias": "stg_lookup", "checksum": {"name": "sha256", "checksum": "832e570a21ea7d6c300a19a222465dbe93b02d856962b5511bc9851ae8967bc4"}, "tags": [], "refs": [], "sources": [], "description": "Geocode lookup", "columns": {"geo_code": {"name": "geo_code", "description": "The primary key for this table", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "sdna_project://models/sdna_mx/transformations/mobility/mobility.yml", "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/intermediate/mobility/stg_lookup.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "ephemeral", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "select\n    unit_code as geo_code,\n    name as state,\n    centroid as centroid\n\nfrom dp_data_share_aws_to_az_replica.mapbox.mapbox_lookup_adm1\nwhere country = 'MX'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.sdna_project.stg_mobility_data": {"raw_sql": "select\n    geography as geo_code,\n    agg_day_period as agg_day,\n    activity_index_total as activity_index_total\n\nfrom dp_data_share_aws_to_az_replica.mapbox.mapbox_v0_2_daily_adm1_total\nwhere country = 'MX'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "intermediate", "mobility", "stg_mobility_data"], "unique_id": "model.sdna_project.stg_mobility_data", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/intermediate/mobility/stg_mobility_data.sql", "original_file_path": "models/sdna_mx/intermediate/mobility/stg_mobility_data.sql", "name": "stg_mobility_data", "alias": "stg_mobility_data", "checksum": {"name": "sha256", "checksum": "f24da07991d7b2434e4d9fb8528a730fbe408af74b4e73b3ffd5bf52b8bb2a20"}, "tags": [], "refs": [], "sources": [], "description": "Raw mobility data", "columns": {"geo_code": {"name": "geo_code", "description": "Foreign key -- lookup table", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "sdna_project://models/sdna_mx/transformations/mobility/mobility.yml", "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/intermediate/mobility/stg_mobility_data.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "ephemeral", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "select\n    geography as geo_code,\n    agg_day_period as agg_day,\n    activity_index_total as activity_index_total\n\nfrom dp_data_share_aws_to_az_replica.mapbox.mapbox_v0_2_daily_adm1_total\nwhere country = 'MX'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.sdna_project.tradearea_df_lf": {"raw_sql": "{{ config(tags=[\"mx\", \"intermediate\"]) }}\nSELECT\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'DF_LF' AS group_type,\n    3 AS group_value\nFROM {{ ref('mx_stores') }}\nJOIN {{ ref('inegi_2') }}\nWHERE (\n       format = 'LF' AND des_edo IN ('DISTRITO FEDERAL', '%D F%', 'D. F.', 'D.F.', 'DISTITO FEDERAL')\n    OR format = 'LF' AND des_edo IN ('NUEVO LEON')           AND des_municipio IN ('MONTERREY')\n    OR format = 'LF' AND des_edo IN ('JALISCO')              AND des_municipio IN ('GUADALAJARA')\n    OR format = 'LF' AND des_edo IN ('PUEBLA')               AND des_municipio IN ('PUEBLA')\n    OR format = 'LF' AND des_edo IN ('MEXICO')               AND des_municipio IN ('TOLUCA')\n)\n    AND ST_DWITHIN(TO_GEOGRAPHY(ST_MAKEPOINT(long ,lat)), geometry, 1000)\nGROUP BY\n    id_cliente,\n    format", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mx_stores", "model.sdna_project.inegi_2"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "intermediate"], "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "intermediate", "tradearea", "tradearea_df_lf"], "unique_id": "model.sdna_project.tradearea_df_lf", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/intermediate/tradearea/tradearea_df_lf.sql", "original_file_path": "models/sdna_mx/intermediate/tradearea/tradearea_df_lf.sql", "name": "tradearea_df_lf", "alias": "tradearea_df_lf", "checksum": {"name": "sha256", "checksum": "3a882e7610ffd37f2bae5ff50837c684f0d34c218925f945d0ff672558db2c03"}, "tags": ["mx", "intermediate"], "refs": [["mx_stores"], ["inegi_2"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/intermediate/tradearea/tradearea_df_lf.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "ephemeral", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "tags": ["mx", "intermediate"]}, "created_at": 1629326231, "compiled_sql": "\nSELECT\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'DF_LF' AS group_type,\n    3 AS group_value\nFROM DP_SDNA_MX.SDNA_MX_DEV.mx_stores\nJOIN DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nWHERE (\n       format = 'LF' AND des_edo IN ('DISTRITO FEDERAL', '%D F%', 'D. F.', 'D.F.', 'DISTITO FEDERAL')\n    OR format = 'LF' AND des_edo IN ('NUEVO LEON')           AND des_municipio IN ('MONTERREY')\n    OR format = 'LF' AND des_edo IN ('JALISCO')              AND des_municipio IN ('GUADALAJARA')\n    OR format = 'LF' AND des_edo IN ('PUEBLA')               AND des_municipio IN ('PUEBLA')\n    OR format = 'LF' AND des_edo IN ('MEXICO')               AND des_municipio IN ('TOLUCA')\n)\n    AND ST_DWITHIN(TO_GEOGRAPHY(ST_MAKEPOINT(long ,lat)), geometry, 1000)\nGROUP BY\n    id_cliente,\n    format", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.sdna_project.tradearea_df_sf": {"raw_sql": "{{ config(tags=[\"mx\", \"intermediate\"]) }}\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'DF_SF' AS group_type,\n    3 AS group_value\nfrom {{ ref('mx_stores') }}\njoin {{ ref('inegi_2') }}\nwhere (\n       format = 'SF' AND des_edo IN ('DISTRITO FEDERAL', '%D F%', 'D. F.', 'D.F.', 'DISTITO FEDERAL')\n    OR format = 'SF' AND des_edo IN ('NUEVO LEON')           AND des_municipio IN ('MONTERREY')\n    OR format = 'SF' AND des_edo IN ('JALISCO')              AND des_municipio IN ('GUADALAJARA')\n    OR format = 'SF' AND des_edo IN ('PUEBLA')               AND des_municipio IN ('PUEBLA')\n    OR format = 'SF' AND des_edo IN ('MEXICO')               AND des_municipio IN ('TOLUCA')\n)\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 300)\ngroup by\n    id_cliente,\n    format", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mx_stores", "model.sdna_project.inegi_2"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "intermediate"], "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "intermediate", "tradearea", "tradearea_df_sf"], "unique_id": "model.sdna_project.tradearea_df_sf", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/intermediate/tradearea/tradearea_df_sf.sql", "original_file_path": "models/sdna_mx/intermediate/tradearea/tradearea_df_sf.sql", "name": "tradearea_df_sf", "alias": "tradearea_df_sf", "checksum": {"name": "sha256", "checksum": "cb562d6d75ce5052887352290c0d760d9dc032b56bb253d870fc9f5be3637894"}, "tags": ["mx", "intermediate"], "refs": [["mx_stores"], ["inegi_2"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/intermediate/tradearea/tradearea_df_sf.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "ephemeral", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "tags": ["mx", "intermediate"]}, "created_at": 1629326231, "compiled_sql": "\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'DF_SF' AS group_type,\n    3 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere (\n       format = 'SF' AND des_edo IN ('DISTRITO FEDERAL', '%D F%', 'D. F.', 'D.F.', 'DISTITO FEDERAL')\n    OR format = 'SF' AND des_edo IN ('NUEVO LEON')           AND des_municipio IN ('MONTERREY')\n    OR format = 'SF' AND des_edo IN ('JALISCO')              AND des_municipio IN ('GUADALAJARA')\n    OR format = 'SF' AND des_edo IN ('PUEBLA')               AND des_municipio IN ('PUEBLA')\n    OR format = 'SF' AND des_edo IN ('MEXICO')               AND des_municipio IN ('TOLUCA')\n)\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 300)\ngroup by\n    id_cliente,\n    format", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.sdna_project.tradearea_r_lf": {"raw_sql": "{{ config(tags=[\"mx\", \"intermediate\"]) }}\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'R_LF' as group_type,\n    1 AS group_value\nfrom {{ ref('mx_stores') }}\njoin {{ ref('inegi_2') }}\nwhere ambito in ('R', null)\n    and format = 'LF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 5000)\ngroup by\n    id_cliente,\n    format", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mx_stores", "model.sdna_project.inegi_2"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "intermediate"], "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "intermediate", "tradearea", "tradearea_r_lf"], "unique_id": "model.sdna_project.tradearea_r_lf", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/intermediate/tradearea/tradearea_r_lf.sql", "original_file_path": "models/sdna_mx/intermediate/tradearea/tradearea_r_lf.sql", "name": "tradearea_r_lf", "alias": "tradearea_r_lf", "checksum": {"name": "sha256", "checksum": "0c1d3504577fedcd7b96128f60272367f838fdc839820ba99c85b2132e765adf"}, "tags": ["mx", "intermediate"], "refs": [["mx_stores"], ["inegi_2"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/intermediate/tradearea/tradearea_r_lf.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "ephemeral", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "tags": ["mx", "intermediate"]}, "created_at": 1629326231, "compiled_sql": "\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'R_LF' as group_type,\n    1 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito in ('R', null)\n    and format = 'LF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 5000)\ngroup by\n    id_cliente,\n    format", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.sdna_project.tradearea_r_sf": {"raw_sql": "{{ config(tags=[\"mx\", \"intermediate\"]) }}\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'R_SF' as group_type,\n    1 AS group_value\nfrom {{ ref('mx_stores') }}\njoin {{ ref('inegi_2') }}\nwhere ambito in ('R', null)\n    and format = 'SF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 5000)\ngroup by\n    id_cliente,\n    format", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mx_stores", "model.sdna_project.inegi_2"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "intermediate"], "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "intermediate", "tradearea", "tradearea_r_sf"], "unique_id": "model.sdna_project.tradearea_r_sf", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/intermediate/tradearea/tradearea_r_sf.sql", "original_file_path": "models/sdna_mx/intermediate/tradearea/tradearea_r_sf.sql", "name": "tradearea_r_sf", "alias": "tradearea_r_sf", "checksum": {"name": "sha256", "checksum": "e7435e55996123dba44f3af3800a14512209d8750aaaa2bc356e7a17f1748a8a"}, "tags": ["mx", "intermediate"], "refs": [["mx_stores"], ["inegi_2"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/intermediate/tradearea/tradearea_r_sf.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "ephemeral", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "tags": ["mx", "intermediate"]}, "created_at": 1629326231, "compiled_sql": "\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'R_SF' as group_type,\n    1 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito in ('R', null)\n    and format = 'SF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 5000)\ngroup by\n    id_cliente,\n    format", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.sdna_project.tradearea_ranked_step3": {"raw_sql": "{{ config(tags=[\"mx\", \"intermediate\"]) }}\nSELECT\n    id_cliente,\n    manzana_count,\n    vivtot,\n    tvivhab,\n    p_tvivhab,\n    tvivpar,\n    p_tvivpar,\n    tvivparhab,\n    pvivparhab,\n    vivpar_des,\n    p_vivpar_d,\n    vivpar_ut,\n    p_vivpar_u,\n    vivnohab,\n    p_vivnohab,\n    proocup_c,\n    pobtot,\n    p0a14a,\n    pp0a14a,\n    p15a29a,\n    pp15a29a,\n    p30a59a,\n    pp30a59a,\n    p_60ymas,\n    pp_60ymas,\n    genz,\n    millenial,\n    genx,\n    baby_boomer,\n    a_b,\n    c_plus,\n    c,\n    c_minus,\n    d_plus,\n    d,\n    e,\n    f_pob,\n    m_pob,\n    pcon_lim,\n    ppcon_lim,\n    y_fam,\n    o_fam,\n    pre_fam,\n    post_fam,\n    graproes,\n    format,\n    group_type,\n    group_value,\n    first_value(group_value) over (partition by id_cliente order by group_value desc) as max_group_value\nFROM {{ ref('tradearea_union_step2') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.tradearea_union_step2"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "intermediate"], "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "intermediate", "tradearea", "tradearea_ranked_step3"], "unique_id": "model.sdna_project.tradearea_ranked_step3", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/intermediate/tradearea/tradearea_ranked_step3.sql", "original_file_path": "models/sdna_mx/intermediate/tradearea/tradearea_ranked_step3.sql", "name": "tradearea_ranked_step3", "alias": "tradearea_ranked_step3", "checksum": {"name": "sha256", "checksum": "fd1be2d33274716d17ff0c97cba856fd4ef4e04effe23c9df4b5ea63592102db"}, "tags": ["mx", "intermediate"], "refs": [["tradearea_union_step2"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/intermediate/tradearea/tradearea_ranked_step3.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "ephemeral", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "tags": ["mx", "intermediate"]}, "created_at": 1629326231, "compiled_sql": "\nwith __dbt__cte__tradearea_df_lf as (\n\nSELECT\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'DF_LF' AS group_type,\n    3 AS group_value\nFROM DP_SDNA_MX.SDNA_MX_DEV.mx_stores\nJOIN DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nWHERE (\n       format = 'LF' AND des_edo IN ('DISTRITO FEDERAL', '%D F%', 'D. F.', 'D.F.', 'DISTITO FEDERAL')\n    OR format = 'LF' AND des_edo IN ('NUEVO LEON')           AND des_municipio IN ('MONTERREY')\n    OR format = 'LF' AND des_edo IN ('JALISCO')              AND des_municipio IN ('GUADALAJARA')\n    OR format = 'LF' AND des_edo IN ('PUEBLA')               AND des_municipio IN ('PUEBLA')\n    OR format = 'LF' AND des_edo IN ('MEXICO')               AND des_municipio IN ('TOLUCA')\n)\n    AND ST_DWITHIN(TO_GEOGRAPHY(ST_MAKEPOINT(long ,lat)), geometry, 1000)\nGROUP BY\n    id_cliente,\n    format\n),  __dbt__cte__tradearea_df_sf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'DF_SF' AS group_type,\n    3 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere (\n       format = 'SF' AND des_edo IN ('DISTRITO FEDERAL', '%D F%', 'D. F.', 'D.F.', 'DISTITO FEDERAL')\n    OR format = 'SF' AND des_edo IN ('NUEVO LEON')           AND des_municipio IN ('MONTERREY')\n    OR format = 'SF' AND des_edo IN ('JALISCO')              AND des_municipio IN ('GUADALAJARA')\n    OR format = 'SF' AND des_edo IN ('PUEBLA')               AND des_municipio IN ('PUEBLA')\n    OR format = 'SF' AND des_edo IN ('MEXICO')               AND des_municipio IN ('TOLUCA')\n)\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 300)\ngroup by\n    id_cliente,\n    format\n),  __dbt__cte__tradearea_r_lf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'R_LF' as group_type,\n    1 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito in ('R', null)\n    and format = 'LF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 5000)\ngroup by\n    id_cliente,\n    format\n),  __dbt__cte__tradearea_r_sf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'R_SF' as group_type,\n    1 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito in ('R', null)\n    and format = 'SF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 5000)\ngroup by\n    id_cliente,\n    format\n),  __dbt__cte__tradearea_u_lf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'U_LF' as group_type,\n    2 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito = 'U'\n    and format = 'LF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 2000)\ngroup by\n    id_cliente,\n    format\n),  __dbt__cte__tradearea_u_sf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'U_SF' as group_type,\n    2 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito = 'U'\n    and format = 'SF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 1000)\ngroup by\n    id_cliente,\n    format\n),  __dbt__cte__tradearea_union_step2 as (\n\nselect * from __dbt__cte__tradearea_df_lf\nunion all\nselect * from __dbt__cte__tradearea_df_sf\nunion all\nselect * from __dbt__cte__tradearea_r_lf\nunion all\nselect * from __dbt__cte__tradearea_r_sf\nunion all\nselect * from __dbt__cte__tradearea_u_lf\nunion all\nselect * from __dbt__cte__tradearea_u_sf\n)SELECT\n    id_cliente,\n    manzana_count,\n    vivtot,\n    tvivhab,\n    p_tvivhab,\n    tvivpar,\n    p_tvivpar,\n    tvivparhab,\n    pvivparhab,\n    vivpar_des,\n    p_vivpar_d,\n    vivpar_ut,\n    p_vivpar_u,\n    vivnohab,\n    p_vivnohab,\n    proocup_c,\n    pobtot,\n    p0a14a,\n    pp0a14a,\n    p15a29a,\n    pp15a29a,\n    p30a59a,\n    pp30a59a,\n    p_60ymas,\n    pp_60ymas,\n    genz,\n    millenial,\n    genx,\n    baby_boomer,\n    a_b,\n    c_plus,\n    c,\n    c_minus,\n    d_plus,\n    d,\n    e,\n    f_pob,\n    m_pob,\n    pcon_lim,\n    ppcon_lim,\n    y_fam,\n    o_fam,\n    pre_fam,\n    post_fam,\n    graproes,\n    format,\n    group_type,\n    group_value,\n    first_value(group_value) over (partition by id_cliente order by group_value desc) as max_group_value\nFROM __dbt__cte__tradearea_union_step2", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sdna_project.tradearea_df_lf", "sql": " __dbt__cte__tradearea_df_lf as (\n\nSELECT\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'DF_LF' AS group_type,\n    3 AS group_value\nFROM DP_SDNA_MX.SDNA_MX_DEV.mx_stores\nJOIN DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nWHERE (\n       format = 'LF' AND des_edo IN ('DISTRITO FEDERAL', '%D F%', 'D. F.', 'D.F.', 'DISTITO FEDERAL')\n    OR format = 'LF' AND des_edo IN ('NUEVO LEON')           AND des_municipio IN ('MONTERREY')\n    OR format = 'LF' AND des_edo IN ('JALISCO')              AND des_municipio IN ('GUADALAJARA')\n    OR format = 'LF' AND des_edo IN ('PUEBLA')               AND des_municipio IN ('PUEBLA')\n    OR format = 'LF' AND des_edo IN ('MEXICO')               AND des_municipio IN ('TOLUCA')\n)\n    AND ST_DWITHIN(TO_GEOGRAPHY(ST_MAKEPOINT(long ,lat)), geometry, 1000)\nGROUP BY\n    id_cliente,\n    format\n)"}, {"id": "model.sdna_project.tradearea_df_sf", "sql": " __dbt__cte__tradearea_df_sf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'DF_SF' AS group_type,\n    3 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere (\n       format = 'SF' AND des_edo IN ('DISTRITO FEDERAL', '%D F%', 'D. F.', 'D.F.', 'DISTITO FEDERAL')\n    OR format = 'SF' AND des_edo IN ('NUEVO LEON')           AND des_municipio IN ('MONTERREY')\n    OR format = 'SF' AND des_edo IN ('JALISCO')              AND des_municipio IN ('GUADALAJARA')\n    OR format = 'SF' AND des_edo IN ('PUEBLA')               AND des_municipio IN ('PUEBLA')\n    OR format = 'SF' AND des_edo IN ('MEXICO')               AND des_municipio IN ('TOLUCA')\n)\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 300)\ngroup by\n    id_cliente,\n    format\n)"}, {"id": "model.sdna_project.tradearea_r_lf", "sql": " __dbt__cte__tradearea_r_lf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'R_LF' as group_type,\n    1 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito in ('R', null)\n    and format = 'LF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 5000)\ngroup by\n    id_cliente,\n    format\n)"}, {"id": "model.sdna_project.tradearea_r_sf", "sql": " __dbt__cte__tradearea_r_sf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'R_SF' as group_type,\n    1 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito in ('R', null)\n    and format = 'SF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 5000)\ngroup by\n    id_cliente,\n    format\n)"}, {"id": "model.sdna_project.tradearea_u_lf", "sql": " __dbt__cte__tradearea_u_lf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'U_LF' as group_type,\n    2 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito = 'U'\n    and format = 'LF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 2000)\ngroup by\n    id_cliente,\n    format\n)"}, {"id": "model.sdna_project.tradearea_u_sf", "sql": " __dbt__cte__tradearea_u_sf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'U_SF' as group_type,\n    2 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito = 'U'\n    and format = 'SF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 1000)\ngroup by\n    id_cliente,\n    format\n)"}, {"id": "model.sdna_project.tradearea_union_step2", "sql": " __dbt__cte__tradearea_union_step2 as (\n\nselect * from __dbt__cte__tradearea_df_lf\nunion all\nselect * from __dbt__cte__tradearea_df_sf\nunion all\nselect * from __dbt__cte__tradearea_r_lf\nunion all\nselect * from __dbt__cte__tradearea_r_sf\nunion all\nselect * from __dbt__cte__tradearea_u_lf\nunion all\nselect * from __dbt__cte__tradearea_u_sf\n)"}], "relation_name": null}, "model.sdna_project.tradearea_u_lf": {"raw_sql": "{{ config(tags=[\"mx\", \"intermediate\"]) }}\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'U_LF' as group_type,\n    2 AS group_value\nfrom {{ ref('mx_stores') }}\njoin {{ ref('inegi_2') }}\nwhere ambito = 'U'\n    and format = 'LF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 2000)\ngroup by\n    id_cliente,\n    format", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mx_stores", "model.sdna_project.inegi_2"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "intermediate"], "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "intermediate", "tradearea", "tradearea_u_lf"], "unique_id": "model.sdna_project.tradearea_u_lf", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/intermediate/tradearea/tradearea_u_lf.sql", "original_file_path": "models/sdna_mx/intermediate/tradearea/tradearea_u_lf.sql", "name": "tradearea_u_lf", "alias": "tradearea_u_lf", "checksum": {"name": "sha256", "checksum": "b5dc5c0785c1ee26fd401537534aabb857ec58bfa137e72ad6c76d6656cf5f30"}, "tags": ["mx", "intermediate"], "refs": [["mx_stores"], ["inegi_2"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/intermediate/tradearea/tradearea_u_lf.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "ephemeral", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "tags": ["mx", "intermediate"]}, "created_at": 1629326231, "compiled_sql": "\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'U_LF' as group_type,\n    2 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito = 'U'\n    and format = 'LF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 2000)\ngroup by\n    id_cliente,\n    format", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.sdna_project.tradearea_u_sf": {"raw_sql": "{{ config(tags=[\"mx\", \"intermediate\"]) }}\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'U_SF' as group_type,\n    2 AS group_value\nfrom {{ ref('mx_stores') }}\njoin {{ ref('inegi_2') }}\nwhere ambito = 'U'\n    and format = 'SF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 1000)\ngroup by\n    id_cliente,\n    format", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mx_stores", "model.sdna_project.inegi_2"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "intermediate"], "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "intermediate", "tradearea", "tradearea_u_sf"], "unique_id": "model.sdna_project.tradearea_u_sf", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/intermediate/tradearea/tradearea_u_sf.sql", "original_file_path": "models/sdna_mx/intermediate/tradearea/tradearea_u_sf.sql", "name": "tradearea_u_sf", "alias": "tradearea_u_sf", "checksum": {"name": "sha256", "checksum": "96f9bd89ce8e5e44bd3977315d6da1983b5b094c7537c297c8cd70af81738d6d"}, "tags": ["mx", "intermediate"], "refs": [["mx_stores"], ["inegi_2"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/intermediate/tradearea/tradearea_u_sf.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "ephemeral", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "tags": ["mx", "intermediate"]}, "created_at": 1629326231, "compiled_sql": "\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'U_SF' as group_type,\n    2 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito = 'U'\n    and format = 'SF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 1000)\ngroup by\n    id_cliente,\n    format", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.sdna_project.tradearea_union_step2": {"raw_sql": "{{ config(tags=[\"mx\", \"intermediate\", \"refresh_quarterly\"]) }}\nselect * from {{ ref('tradearea_df_lf') }}\nunion all\nselect * from {{ ref('tradearea_df_sf') }}\nunion all\nselect * from {{ ref('tradearea_r_lf') }}\nunion all\nselect * from {{ ref('tradearea_r_sf') }}\nunion all\nselect * from {{ ref('tradearea_u_lf') }}\nunion all\nselect * from {{ ref('tradearea_u_sf') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.tradearea_df_lf", "model.sdna_project.tradearea_df_sf", "model.sdna_project.tradearea_r_lf", "model.sdna_project.tradearea_r_sf", "model.sdna_project.tradearea_u_lf", "model.sdna_project.tradearea_u_sf"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "intermediate", "refresh_quarterly"], "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "intermediate", "tradearea", "tradearea_union_step2"], "unique_id": "model.sdna_project.tradearea_union_step2", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/intermediate/tradearea/tradearea_union_step2.sql", "original_file_path": "models/sdna_mx/intermediate/tradearea/tradearea_union_step2.sql", "name": "tradearea_union_step2", "alias": "tradearea_union_step2", "checksum": {"name": "sha256", "checksum": "d25eb41e2816a06a323d951712e708108779746abe236d2c9d58c0b5e5186cef"}, "tags": ["mx", "intermediate", "refresh_quarterly"], "refs": [["tradearea_df_lf"], ["tradearea_df_sf"], ["tradearea_r_lf"], ["tradearea_r_sf"], ["tradearea_u_lf"], ["tradearea_u_sf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/intermediate/tradearea/tradearea_union_step2.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "ephemeral", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "tags": ["mx", "intermediate", "refresh_quarterly"]}, "created_at": 1629326231, "compiled_sql": "\nwith __dbt__cte__tradearea_df_lf as (\n\nSELECT\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'DF_LF' AS group_type,\n    3 AS group_value\nFROM DP_SDNA_MX.SDNA_MX_DEV.mx_stores\nJOIN DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nWHERE (\n       format = 'LF' AND des_edo IN ('DISTRITO FEDERAL', '%D F%', 'D. F.', 'D.F.', 'DISTITO FEDERAL')\n    OR format = 'LF' AND des_edo IN ('NUEVO LEON')           AND des_municipio IN ('MONTERREY')\n    OR format = 'LF' AND des_edo IN ('JALISCO')              AND des_municipio IN ('GUADALAJARA')\n    OR format = 'LF' AND des_edo IN ('PUEBLA')               AND des_municipio IN ('PUEBLA')\n    OR format = 'LF' AND des_edo IN ('MEXICO')               AND des_municipio IN ('TOLUCA')\n)\n    AND ST_DWITHIN(TO_GEOGRAPHY(ST_MAKEPOINT(long ,lat)), geometry, 1000)\nGROUP BY\n    id_cliente,\n    format\n),  __dbt__cte__tradearea_df_sf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'DF_SF' AS group_type,\n    3 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere (\n       format = 'SF' AND des_edo IN ('DISTRITO FEDERAL', '%D F%', 'D. F.', 'D.F.', 'DISTITO FEDERAL')\n    OR format = 'SF' AND des_edo IN ('NUEVO LEON')           AND des_municipio IN ('MONTERREY')\n    OR format = 'SF' AND des_edo IN ('JALISCO')              AND des_municipio IN ('GUADALAJARA')\n    OR format = 'SF' AND des_edo IN ('PUEBLA')               AND des_municipio IN ('PUEBLA')\n    OR format = 'SF' AND des_edo IN ('MEXICO')               AND des_municipio IN ('TOLUCA')\n)\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 300)\ngroup by\n    id_cliente,\n    format\n),  __dbt__cte__tradearea_r_lf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'R_LF' as group_type,\n    1 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito in ('R', null)\n    and format = 'LF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 5000)\ngroup by\n    id_cliente,\n    format\n),  __dbt__cte__tradearea_r_sf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'R_SF' as group_type,\n    1 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito in ('R', null)\n    and format = 'SF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 5000)\ngroup by\n    id_cliente,\n    format\n),  __dbt__cte__tradearea_u_lf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'U_LF' as group_type,\n    2 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito = 'U'\n    and format = 'LF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 2000)\ngroup by\n    id_cliente,\n    format\n),  __dbt__cte__tradearea_u_sf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'U_SF' as group_type,\n    2 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito = 'U'\n    and format = 'SF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 1000)\ngroup by\n    id_cliente,\n    format\n)select * from __dbt__cte__tradearea_df_lf\nunion all\nselect * from __dbt__cte__tradearea_df_sf\nunion all\nselect * from __dbt__cte__tradearea_r_lf\nunion all\nselect * from __dbt__cte__tradearea_r_sf\nunion all\nselect * from __dbt__cte__tradearea_u_lf\nunion all\nselect * from __dbt__cte__tradearea_u_sf", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sdna_project.tradearea_df_lf", "sql": " __dbt__cte__tradearea_df_lf as (\n\nSELECT\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'DF_LF' AS group_type,\n    3 AS group_value\nFROM DP_SDNA_MX.SDNA_MX_DEV.mx_stores\nJOIN DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nWHERE (\n       format = 'LF' AND des_edo IN ('DISTRITO FEDERAL', '%D F%', 'D. F.', 'D.F.', 'DISTITO FEDERAL')\n    OR format = 'LF' AND des_edo IN ('NUEVO LEON')           AND des_municipio IN ('MONTERREY')\n    OR format = 'LF' AND des_edo IN ('JALISCO')              AND des_municipio IN ('GUADALAJARA')\n    OR format = 'LF' AND des_edo IN ('PUEBLA')               AND des_municipio IN ('PUEBLA')\n    OR format = 'LF' AND des_edo IN ('MEXICO')               AND des_municipio IN ('TOLUCA')\n)\n    AND ST_DWITHIN(TO_GEOGRAPHY(ST_MAKEPOINT(long ,lat)), geometry, 1000)\nGROUP BY\n    id_cliente,\n    format\n)"}, {"id": "model.sdna_project.tradearea_df_sf", "sql": " __dbt__cte__tradearea_df_sf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'DF_SF' AS group_type,\n    3 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere (\n       format = 'SF' AND des_edo IN ('DISTRITO FEDERAL', '%D F%', 'D. F.', 'D.F.', 'DISTITO FEDERAL')\n    OR format = 'SF' AND des_edo IN ('NUEVO LEON')           AND des_municipio IN ('MONTERREY')\n    OR format = 'SF' AND des_edo IN ('JALISCO')              AND des_municipio IN ('GUADALAJARA')\n    OR format = 'SF' AND des_edo IN ('PUEBLA')               AND des_municipio IN ('PUEBLA')\n    OR format = 'SF' AND des_edo IN ('MEXICO')               AND des_municipio IN ('TOLUCA')\n)\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 300)\ngroup by\n    id_cliente,\n    format\n)"}, {"id": "model.sdna_project.tradearea_r_lf", "sql": " __dbt__cte__tradearea_r_lf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'R_LF' as group_type,\n    1 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito in ('R', null)\n    and format = 'LF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 5000)\ngroup by\n    id_cliente,\n    format\n)"}, {"id": "model.sdna_project.tradearea_r_sf", "sql": " __dbt__cte__tradearea_r_sf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'R_SF' as group_type,\n    1 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito in ('R', null)\n    and format = 'SF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 5000)\ngroup by\n    id_cliente,\n    format\n)"}, {"id": "model.sdna_project.tradearea_u_lf", "sql": " __dbt__cte__tradearea_u_lf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'U_LF' as group_type,\n    2 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito = 'U'\n    and format = 'LF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 2000)\ngroup by\n    id_cliente,\n    format\n)"}, {"id": "model.sdna_project.tradearea_u_sf", "sql": " __dbt__cte__tradearea_u_sf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'U_SF' as group_type,\n    2 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito = 'U'\n    and format = 'SF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 1000)\ngroup by\n    id_cliente,\n    format\n)"}], "relation_name": null}, "model.sdna_project.dataplor": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AWS_EXTERNAL_DATA_DELIVERY_BUCKET',\n    file_format_name='CSV_COMMA_PARSER',\n    tags=[\"mx\", \"load\", \"refresh_weekly\"]\n  )\n}}\n{{ external_stage('/MX/dataplor/2021-06-04.csv.gz') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "load", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "stage_name": "AWS_EXTERNAL_DATA_DELIVERY_BUCKET", "file_format_name": "CSV_COMMA_PARSER", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "loads", "dataplor"], "unique_id": "model.sdna_project.dataplor", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/loads/dataplor.sql", "original_file_path": "models/sdna_mx/loads/dataplor.sql", "name": "dataplor", "alias": "dataplor", "checksum": {"name": "sha256", "checksum": "5d5cf55fb55116ed34dcd117f2bef9ed08b7250f572e4d36752539bd914f7784"}, "tags": ["mx", "load", "refresh_weekly"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/loads/dataplor.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "from_external_stage", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AWS_EXTERNAL_DATA_DELIVERY_BUCKET", "file_format_name": "CSV_COMMA_PARSER", "tags": ["mx", "load", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\n\n    @DP_SDNA_MX.SDNA_MX_DEV.__STAGE_TOKEN__/MX/dataplor/2021-06-04.csv.gz\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.dataplor"}, "model.sdna_project.dls_latam_ins_categoria": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AZURE_EDA_CONTAINER_PARQUET',\n    file_format_name='PARQUET_PARSER',\n    copy_transform=True,\n    tags=[\"mx\", \"load\", \"refresh_weekly\"]\n  )\n}}\n(\nSELECT\n    {% for col in get_cols_field_column_mapping('dls_latam_ins_categoria') %}\n    $1:{{ col[0] }}::{{ col[1] }},\n    {% endfor %}\n    CURRENT_TIMESTAMP()\nFROM\n{{ external_stage('/latam/teradata/edw_latam_sem_extrct_teradata/5feb4fd1dbc2a50aeca3e0ef/merged/part-0000') }}\n)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.get_cols_field_column_mapping", "macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "load", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "copy_transform": true, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "loads", "dls_latam_ins_categoria"], "unique_id": "model.sdna_project.dls_latam_ins_categoria", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/loads/dls_latam_ins_categoria.sql", "original_file_path": "models/sdna_mx/loads/dls_latam_ins_categoria.sql", "name": "dls_latam_ins_categoria", "alias": "dls_latam_ins_categoria", "checksum": {"name": "sha256", "checksum": "9091c4ec1019a93f33ea7fda5af2ead5437da49d5ebd6f09e23b975cd7923ca2"}, "tags": ["mx", "load", "refresh_weekly"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/loads/dls_latam_ins_categoria.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "from_external_stage", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "copy_transform": true, "tags": ["mx", "load", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\n(\nSELECT\n    \n    CURRENT_TIMESTAMP()\nFROM\n\n    @DP_SDNA_MX.SDNA_MX_DEV.__STAGE_TOKEN__/latam/teradata/edw_latam_sem_extrct_teradata/5feb4fd1dbc2a50aeca3e0ef/merged/part-0000\n\n)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_categoria"}, "model.sdna_project.dls_latam_ins_cia_ruta": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AZURE_EDA_CONTAINER_PARQUET',\n    file_format_name='PARQUET_PARSER',\n    copy_transform=True,\n    tags=[\"mx\", \"load\", \"refresh_weekly\"]\n  )\n}}\n(\nSELECT\n    {% for col in get_cols_field_column_mapping('dls_latam_ins_cia_ruta') %}\n    $1:{{ col[0] }}::{{ col[1] }},\n    {% endfor %}\n    CURRENT_TIMESTAMP()\nFROM\n{{ external_stage('/latam/teradata/edw_latam_sem_extrct_teradata/5feb4fd1dbc2a50aeca3e0f0/merged/part-0000') }}\n)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.get_cols_field_column_mapping", "macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "load", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "copy_transform": true, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "loads", "dls_latam_ins_cia_ruta"], "unique_id": "model.sdna_project.dls_latam_ins_cia_ruta", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/loads/dls_latam_ins_cia_ruta.sql", "original_file_path": "models/sdna_mx/loads/dls_latam_ins_cia_ruta.sql", "name": "dls_latam_ins_cia_ruta", "alias": "dls_latam_ins_cia_ruta", "checksum": {"name": "sha256", "checksum": "5dfde227cb38ee0727cf9a51a9bb490d70d67bc94d843c8c8dc0bdf5810d1d74"}, "tags": ["mx", "load", "refresh_weekly"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/loads/dls_latam_ins_cia_ruta.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "from_external_stage", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "copy_transform": true, "tags": ["mx", "load", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\n(\nSELECT\n    \n    CURRENT_TIMESTAMP()\nFROM\n\n    @DP_SDNA_MX.SDNA_MX_DEV.__STAGE_TOKEN__/latam/teradata/edw_latam_sem_extrct_teradata/5feb4fd1dbc2a50aeca3e0f0/merged/part-0000\n\n)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_cia_ruta"}, "model.sdna_project.dls_latam_ins_maestrocliente": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AZURE_EDA_CONTAINER_PARQUET',\n    file_format_name='PARQUET_PARSER',\n    copy_transform=True,\n    tags=[\"mx\", \"load\", \"refresh_weekly\"]\n  )\n}}\n(\nSELECT\n    {% for col in get_cols_field_column_mapping('dls_latam_ins_maestrocliente') %}\n    $1:{{ col[0] }}::{{ col[1] }},\n    {% endfor %}\n    CURRENT_TIMESTAMP()\nFROM\n{{ external_stage('/latam/teradata/edw_latam_sem_extrct_teradata/5feb4fd7dbc2a50aeca3e104/merged/part-0000') }}\n)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.get_cols_field_column_mapping", "macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "load", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "copy_transform": true, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "loads", "dls_latam_ins_maestrocliente"], "unique_id": "model.sdna_project.dls_latam_ins_maestrocliente", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/loads/dls_latam_ins_maestrocliente.sql", "original_file_path": "models/sdna_mx/loads/dls_latam_ins_maestrocliente.sql", "name": "dls_latam_ins_maestrocliente", "alias": "dls_latam_ins_maestrocliente", "checksum": {"name": "sha256", "checksum": "8ac0320d15a1f68b2263951d9342d287eda78dd908d4f2108348354fa0db4d03"}, "tags": ["mx", "load", "refresh_weekly"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/loads/dls_latam_ins_maestrocliente.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "from_external_stage", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "copy_transform": true, "tags": ["mx", "load", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\n(\nSELECT\n    \n    CURRENT_TIMESTAMP()\nFROM\n\n    @DP_SDNA_MX.SDNA_MX_DEV.__STAGE_TOKEN__/latam/teradata/edw_latam_sem_extrct_teradata/5feb4fd7dbc2a50aeca3e104/merged/part-0000\n\n)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_maestrocliente"}, "model.sdna_project.dls_latam_ins_nivelcliente": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AZURE_EDA_CONTAINER_PARQUET',\n    file_format_name='PARQUET_PARSER',\n    copy_transform=True,\n    tags=[\"mx\", \"load\", \"refresh_weekly\"]\n  )\n}}\n(\nSELECT\n    {% for col in get_cols_field_column_mapping('dls_latam_ins_nivelcliente') %}\n    $1:{{ col[0] }}::{{ col[1] }},\n    {% endfor %}\n    CURRENT_TIMESTAMP()\nFROM\n{{ external_stage('/latam/teradata/edw_latam_sem_extrct_teradata/5feb4fd9dbc2a50aeca3e10b/merged/part-0000') }}\n)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.get_cols_field_column_mapping", "macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "load", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "copy_transform": true, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "loads", "dls_latam_ins_nivelcliente"], "unique_id": "model.sdna_project.dls_latam_ins_nivelcliente", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/loads/dls_latam_ins_nivelcliente.sql", "original_file_path": "models/sdna_mx/loads/dls_latam_ins_nivelcliente.sql", "name": "dls_latam_ins_nivelcliente", "alias": "dls_latam_ins_nivelcliente", "checksum": {"name": "sha256", "checksum": "2f572405edbc6380dd99c289da9f374e9ea88e2d50db97778662bfe82457798a"}, "tags": ["mx", "load", "refresh_weekly"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/loads/dls_latam_ins_nivelcliente.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "from_external_stage", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "copy_transform": true, "tags": ["mx", "load", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\n(\nSELECT\n    \n    CURRENT_TIMESTAMP()\nFROM\n\n    @DP_SDNA_MX.SDNA_MX_DEV.__STAGE_TOKEN__/latam/teradata/edw_latam_sem_extrct_teradata/5feb4fd9dbc2a50aeca3e10b/merged/part-0000\n\n)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_nivelcliente"}, "model.sdna_project.dls_latam_ins_producto": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AZURE_EDA_CONTAINER_PARQUET',\n    file_format_name='PARQUET_PARSER',\n    copy_transform=True,\n    tags=[\"mx\", \"load\", \"refresh_weekly\"]\n  )\n}}\n(\nSELECT\n    {% for col in get_cols_field_column_mapping('dls_latam_ins_producto') %}\n    $1:{{ col[0] }}::{{ col[1] }},\n    {% endfor %}\n    CURRENT_TIMESTAMP()\nFROM\n{{ external_stage('/latam/teradata/edw_latam_sem_extrct_teradata/5feb4fdbdbc2a50aeca3e111/merged/part-0000') }}\n)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.get_cols_field_column_mapping", "macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "load", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "copy_transform": true, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "loads", "dls_latam_ins_producto"], "unique_id": "model.sdna_project.dls_latam_ins_producto", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/loads/dls_latam_ins_producto.sql", "original_file_path": "models/sdna_mx/loads/dls_latam_ins_producto.sql", "name": "dls_latam_ins_producto", "alias": "dls_latam_ins_producto", "checksum": {"name": "sha256", "checksum": "b63934cb3178641939057fd8022f8be4618272c2204fe333d0f4e73619b313e3"}, "tags": ["mx", "load", "refresh_weekly"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/loads/dls_latam_ins_producto.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "from_external_stage", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "copy_transform": true, "tags": ["mx", "load", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\n(\nSELECT\n    \n    CURRENT_TIMESTAMP()\nFROM\n\n    @DP_SDNA_MX.SDNA_MX_DEV.__STAGE_TOKEN__/latam/teradata/edw_latam_sem_extrct_teradata/5feb4fdbdbc2a50aeca3e111/merged/part-0000\n\n)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_producto"}, "model.sdna_project.dls_latam_ins_ruta": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AZURE_EDA_CONTAINER_PARQUET',\n    file_format_name='PARQUET_PARSER',\n    copy_transform=True,\n    tags=[\"mx\", \"load\", \"refresh_weekly\"]\n  )\n}}\n(\nSELECT\n    {% for col in get_cols_field_column_mapping('dls_latam_ins_ruta') %}\n    $1:{{ col[0] }}::{{ col[1] }},\n    {% endfor %}\n    CURRENT_TIMESTAMP()\nFROM\n{{ external_stage('/latam/teradata/edw_latam_sem_extrct_teradata/5feb4fdddbc2a50aeca3e115/merged/part-0000') }}\n)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.get_cols_field_column_mapping", "macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "load", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "copy_transform": true, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "loads", "dls_latam_ins_ruta"], "unique_id": "model.sdna_project.dls_latam_ins_ruta", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/loads/dls_latam_ins_ruta.sql", "original_file_path": "models/sdna_mx/loads/dls_latam_ins_ruta.sql", "name": "dls_latam_ins_ruta", "alias": "dls_latam_ins_ruta", "checksum": {"name": "sha256", "checksum": "6cf285fa7922a5a75ca55acc591508f53f7d0caa0e0fd6452ffe8a65f5fe8cfc"}, "tags": ["mx", "load", "refresh_weekly"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/loads/dls_latam_ins_ruta.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "from_external_stage", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "copy_transform": true, "tags": ["mx", "load", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\n(\nSELECT\n    \n    CURRENT_TIMESTAMP()\nFROM\n\n    @DP_SDNA_MX.SDNA_MX_DEV.__STAGE_TOKEN__/latam/teradata/edw_latam_sem_extrct_teradata/5feb4fdddbc2a50aeca3e115/merged/part-0000\n\n)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_ruta"}, "model.sdna_project.dls_latam_ins_semana": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AZURE_EDA_CONTAINER_PARQUET',\n    file_format_name='PARQUET_PARSER',\n    copy_transform=True,\n    tags=[\"mx\", \"load\", \"refresh_weekly\"]\n  )\n}}\n(\nSELECT\n    {% for col in get_cols_field_column_mapping('dls_latam_ins_semana') %}\n    $1:{{ col[0] }}::{{ col[1] }},\n    {% endfor %}\n    CURRENT_TIMESTAMP()\nFROM\n{{ external_stage('/latam/teradata/edw_latam_sem_extrct_teradata/5feb4fdddbc2a50aeca3e118/merged/part-0000') }}\n)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.get_cols_field_column_mapping", "macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "load", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "copy_transform": true, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "loads", "dls_latam_ins_semana"], "unique_id": "model.sdna_project.dls_latam_ins_semana", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/loads/dls_latam_ins_semana.sql", "original_file_path": "models/sdna_mx/loads/dls_latam_ins_semana.sql", "name": "dls_latam_ins_semana", "alias": "dls_latam_ins_semana", "checksum": {"name": "sha256", "checksum": "70ff8a9fad100631f6ccb2ff52d400cf52c054ceb71e1c48c22f405e2ae5c77f"}, "tags": ["mx", "load", "refresh_weekly"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/loads/dls_latam_ins_semana.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "from_external_stage", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "copy_transform": true, "tags": ["mx", "load", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\n(\nSELECT\n    \n    CURRENT_TIMESTAMP()\nFROM\n\n    @DP_SDNA_MX.SDNA_MX_DEV.__STAGE_TOKEN__/latam/teradata/edw_latam_sem_extrct_teradata/5feb4fdddbc2a50aeca3e118/merged/part-0000\n\n)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_semana"}, "model.sdna_project.dls_latam_ins_sucursal": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AZURE_EDA_CONTAINER_PARQUET',\n    file_format_name='PARQUET_PARSER',\n    copy_transform=True,\n    tags=[\"mx\", \"load\", \"refresh_weekly\"]\n  )\n}}\n(\nSELECT\n    {% for col in get_cols_field_column_mapping('dls_latam_ins_sucursal') %}\n    $1:{{ col[0] }}::{{ col[1] }},\n    {% endfor %}\n    CURRENT_TIMESTAMP()\nFROM\n{{ external_stage('/latam/teradata/edw_latam_sem_extrct_teradata/5feb4fdfdbc2a50aeca3e11e/merged/part-0000') }}\n)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.get_cols_field_column_mapping", "macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "load", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "copy_transform": true, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "loads", "dls_latam_ins_sucursal"], "unique_id": "model.sdna_project.dls_latam_ins_sucursal", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/loads/dls_latam_ins_sucursal.sql", "original_file_path": "models/sdna_mx/loads/dls_latam_ins_sucursal.sql", "name": "dls_latam_ins_sucursal", "alias": "dls_latam_ins_sucursal", "checksum": {"name": "sha256", "checksum": "b65d17e36d87a820a3f7474361e99dac3201cf15ccbec23a40e2012866e192eb"}, "tags": ["mx", "load", "refresh_weekly"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/loads/dls_latam_ins_sucursal.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "from_external_stage", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "copy_transform": true, "tags": ["mx", "load", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\n(\nSELECT\n    \n    CURRENT_TIMESTAMP()\nFROM\n\n    @DP_SDNA_MX.SDNA_MX_DEV.__STAGE_TOKEN__/latam/teradata/edw_latam_sem_extrct_teradata/5feb4fdfdbc2a50aeca3e11e/merged/part-0000\n\n)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_sucursal"}, "model.sdna_project.dls_latam_ins_tipocliente": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AZURE_EDA_CONTAINER_PARQUET',\n    file_format_name='PARQUET_PARSER',\n    copy_transform=True,\n    tags=[\"mx\", \"load\", \"refresh_weekly\"]\n  )\n}}\n(\nSELECT\n    {% for col in get_cols_field_column_mapping('dls_latam_ins_tipocliente') %}\n    $1:{{ col[0] }}::{{ col[1] }},\n    {% endfor %}\n    CURRENT_TIMESTAMP()\nFROM\n{{ external_stage('/latam/teradata/edw_latam_sem_extrct_teradata/5feb4fdfdbc2a50aeca3e120/merged/part-0000') }}\n)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.get_cols_field_column_mapping", "macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "load", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "copy_transform": true, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "loads", "dls_latam_ins_tipocliente"], "unique_id": "model.sdna_project.dls_latam_ins_tipocliente", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/loads/dls_latam_ins_tipocliente.sql", "original_file_path": "models/sdna_mx/loads/dls_latam_ins_tipocliente.sql", "name": "dls_latam_ins_tipocliente", "alias": "dls_latam_ins_tipocliente", "checksum": {"name": "sha256", "checksum": "098b78773bcb1d2ed2b554d1dd88bbc237025e40da5bbb0f5c8a9503226e5fbd"}, "tags": ["mx", "load", "refresh_weekly"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/loads/dls_latam_ins_tipocliente.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "from_external_stage", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "copy_transform": true, "tags": ["mx", "load", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\n(\nSELECT\n    \n    CURRENT_TIMESTAMP()\nFROM\n\n    @DP_SDNA_MX.SDNA_MX_DEV.__STAGE_TOKEN__/latam/teradata/edw_latam_sem_extrct_teradata/5feb4fdfdbc2a50aeca3e120/merged/part-0000\n\n)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_tipocliente"}, "model.sdna_project.dls_latam_ins_tiporuta": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AZURE_EDA_CONTAINER_PARQUET',\n    file_format_name='PARQUET_PARSER',\n    copy_transform=True,\n    tags=[\"mx\", \"load\", \"refresh_weekly\"]\n  )\n}}\n(\nSELECT\n    {% for col in get_cols_field_column_mapping('dls_latam_ins_tiporuta') %}\n    $1:{{ col[0] }}::{{ col[1] }},\n    {% endfor %}\n    CURRENT_TIMESTAMP()\nFROM\n{{ external_stage('/latam/teradata/edw_latam_sem_extrct_teradata/5feb50a8dbc2a50aeca3e53a/merged/part-0000') }}\n)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.get_cols_field_column_mapping", "macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "load", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "copy_transform": true, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "loads", "dls_latam_ins_tiporuta"], "unique_id": "model.sdna_project.dls_latam_ins_tiporuta", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/loads/dls_latam_ins_tiporuta.sql", "original_file_path": "models/sdna_mx/loads/dls_latam_ins_tiporuta.sql", "name": "dls_latam_ins_tiporuta", "alias": "dls_latam_ins_tiporuta", "checksum": {"name": "sha256", "checksum": "9aeb20e3b08fdb1090b4dd1c07beeac718c51afd4065fc620c2db91c6cb9b25a"}, "tags": ["mx", "load", "refresh_weekly"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/loads/dls_latam_ins_tiporuta.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "from_external_stage", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "copy_transform": true, "tags": ["mx", "load", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\n(\nSELECT\n    \n    CURRENT_TIMESTAMP()\nFROM\n\n    @DP_SDNA_MX.SDNA_MX_DEV.__STAGE_TOKEN__/latam/teradata/edw_latam_sem_extrct_teradata/5feb50a8dbc2a50aeca3e53a/merged/part-0000\n\n)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_tiporuta"}, "model.sdna_project.dls_latam_ins_vtaclipro_sem_v": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AZURE_EDA_CONTAINER_PARQUET',\n    file_format_name='PARQUET_PARSER',\n    pattern='.*snappy.parquet',\n    copy_transform=True,\n    tags=[\"mx\", \"load\", \"refresh_weekly\"]\n  )\n}}\n(\nSELECT\n    $1:id_cliente AS id_cliente,\n    $1:id_ruta AS id_ruta,\n    $1:id_producto AS id_producto,\n    $1:id_dia AS id_dia,\n    $1:semana AS semana,\n    $1:id_cia_ruta AS id_cia_ruta,\n    $1:id_nivelcliente AS id_nivelcliente,\n    $1:id_tipocliente AS id_tipocliente,\n    $1:id_tipodistribucion AS id_tipodistribucion,\n    $1:venta_capt_uni AS venta_capt_uni,\n    $1:venta_capt_pes AS venta_capt_pes,\n    $1:precio_venta AS precio_venta,\n    $1:precio_cliente AS precio_cliente,\n    $1:hhc_inv_inicial AS hhc_inv_inicial,\n    $1:hhc_uni_devueltAS AS hhc_uni_devueltAS,\n    $1:hhc_uni_rotadAS AS hhc_uni_rotadAS,\n    $1:hhc_uni_capturadAS AS hhc_uni_capturadAS,\n    $1:hhc_uni_sugeridAS AS hhc_uni_sugeridAS,\n    $1:hhc_uni_faltantes AS hhc_uni_faltantes,\n    $1:num_ctedispro AS num_ctedispro,\n    $1:dw_sys_id AS dw_sys_id,\n    $1:cru_id AS cru_id,\n    $1:dw_crtd_dtm AS dw_crtd_dtm,\n    $1:dw_updt_dtm AS dw_updt_dtm,\n    $1:dw_btch_id AS dw_btch_id,\n    $1:dw_step_id AS dw_step_id,\n    substr(regexp_substr(METADATA$FILENAME,'\\=[0-9]*'),2) AS id_semana,\n    $1:ziw_target_timestamp AS ziw_target_timestamp,\n    $1:ziw_is_deleted AS ziw_is_deleted,\n    current_timestamp() AS last_updt_dt\nFROM\n{{ external_stage('/latam/teradata/edw_latam_sem_extrct_teradata/DLS_LATAM_INS_VTACLIPRO_SEM/id') }}\n)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "load", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "pattern": ".*snappy.parquet", "copy_transform": true, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "loads", "dls_latam_ins_vtaclipro_sem_v"], "unique_id": "model.sdna_project.dls_latam_ins_vtaclipro_sem_v", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/loads/dls_latam_ins_vtaclipro_sem_v.sql", "original_file_path": "models/sdna_mx/loads/dls_latam_ins_vtaclipro_sem_v.sql", "name": "dls_latam_ins_vtaclipro_sem_v", "alias": "dls_latam_ins_vtaclipro_sem_v", "checksum": {"name": "sha256", "checksum": "8097bed3024e48358806f969937e96db60c0bbdba5ae4733df1746796bb37a4d"}, "tags": ["mx", "load", "refresh_weekly"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/loads/dls_latam_ins_vtaclipro_sem_v.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "from_external_stage", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AZURE_EDA_CONTAINER_PARQUET", "file_format_name": "PARQUET_PARSER", "pattern": ".*snappy.parquet", "copy_transform": true, "tags": ["mx", "load", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\n(\nSELECT\n    $1:id_cliente AS id_cliente,\n    $1:id_ruta AS id_ruta,\n    $1:id_producto AS id_producto,\n    $1:id_dia AS id_dia,\n    $1:semana AS semana,\n    $1:id_cia_ruta AS id_cia_ruta,\n    $1:id_nivelcliente AS id_nivelcliente,\n    $1:id_tipocliente AS id_tipocliente,\n    $1:id_tipodistribucion AS id_tipodistribucion,\n    $1:venta_capt_uni AS venta_capt_uni,\n    $1:venta_capt_pes AS venta_capt_pes,\n    $1:precio_venta AS precio_venta,\n    $1:precio_cliente AS precio_cliente,\n    $1:hhc_inv_inicial AS hhc_inv_inicial,\n    $1:hhc_uni_devueltAS AS hhc_uni_devueltAS,\n    $1:hhc_uni_rotadAS AS hhc_uni_rotadAS,\n    $1:hhc_uni_capturadAS AS hhc_uni_capturadAS,\n    $1:hhc_uni_sugeridAS AS hhc_uni_sugeridAS,\n    $1:hhc_uni_faltantes AS hhc_uni_faltantes,\n    $1:num_ctedispro AS num_ctedispro,\n    $1:dw_sys_id AS dw_sys_id,\n    $1:cru_id AS cru_id,\n    $1:dw_crtd_dtm AS dw_crtd_dtm,\n    $1:dw_updt_dtm AS dw_updt_dtm,\n    $1:dw_btch_id AS dw_btch_id,\n    $1:dw_step_id AS dw_step_id,\n    substr(regexp_substr(METADATA$FILENAME,'\\=[0-9]*'),2) AS id_semana,\n    $1:ziw_target_timestamp AS ziw_target_timestamp,\n    $1:ziw_is_deleted AS ziw_is_deleted,\n    current_timestamp() AS last_updt_dt\nFROM\n\n    @DP_SDNA_MX.SDNA_MX_DEV.__STAGE_TOKEN__/latam/teradata/edw_latam_sem_extrct_teradata/DLS_LATAM_INS_VTACLIPRO_SEM/id\n\n)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_vtaclipro_sem_v"}, "model.sdna_project.inegi_2_stg": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AWS_EXTERNAL_DATA_DELIVERY_BUCKET',\n    file_format_name='CSV_COMMA_PARSER',\n    tags=[\"mx\", \"load\", \"refresh_once\"]\n  )\n}}\n{{ external_stage('/MX/INEGI-based-polygons/inegi2.csv') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "load", "refresh_once"], "full_refresh": null, "on_schema_change": "ignore", "stage_name": "AWS_EXTERNAL_DATA_DELIVERY_BUCKET", "file_format_name": "CSV_COMMA_PARSER", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "loads", "inegi_2_stg"], "unique_id": "model.sdna_project.inegi_2_stg", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/loads/inegi_2_stg.sql", "original_file_path": "models/sdna_mx/loads/inegi_2_stg.sql", "name": "inegi_2_stg", "alias": "inegi_2_stg", "checksum": {"name": "sha256", "checksum": "733eaec7b952fdc5ee955a0f69bb04957d7246e1e66ecc6a07982e08766f79c0"}, "tags": ["mx", "load", "refresh_once"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/loads/inegi_2_stg.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "from_external_stage", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AWS_EXTERNAL_DATA_DELIVERY_BUCKET", "file_format_name": "CSV_COMMA_PARSER", "tags": ["mx", "load", "refresh_once"]}, "created_at": 1629326231, "compiled_sql": "\n\n    @DP_SDNA_MX.SDNA_MX_DEV.__STAGE_TOKEN__/MX/INEGI-based-polygons/inegi2.csv\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.inegi_2_stg"}, "model.sdna_project.inegi_stg": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AWS_EXTERNAL_DATA_DELIVERY_BUCKET',\n    file_format_name='CSV_PIPE_PARSER',\n    tags=[\"mx\", \"load\", \"refresh_once\"]\n  )\n}}\n{{ external_stage('/MX/INEGI-based-polygons/full_mex.csv') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "load", "refresh_once"], "full_refresh": null, "on_schema_change": "ignore", "stage_name": "AWS_EXTERNAL_DATA_DELIVERY_BUCKET", "file_format_name": "CSV_PIPE_PARSER", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "loads", "inegi_stg"], "unique_id": "model.sdna_project.inegi_stg", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/loads/inegi_stg.sql", "original_file_path": "models/sdna_mx/loads/inegi_stg.sql", "name": "inegi_stg", "alias": "inegi_stg", "checksum": {"name": "sha256", "checksum": "d8ca999345b840d221b78dd99062e6a2dbfc4f3ef2bc4953c7f7947ec57f7d8d"}, "tags": ["mx", "load", "refresh_once"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/loads/inegi_stg.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "from_external_stage", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AWS_EXTERNAL_DATA_DELIVERY_BUCKET", "file_format_name": "CSV_PIPE_PARSER", "tags": ["mx", "load", "refresh_once"]}, "created_at": 1629326231, "compiled_sql": "\n\n    @DP_SDNA_MX.SDNA_MX_DEV.__STAGE_TOKEN__/MX/INEGI-based-polygons/full_mex.csv\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.inegi_stg"}, "model.sdna_project.nse_stg": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AWS_EXTERNAL_DATA_DELIVERY_BUCKET',\n    file_format_name='CSV_COMMA_PARSER',\n    tags=[\"mx\", \"load\", \"refresh_weekly\"]\n  )\n}}\n{{ external_stage('/MX/INEGI-based-polygons/nse.csv') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "load", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "stage_name": "AWS_EXTERNAL_DATA_DELIVERY_BUCKET", "file_format_name": "CSV_COMMA_PARSER", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "loads", "nse_stg"], "unique_id": "model.sdna_project.nse_stg", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/loads/nse_stg.sql", "original_file_path": "models/sdna_mx/loads/nse_stg.sql", "name": "nse_stg", "alias": "nse_stg", "checksum": {"name": "sha256", "checksum": "4562a1e09efea4ae9b16b2e70da38a8f3fa938c592d9aecb90d621d6d1ab8611"}, "tags": ["mx", "load", "refresh_weekly"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/loads/nse_stg.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "from_external_stage", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AWS_EXTERNAL_DATA_DELIVERY_BUCKET", "file_format_name": "CSV_COMMA_PARSER", "tags": ["mx", "load", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\n\n    @DP_SDNA_MX.SDNA_MX_DEV.__STAGE_TOKEN__/MX/INEGI-based-polygons/nse.csv\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.nse_stg"}, "model.sdna_project.urbanicity_stg": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AWS_EXTERNAL_DATA_DELIVERY_BUCKET',\n    file_format_name='CSV_COMMA_PARSER',\n    tags=[\"mx\", \"load\", \"refresh_weekly\"]\n  )\n}}\n{{ external_stage('/MX/INEGI-based-polygons/urban_rural.csv') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "load", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "stage_name": "AWS_EXTERNAL_DATA_DELIVERY_BUCKET", "file_format_name": "CSV_COMMA_PARSER", "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "loads", "urbanicity_stg"], "unique_id": "model.sdna_project.urbanicity_stg", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/loads/urbanicity_stg.sql", "original_file_path": "models/sdna_mx/loads/urbanicity_stg.sql", "name": "urbanicity_stg", "alias": "urbanicity_stg", "checksum": {"name": "sha256", "checksum": "d084035e6e4418c64bec90a046a9473a8563fd5fa919ba327022400847cc3735"}, "tags": ["mx", "load", "refresh_weekly"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/loads/urbanicity_stg.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "from_external_stage", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AWS_EXTERNAL_DATA_DELIVERY_BUCKET", "file_format_name": "CSV_COMMA_PARSER", "tags": ["mx", "load", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\n\n    @DP_SDNA_MX.SDNA_MX_DEV.__STAGE_TOKEN__/MX/INEGI-based-polygons/urban_rural.csv\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.urbanicity_stg"}, "model.sdna_project.demand_space_mx_ent": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\"]) }}\nselect\n    id_cliente,\n    sum(\n        case\n            when f_pob_ind like 'high'\n                and y_fam_ind like 'high'\n                and pre_fam_ind like 'high'\n                and genz_ind like 'high'\n                and millenial_ind like 'high'\n                or c_ind like 'high'\n                or c_minus_ind like 'high'\n                or d_plus_ind like 'high'\n                or d_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as healthy_energizing_start,\n    sum(\n        case\n            when o_fam_ind like 'high'\n                and post_fam_ind like 'high'\n                and genx_ind like 'high'\n                and baby_boomer_ind like 'high'\n                or c_plus_ind like 'high'\n                or a_b_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as habitual_healthy_breakfast,\n    sum(\n        case\n            when o_fam_ind like 'high'\n            and baby_boomer_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as healthy_start,\n    sum(\n        case\n            when m_pob_ind like 'high'\n                and y_fam_ind like 'high'\n                and genz_ind like 'high'\n                or d_plus_ind like 'high'\n                or d_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as enjoyable_convenient_start,\n    sum(\n        case\n            when m_pob_ind like 'high'\n                and o_fam_ind like 'high'\n                and genx_ind like 'high'\n                or c_plus_ind like 'high'\n                or a_b_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as work_relax_and_refuel,\n    sum(\n        case\n            when f_pob_ind like 'high'\n                and baby_boomer_ind like 'high'\n                or c_plus_ind like 'high'\n                or a_b_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as mid_morning_break,\n    sum(\n        case\n            when d_plus_ind like 'high'\n                or d_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as nutritious_meal_replacement,\n    sum(\n        case\n            when y_fam_ind like 'high'\n                and millenial_ind like 'high'\n                or c_plus_ind like 'high'\n                or a_b_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as lunchtime_meal_accompaniment,\n    sum(\n        case\n            when m_pob_ind like 'high'\n                and pre_fam_ind like 'high'\n                and genz_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as my_daytime_relax,\n    sum(\n        case\n            when f_pob_ind like 'high'\n                and y_fam_ind like 'high'\n                and pre_fam_ind like 'high'\n                and genz_ind like 'high'\n                or c_ind like 'high'\n                or c_minus_ind like 'high'\n                or d_plus_ind like 'high'\n                or d_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as social_afternoon_treat,\n    sum(\n        case\n            when o_fam_ind like 'high'\n                and post_fam_ind like 'high'\n                and genx_ind like 'high'\n                and baby_boomer_ind like 'high'\n                or c_plus_ind like 'high'or a_b_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as family_afternoon_indulgence,\n    sum(\n    case\n        when f_pob_ind like 'high'\n            and y_fam_ind like 'high'\n            or c_plus_ind like 'high'\n            or a_b_ind like 'high'\n        then 1\n        else 0\n    end\n    ) as social_afternoon_indulgence,\n    sum(\n        case\n            when m_pob_ind like 'high'\n                and post_fam_ind like 'high'\n                and genx_ind like 'high'\n                and baby_boomer_ind like 'high'\n                or c_ind like 'high'\n                or c_minus_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as dinnertime_self_care,\n    sum(\n        case\n            when pre_fam_ind like 'high'\n                and genz_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as dinner_screentime,\n    sum(\n        case\n            when post_fam_ind like 'high'\n                or d_plus_ind like 'high'\n                or d_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as positive_energy,\n    sum(\n        case\n            when y_fam_ind like 'high'\n                and pre_fam_ind like 'high'\n                and genz_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as family_relax_and_unwind,\n    sum(\n        case\n            when m_pob_ind like 'high'\n                and baby_boomer_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as evening_indulgence,\n    current_timestamp() as last_updt_dt\nfrom {{ ref('mx_ind_ent_buck') }}\ngroup by\n    id_cliente", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mx_ind_ent_buck"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "demand_space_mx_ent"], "unique_id": "model.sdna_project.demand_space_mx_ent", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/demand_space_mx_ent.sql", "original_file_path": "models/sdna_mx/transformations/demand_space_mx_ent.sql", "name": "demand_space_mx_ent", "alias": "demand_space_mx_ent", "checksum": {"name": "sha256", "checksum": "3df08120945c1d3d4c636b2f949772be1c1f4dcc54d60cc6df77cca4ca39c1e9"}, "tags": ["mx", "transformation"], "refs": [["mx_ind_ent_buck"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/demand_space_mx_ent.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation"]}, "created_at": 1629326231, "compiled_sql": "\nselect\n    id_cliente,\n    sum(\n        case\n            when f_pob_ind like 'high'\n                and y_fam_ind like 'high'\n                and pre_fam_ind like 'high'\n                and genz_ind like 'high'\n                and millenial_ind like 'high'\n                or c_ind like 'high'\n                or c_minus_ind like 'high'\n                or d_plus_ind like 'high'\n                or d_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as healthy_energizing_start,\n    sum(\n        case\n            when o_fam_ind like 'high'\n                and post_fam_ind like 'high'\n                and genx_ind like 'high'\n                and baby_boomer_ind like 'high'\n                or c_plus_ind like 'high'\n                or a_b_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as habitual_healthy_breakfast,\n    sum(\n        case\n            when o_fam_ind like 'high'\n            and baby_boomer_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as healthy_start,\n    sum(\n        case\n            when m_pob_ind like 'high'\n                and y_fam_ind like 'high'\n                and genz_ind like 'high'\n                or d_plus_ind like 'high'\n                or d_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as enjoyable_convenient_start,\n    sum(\n        case\n            when m_pob_ind like 'high'\n                and o_fam_ind like 'high'\n                and genx_ind like 'high'\n                or c_plus_ind like 'high'\n                or a_b_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as work_relax_and_refuel,\n    sum(\n        case\n            when f_pob_ind like 'high'\n                and baby_boomer_ind like 'high'\n                or c_plus_ind like 'high'\n                or a_b_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as mid_morning_break,\n    sum(\n        case\n            when d_plus_ind like 'high'\n                or d_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as nutritious_meal_replacement,\n    sum(\n        case\n            when y_fam_ind like 'high'\n                and millenial_ind like 'high'\n                or c_plus_ind like 'high'\n                or a_b_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as lunchtime_meal_accompaniment,\n    sum(\n        case\n            when m_pob_ind like 'high'\n                and pre_fam_ind like 'high'\n                and genz_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as my_daytime_relax,\n    sum(\n        case\n            when f_pob_ind like 'high'\n                and y_fam_ind like 'high'\n                and pre_fam_ind like 'high'\n                and genz_ind like 'high'\n                or c_ind like 'high'\n                or c_minus_ind like 'high'\n                or d_plus_ind like 'high'\n                or d_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as social_afternoon_treat,\n    sum(\n        case\n            when o_fam_ind like 'high'\n                and post_fam_ind like 'high'\n                and genx_ind like 'high'\n                and baby_boomer_ind like 'high'\n                or c_plus_ind like 'high'or a_b_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as family_afternoon_indulgence,\n    sum(\n    case\n        when f_pob_ind like 'high'\n            and y_fam_ind like 'high'\n            or c_plus_ind like 'high'\n            or a_b_ind like 'high'\n        then 1\n        else 0\n    end\n    ) as social_afternoon_indulgence,\n    sum(\n        case\n            when m_pob_ind like 'high'\n                and post_fam_ind like 'high'\n                and genx_ind like 'high'\n                and baby_boomer_ind like 'high'\n                or c_ind like 'high'\n                or c_minus_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as dinnertime_self_care,\n    sum(\n        case\n            when pre_fam_ind like 'high'\n                and genz_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as dinner_screentime,\n    sum(\n        case\n            when post_fam_ind like 'high'\n                or d_plus_ind like 'high'\n                or d_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as positive_energy,\n    sum(\n        case\n            when y_fam_ind like 'high'\n                and pre_fam_ind like 'high'\n                and genz_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as family_relax_and_unwind,\n    sum(\n        case\n            when m_pob_ind like 'high'\n                and baby_boomer_ind like 'high'\n            then 1\n            else 0\n        end\n    ) as evening_indulgence,\n    current_timestamp() as last_updt_dt\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_ind_ent_buck\ngroup by\n    id_cliente", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.demand_space_mx_ent"}, "model.sdna_project.demand_space_mx_piv": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\"]) }}\nwith x as (\n    select distinct\n        id_cliente,\n        case when healthy_energizing_start <> 0     then 'HEALTHY_ENERGIZING_START'     else '0' end as healthy_energizing_start,\n        case when habitual_healthy_breakfast <> 0   then 'HABITUAL_HEALTHY_BREAKFAST'   else '0' end as habitual_healthy_breakfast,\n        case when healthy_start <> 0                then 'HEALTHY_START'                else '0' end as healthy_start,\n        case when enjoyable_convenient_start <> 0   then 'ENJOYABLE_CONVENIENT_START'   else '0' end as enjoyable_convenient_start,\n        case when work_relax_and_refuel <> 0        then 'WORK_RELAX_AND_REFUEL'        else '0' end as work_relax_and_refuel,\n        case when mid_morning_break <> 0            then 'MID_MORNING_BREAK'            else '0' end as mid_morning_break,\n        case when nutritious_meal_replacement <> 0  then 'NUTRITIOUS_MEAL_REPLACEMENT'  else '0' end as nutritious_meal_replacement,\n        case when lunchtime_meal_accompaniment <> 0 then 'LUNCHTIME_MEAL_ACCOMPANIMENT' else '0' end as lunchtime_meal_accompaniment,\n        case when my_daytime_relax <> 0             then 'MY_DAYTIME_RELAX'             else '0' end as my_daytime_relax,\n        case when social_afternoon_treat <> 0       then 'SOCIAL_AFTERNOON_TREAT'       else '0' end as social_afternoon_treat,\n        case when dinnertime_self_care <> 0         then 'DINNERTIME_SELF_CARE'         else '0' end as dinnertime_self_care,\n        case when dinner_screentime <> 0            then 'DINNER_SCREENTIME'            else '0' end as dinner_screentime,\n        case when positive_energy <> 0              then 'POSITIVE_ENERGY'              else '0' end as positive_energy,\n        case when family_relax_and_unwind <> 0      then 'FAMILY_RELAX_AND_UNWIND'      else '0' end as family_relax_and_unwind,\n        case when evening_indulgence <> 0           then 'EVENING_INDULGENCE'           else '0' end as evening_indulgence\n    from {{ ref('demand_space_mx_ent') }}\n)\nSELECT\n    id_cliente,\n    demand_space\nFROM\n    (\n        SELECT\n            id_cliente,\n            healthy_energizing_start,\n            habitual_healthy_breakfast,\n            healthy_start,\n            enjoyable_convenient_start,\n            work_relax_and_refuel,\n            mid_morning_break,\n            nutritious_meal_replacement,\n            lunchtime_meal_accompaniment,\n            my_daytime_relax,\n            social_afternoon_treat,\n            dinnertime_self_care,\n            dinner_screentime,\n            positive_energy,\n            family_relax_and_unwind,\n            evening_indulgence\n        FROM\n            x\n    )\n    mytable unpivot (demand_space FOR demand_spaces IN\n    (\n        healthy_energizing_start,\n        habitual_healthy_breakfast,\n        healthy_start,\n        enjoyable_convenient_start,\n        work_relax_and_refuel,\n        mid_morning_break,\n        nutritious_meal_replacement,\n        lunchtime_meal_accompaniment,\n        my_daytime_relax,\n        social_afternoon_treat,\n        dinnertime_self_care,\n        dinner_screentime,\n        positive_energy,\n        family_relax_and_unwind,\n        evening_indulgence\n    )\n)AS demand_space\nWHERE\n    demand_space <> '0'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.demand_space_mx_ent"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "demand_space_mx_piv"], "unique_id": "model.sdna_project.demand_space_mx_piv", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/demand_space_mx_piv.sql", "original_file_path": "models/sdna_mx/transformations/demand_space_mx_piv.sql", "name": "demand_space_mx_piv", "alias": "demand_space_mx_piv", "checksum": {"name": "sha256", "checksum": "71f6920edcb871924710d25ed65ee54e7054fd5a6427f3beda65bee0f57bc408"}, "tags": ["mx", "transformation"], "refs": [["demand_space_mx_ent"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/demand_space_mx_piv.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation"]}, "created_at": 1629326231, "compiled_sql": "\nwith x as (\n    select distinct\n        id_cliente,\n        case when healthy_energizing_start <> 0     then 'HEALTHY_ENERGIZING_START'     else '0' end as healthy_energizing_start,\n        case when habitual_healthy_breakfast <> 0   then 'HABITUAL_HEALTHY_BREAKFAST'   else '0' end as habitual_healthy_breakfast,\n        case when healthy_start <> 0                then 'HEALTHY_START'                else '0' end as healthy_start,\n        case when enjoyable_convenient_start <> 0   then 'ENJOYABLE_CONVENIENT_START'   else '0' end as enjoyable_convenient_start,\n        case when work_relax_and_refuel <> 0        then 'WORK_RELAX_AND_REFUEL'        else '0' end as work_relax_and_refuel,\n        case when mid_morning_break <> 0            then 'MID_MORNING_BREAK'            else '0' end as mid_morning_break,\n        case when nutritious_meal_replacement <> 0  then 'NUTRITIOUS_MEAL_REPLACEMENT'  else '0' end as nutritious_meal_replacement,\n        case when lunchtime_meal_accompaniment <> 0 then 'LUNCHTIME_MEAL_ACCOMPANIMENT' else '0' end as lunchtime_meal_accompaniment,\n        case when my_daytime_relax <> 0             then 'MY_DAYTIME_RELAX'             else '0' end as my_daytime_relax,\n        case when social_afternoon_treat <> 0       then 'SOCIAL_AFTERNOON_TREAT'       else '0' end as social_afternoon_treat,\n        case when dinnertime_self_care <> 0         then 'DINNERTIME_SELF_CARE'         else '0' end as dinnertime_self_care,\n        case when dinner_screentime <> 0            then 'DINNER_SCREENTIME'            else '0' end as dinner_screentime,\n        case when positive_energy <> 0              then 'POSITIVE_ENERGY'              else '0' end as positive_energy,\n        case when family_relax_and_unwind <> 0      then 'FAMILY_RELAX_AND_UNWIND'      else '0' end as family_relax_and_unwind,\n        case when evening_indulgence <> 0           then 'EVENING_INDULGENCE'           else '0' end as evening_indulgence\n    from DP_SDNA_MX.SDNA_MX_DEV.demand_space_mx_ent\n)\nSELECT\n    id_cliente,\n    demand_space\nFROM\n    (\n        SELECT\n            id_cliente,\n            healthy_energizing_start,\n            habitual_healthy_breakfast,\n            healthy_start,\n            enjoyable_convenient_start,\n            work_relax_and_refuel,\n            mid_morning_break,\n            nutritious_meal_replacement,\n            lunchtime_meal_accompaniment,\n            my_daytime_relax,\n            social_afternoon_treat,\n            dinnertime_self_care,\n            dinner_screentime,\n            positive_energy,\n            family_relax_and_unwind,\n            evening_indulgence\n        FROM\n            x\n    )\n    mytable unpivot (demand_space FOR demand_spaces IN\n    (\n        healthy_energizing_start,\n        habitual_healthy_breakfast,\n        healthy_start,\n        enjoyable_convenient_start,\n        work_relax_and_refuel,\n        mid_morning_break,\n        nutritious_meal_replacement,\n        lunchtime_meal_accompaniment,\n        my_daytime_relax,\n        social_afternoon_treat,\n        dinnertime_self_care,\n        dinner_screentime,\n        positive_energy,\n        family_relax_and_unwind,\n        evening_indulgence\n    )\n)AS demand_space\nWHERE\n    demand_space <> '0'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.demand_space_mx_piv"}, "model.sdna_project.inegi": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\", \"refresh_once\"]) }}\nselect distinct\n    lpad(entidad, 2, 0) as entidad,\n    lpad(mun, 3, 0) as mun,\n    lpad(loc, 4, 0) as loc,\n    lpad(ageb, 4, 0) as ageb,\n    lpad(mza, 3, 0) as mza,\n    cvegeo,\n    ambito,\n    p_0a2,\n    p_0a2_f,\n    p_0a2_m,\n    p_3a5,\n    p_3a5_f,\n    p_3a5_m,\n    p_6a11,\n    p_6a11_f,\n    p_6a11_m,\n    p_12a14,\n    p_12a14_f,\n    p_12a14_m,\n    p_15a17,\n    p_15a17_f,\n    p_15a17_m,\n    p_18a24,\n    p_18a24_f,\n    p_18a24_m,\n    p_60ymas,\n    p_60ymas_f,\n    p_60ymas_m,\n    pob0_14,\n    p_15a49_f,\n    pob15_64,\n    pob65_mas,\n    tipomza,\n    total_homes,\n    total_inhabited_dwellings,\n    total_inhabited_private_dwellings,\n    total_private_homes,\n    private_homes_for_temporary_use,\n    occupants_in_inhabited_private_dwellings,\n    inhabited_private_homes,\n    uninhabited_private_homes,\n    geometry,\n    current_timestamp() as last_updt_dt\nfrom {{ ref('inegi_stg') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.inegi_stg"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation", "refresh_once"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "inegi"], "unique_id": "model.sdna_project.inegi", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/inegi.sql", "original_file_path": "models/sdna_mx/transformations/inegi.sql", "name": "inegi", "alias": "inegi", "checksum": {"name": "sha256", "checksum": "55628f263272350da20963e052c5049e3448a23d19ab7ffca56937be62dcf386"}, "tags": ["mx", "transformation", "refresh_once"], "refs": [["inegi_stg"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/inegi.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation", "refresh_once"]}, "created_at": 1629326231, "compiled_sql": "\nselect distinct\n    lpad(entidad, 2, 0) as entidad,\n    lpad(mun, 3, 0) as mun,\n    lpad(loc, 4, 0) as loc,\n    lpad(ageb, 4, 0) as ageb,\n    lpad(mza, 3, 0) as mza,\n    cvegeo,\n    ambito,\n    p_0a2,\n    p_0a2_f,\n    p_0a2_m,\n    p_3a5,\n    p_3a5_f,\n    p_3a5_m,\n    p_6a11,\n    p_6a11_f,\n    p_6a11_m,\n    p_12a14,\n    p_12a14_f,\n    p_12a14_m,\n    p_15a17,\n    p_15a17_f,\n    p_15a17_m,\n    p_18a24,\n    p_18a24_f,\n    p_18a24_m,\n    p_60ymas,\n    p_60ymas_f,\n    p_60ymas_m,\n    pob0_14,\n    p_15a49_f,\n    pob15_64,\n    pob65_mas,\n    tipomza,\n    total_homes,\n    total_inhabited_dwellings,\n    total_inhabited_private_dwellings,\n    total_private_homes,\n    private_homes_for_temporary_use,\n    occupants_in_inhabited_private_dwellings,\n    inhabited_private_homes,\n    uninhabited_private_homes,\n    geometry,\n    current_timestamp() as last_updt_dt\nfrom DP_SDNA_MX.SDNA_MX_DEV.inegi_stg", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.inegi"}, "model.sdna_project.inegi_2": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\", \"refresh_once\"]) }}\nWITH x AS(\n    SELECT DISTINCT\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        genz,\n        millenial,\n        genx,\n        baby_boomer,\n        a_b,\n        c_plus,\n        c,\n        c_minus,\n        d_plus,\n        d,\n        e,\n        f_pob,\n        m_pob,\n        (genz + millenial + p0a14a) AS y_fam,\n        (genx + baby_boomer + p0a14a) AS o_fam,\n        (genz + millenial) AS pre_fam,\n        (genx + baby_boomer) AS post_fam,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        ent,\n        nom_ent,\n        mun,\n        nom_mun,\n        loc,\n        nom_loc,\n        ageb,\n        mza,\n        ambito,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    FROM {{ ref('inegi2_step5') }}\n)\nSELECT DISTINCT * FROM x", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.inegi2_step5"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation", "refresh_once"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "inegi_2"], "unique_id": "model.sdna_project.inegi_2", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/inegi_2.sql", "original_file_path": "models/sdna_mx/transformations/inegi_2.sql", "name": "inegi_2", "alias": "inegi_2", "checksum": {"name": "sha256", "checksum": "9839a427f7cf7442b48b5b1b03a46b57912b3cdf339ef8576c1c4832e809e827"}, "tags": ["mx", "transformation", "refresh_once"], "refs": [["inegi2_step5"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/inegi_2.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation", "refresh_once"]}, "created_at": 1629326231, "compiled_sql": "\nWITH  __dbt__cte__inegi2_step1 as (\n\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        lpad(ent, 2, 0) as ent,\n        nom_ent,\n        lpad(mun, 3, 0) as mun,\n        nom_mun,\n        lpad(loc, 4, 0) as loc,\n        nom_loc,\n        lpad(ageb, 4, 0) as ageb,\n        lpad(mza, 3, 0) as mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from DP_SDNA_MX.SDNA_MX_DEV.inegi_2_stg\n)\nselect distinct\n    *\nfrom x\n),  __dbt__cte__inegi2_step2 as (\n\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        ent,\n        nom_ent,\n        mun,\n        nom_mun,\n        loc,\n        nom_loc,\n        concat(ent, mun, loc) as loc_cod,\n        ageb,\n        mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from __dbt__cte__inegi2_step1\n),\nurb as (\n    select distinct\n        localidad_codigo,\n        ambito\n    from DP_SDNA_MX.SDNA_MX_DEV.urbanicity\n)\nselect distinct\n    a.cvegeo,\n    a.vivtot,\n    a.tvivhab,\n    a.p_tvivhab,\n    a.tvivpar,\n    a.p_tvivpar,\n    a.tvivparhab,\n    a.pvivparhab,\n    a.vivpar_des,\n    a.p_vivpar_d,\n    a.vivpar_ut,\n    a.p_vivpar_u,\n    a.vivnohab,\n    a.p_vivnohab,\n    a.proocup_c,\n    a.pobtot,\n    a.p0a14a,\n    a.pp0a14a,\n    a.p15a29a,\n    a.pp15a29a,\n    a.p30a59a,\n    a.pp30a59a,\n    a.p_60ymas,\n    a.pp_60ymas,\n    a.pcon_lim,\n    a.ppcon_lim,\n    a.graproes,\n    a.ent,\n    a.nom_ent,\n    a.mun,\n    a.nom_mun,\n    a.loc,\n    a.nom_loc,\n    a.ageb,\n    a.mza,\n    b.ambito,\n    a.fecha_poli,\n    a.fecha_inf,\n    a.fecha_ceu,\n    a.oid,\n    a.geometry\nfrom x a\njoin urb b\non a.loc_cod = b.localidad_codigo\n),  __dbt__cte__inegi2_step3 as (\n\nselect distinct\n    cvegeo,\n    case when vivtot in ('N.D.','*','*********') then 0 else cast(vivtot as int) end as vivtot,\n    case when tvivhab in ('N.D.','*','*********') then 0 else cast(tvivhab as int) end as tvivhab,\n    case when p_tvivhab in ('N.D.','*','*********') then 0 else cast(p_tvivhab as decimal(5,2)) end as p_tvivhab,\n    case when tvivpar in ('N.D.','*','*********') then 0 else cast(tvivpar as int) end as tvivpar,\n    case when p_tvivpar in ('N.D.','*','*********') then 0 else cast(p_tvivpar as decimal(5,2)) end as p_tvivpar,\n    case when tvivparhaB in ('N.D.','*','*********') then 0 else cast(tvivparhab as int) end as tvivparhab,\n    case when pvivparhaB in ('N.D.','*','*********') then 0 else cast(pvivparhab as decimal(5,2)) end as pvivparhab,\n    case when vivpar_deS in ('N.D.','*','*********') then 0 else cast(vivpar_des as int) end as vivpar_des,\n    case when p_vivpar_D in ('N.D.','*','*********') then 0 else cast(p_vivpar_d as decimal(5,2)) end as p_vivpar_d,\n    case when vivpar_ut in ('N.D.','*','*********') then 0 else cast(vivpar_ut as int) end as vivpar_ut,\n    case when p_vivpar_U in ('N.D.','*','*********') then 0 else cast(p_vivpar_u as decimal(5,2)) end as p_vivpar_u,\n    case when vivnohab in ('N.D.','*','*********') then 0 else cast(vivnohab as int) end as vivnohab,\n    case when p_vivnohaB in ('N.D.','*','*********') then 0 else cast(p_vivnohab as decimal(5,2)) end as p_vivnohab,\n    case when proocup_c in ('N.D.','*','*********') then 0 else cast(proocup_c as decimal(10,2)) end as proocup_c,\n    case when pobtot in ('N.D.','*','*********') then 0 else cast(pobtot as int) end as pobtot,\n    case when p0a14a in ('N.D.','*','*********') then 0 else cast(p0a14a as int) end as p0a14a,\n    case when pp0a14a in ('N.D.','*','*********') then 0 else cast(pp0a14a as decimal(5,2)) end as pp0a14a,\n    case when p15a29a in ('N.D.','*','*********') then 0 else cast(p15a29a as int) end as p15a29a,\n    case when pp15a29a in ('N.D.','*','*********') then 0 else cast(pp15a29a as decimal(5,2)) end as pp15a29a,\n    case when p30a59a in ('N.D.','*','*********') then 0 else cast(p30a59a as int) end as p30a59a,\n    case when pp30a59a in ('N.D.','*','*********') then 0 else cast(pp30a59a as decimal(5,2)) end as pp30a59a,\n    case when p_60ymas in ('N.D.','*','*********') then 0 else cast(p_60ymas as int) end as p_60ymas,\n    case when pp_60ymas in ('N.D.','*','*********') then 0 else cast(pp_60ymas as decimal(5,2)) end as pp_60ymas,\n    case when pcon_lim in ('N.D.','*','*********') then 0 else cast(pcon_lim as int) end as pcon_lim,\n    case when ppcon_lim in ('N.D.','*','*********') then 0 else cast(ppcon_lim as decimal(5,2)) end as ppcon_lim,\n    case when graproes in ('N.D.','*','*********') then 0 else cast(graproes as decimal(10,2)) end as graproes,\n    ent,\n    nom_ent,\n    mun,\n    nom_mun,\n    loc,\n    nom_loc,\n    ageb,\n    mza,\n    ambito,\n    fecha_poli,\n    fecha_inf,\n    fecha_ceu,\n    oid,\n    geometry\nfrom __dbt__cte__inegi2_step2\n),  __dbt__cte__inegi2_step4 as (\n\nselect distinct\n    cvegeo,\n    vivtot,\n    tvivhab,\n    p_tvivhab,\n    tvivpar,\n    p_tvivpar,\n    tvivparhab,\n    pvivparhab,\n    vivpar_des,\n    p_vivpar_d,\n    vivpar_ut,\n    p_vivpar_u,\n    vivnohab,\n    p_vivnohab,\n    proocup_c,\n    pobtot,\n    p0a14a,\n    pp0a14a,\n    p15a29a,\n    pp15a29a,\n    p30a59a,\n    pp30a59a,\n    p_60ymas,\n    pp_60ymas,\n    case when p15a29a >= 0 then round(p15a29a*.8) else 0 end as genz,\n    case when p15a29a >= 0 or p30a59a >= 0 then round((p15a29a*.2) + (p30a59a*.37)) else 0 end as millenial,\n    case when p30a59a >= 0  then round(p30a59a*.5) else 0 end as genx,\n    case when p30a59a >= 0 or p_60ymas >= 0 then round((p30a59a*.13) + p_60ymas) else 0 end as baby_boomer,\n    case when pobtot >= 0 then round(pobtot*a_b) else 0 end as a_b,\n    case when pobtot >= 0 then round(pobtot*c_plus) else 0 end as c_plus,\n    case when pobtot >= 0 then round(pobtot*c) else 0 end as c,\n    case when pobtot >= 0 then round(pobtot*c_minus) else 0 end as c_minus,\n    case when pobtot >= 0 then round(pobtot*d_plus) else 0 end as d_plus,\n    case when pobtot >= 0 then round(pobtot*d) else 0 end as d,\n    case when pobtot >= 0 then round(pobtot*e) else 0 end as e,\n    pcon_lim,\n    ppcon_lim,\n    graproes,\n    x.ent,\n    x.nom_ent,\n    mun,\n    nom_mun,\n    loc,\n    nom_loc,\n    ageb,\n    mza,\n    ambito,\n    fecha_poli,\n    fecha_inf,\n    fecha_ceu,\n    oid,\n    geometry\nfrom __dbt__cte__inegi2_step3 x\njoin DP_SDNA_MX.SDNA_MX_DEV.nse y\non x.ent = y.ent\n),  __dbt__cte__inegi2_step5 as (\n\nwith x as (\n    select\n        cvegeo,\n        round(p_0a2_f + p_3a5_f + p_6a11_f + p_12a14_f + (pob15_64*.51) + (pob65_mas*.51)) as f_pob,\n        round(p_0a2_m + p_3a5_m + p_6a11_m + p_12a14_m + (pob15_64*.49) + (pob65_mas*.49)) as m_pob\n    from\n        DP_SDNA_MX.SDNA_MX_DEV.inegi\n    group by\n        cvegeo,\n        p_0a2_f,\n        p_0a2_m,\n        p_3a5_f,\n        p_3a5_m,\n        p_6a11_f,\n        p_6a11_m,\n        p_12a14_f,\n        p_12a14_m,\n        pob15_64,\n        pob65_mas\n)\nselect distinct\n    a.cvegeo,\n    a.vivtot,\n    a.tvivhab,\n    a.p_tvivhab,\n    a.tvivpar,\n    a.p_tvivpar,\n    a.tvivparhab,\n    a.pvivparhab,\n    a.vivpar_des,\n    a.p_vivpar_d,\n    a.vivpar_ut,\n    a.p_vivpar_u,\n    a.vivnohab,\n    a.p_vivnohab,\n    a.proocup_c,\n    a.pobtot,\n    a.p0a14a,\n    a.pp0a14a,\n    a.p15a29a,\n    a.pp15a29a,\n    a.p30a59a,\n    a.pp30a59a,\n    a.p_60ymas,\n    a.pp_60ymas,\n    a.genz,\n    a.millenial,\n    a.genx,\n    a.baby_boomer,\n    a.a_b,\n    a.c_plus,\n    a.c,\n    a.c_minus,\n    a.d_plus,\n    a.d,\n    a.e,\n    f_pob,\n    m_pob,\n    a.pcon_lim,\n    a.ppcon_lim,\n    a.graproes,\n    a.ent,\n    a.nom_ent,\n    a.mun,\n    a.nom_mun,\n    a.loc,\n    a.nom_loc,\n    a.ageb,\n    a.mza,\n    a.ambito,\n    a.fecha_poli,\n    a.fecha_inf,\n    a.fecha_ceu,\n    a.oid,\n    a.geometry\nfrom __dbt__cte__inegi2_step4 a\njoin x\non a.cvegeo = x.cvegeo\n),x AS(\n    SELECT DISTINCT\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        genz,\n        millenial,\n        genx,\n        baby_boomer,\n        a_b,\n        c_plus,\n        c,\n        c_minus,\n        d_plus,\n        d,\n        e,\n        f_pob,\n        m_pob,\n        (genz + millenial + p0a14a) AS y_fam,\n        (genx + baby_boomer + p0a14a) AS o_fam,\n        (genz + millenial) AS pre_fam,\n        (genx + baby_boomer) AS post_fam,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        ent,\n        nom_ent,\n        mun,\n        nom_mun,\n        loc,\n        nom_loc,\n        ageb,\n        mza,\n        ambito,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    FROM __dbt__cte__inegi2_step5\n)\nSELECT DISTINCT * FROM x", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sdna_project.inegi2_step1", "sql": " __dbt__cte__inegi2_step1 as (\n\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        lpad(ent, 2, 0) as ent,\n        nom_ent,\n        lpad(mun, 3, 0) as mun,\n        nom_mun,\n        lpad(loc, 4, 0) as loc,\n        nom_loc,\n        lpad(ageb, 4, 0) as ageb,\n        lpad(mza, 3, 0) as mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from DP_SDNA_MX.SDNA_MX_DEV.inegi_2_stg\n)\nselect distinct\n    *\nfrom x\n)"}, {"id": "model.sdna_project.inegi2_step2", "sql": " __dbt__cte__inegi2_step2 as (\n\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        ent,\n        nom_ent,\n        mun,\n        nom_mun,\n        loc,\n        nom_loc,\n        concat(ent, mun, loc) as loc_cod,\n        ageb,\n        mza,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid,\n        geometry\n    from __dbt__cte__inegi2_step1\n),\nurb as (\n    select distinct\n        localidad_codigo,\n        ambito\n    from DP_SDNA_MX.SDNA_MX_DEV.urbanicity\n)\nselect distinct\n    a.cvegeo,\n    a.vivtot,\n    a.tvivhab,\n    a.p_tvivhab,\n    a.tvivpar,\n    a.p_tvivpar,\n    a.tvivparhab,\n    a.pvivparhab,\n    a.vivpar_des,\n    a.p_vivpar_d,\n    a.vivpar_ut,\n    a.p_vivpar_u,\n    a.vivnohab,\n    a.p_vivnohab,\n    a.proocup_c,\n    a.pobtot,\n    a.p0a14a,\n    a.pp0a14a,\n    a.p15a29a,\n    a.pp15a29a,\n    a.p30a59a,\n    a.pp30a59a,\n    a.p_60ymas,\n    a.pp_60ymas,\n    a.pcon_lim,\n    a.ppcon_lim,\n    a.graproes,\n    a.ent,\n    a.nom_ent,\n    a.mun,\n    a.nom_mun,\n    a.loc,\n    a.nom_loc,\n    a.ageb,\n    a.mza,\n    b.ambito,\n    a.fecha_poli,\n    a.fecha_inf,\n    a.fecha_ceu,\n    a.oid,\n    a.geometry\nfrom x a\njoin urb b\non a.loc_cod = b.localidad_codigo\n)"}, {"id": "model.sdna_project.inegi2_step3", "sql": " __dbt__cte__inegi2_step3 as (\n\nselect distinct\n    cvegeo,\n    case when vivtot in ('N.D.','*','*********') then 0 else cast(vivtot as int) end as vivtot,\n    case when tvivhab in ('N.D.','*','*********') then 0 else cast(tvivhab as int) end as tvivhab,\n    case when p_tvivhab in ('N.D.','*','*********') then 0 else cast(p_tvivhab as decimal(5,2)) end as p_tvivhab,\n    case when tvivpar in ('N.D.','*','*********') then 0 else cast(tvivpar as int) end as tvivpar,\n    case when p_tvivpar in ('N.D.','*','*********') then 0 else cast(p_tvivpar as decimal(5,2)) end as p_tvivpar,\n    case when tvivparhaB in ('N.D.','*','*********') then 0 else cast(tvivparhab as int) end as tvivparhab,\n    case when pvivparhaB in ('N.D.','*','*********') then 0 else cast(pvivparhab as decimal(5,2)) end as pvivparhab,\n    case when vivpar_deS in ('N.D.','*','*********') then 0 else cast(vivpar_des as int) end as vivpar_des,\n    case when p_vivpar_D in ('N.D.','*','*********') then 0 else cast(p_vivpar_d as decimal(5,2)) end as p_vivpar_d,\n    case when vivpar_ut in ('N.D.','*','*********') then 0 else cast(vivpar_ut as int) end as vivpar_ut,\n    case when p_vivpar_U in ('N.D.','*','*********') then 0 else cast(p_vivpar_u as decimal(5,2)) end as p_vivpar_u,\n    case when vivnohab in ('N.D.','*','*********') then 0 else cast(vivnohab as int) end as vivnohab,\n    case when p_vivnohaB in ('N.D.','*','*********') then 0 else cast(p_vivnohab as decimal(5,2)) end as p_vivnohab,\n    case when proocup_c in ('N.D.','*','*********') then 0 else cast(proocup_c as decimal(10,2)) end as proocup_c,\n    case when pobtot in ('N.D.','*','*********') then 0 else cast(pobtot as int) end as pobtot,\n    case when p0a14a in ('N.D.','*','*********') then 0 else cast(p0a14a as int) end as p0a14a,\n    case when pp0a14a in ('N.D.','*','*********') then 0 else cast(pp0a14a as decimal(5,2)) end as pp0a14a,\n    case when p15a29a in ('N.D.','*','*********') then 0 else cast(p15a29a as int) end as p15a29a,\n    case when pp15a29a in ('N.D.','*','*********') then 0 else cast(pp15a29a as decimal(5,2)) end as pp15a29a,\n    case when p30a59a in ('N.D.','*','*********') then 0 else cast(p30a59a as int) end as p30a59a,\n    case when pp30a59a in ('N.D.','*','*********') then 0 else cast(pp30a59a as decimal(5,2)) end as pp30a59a,\n    case when p_60ymas in ('N.D.','*','*********') then 0 else cast(p_60ymas as int) end as p_60ymas,\n    case when pp_60ymas in ('N.D.','*','*********') then 0 else cast(pp_60ymas as decimal(5,2)) end as pp_60ymas,\n    case when pcon_lim in ('N.D.','*','*********') then 0 else cast(pcon_lim as int) end as pcon_lim,\n    case when ppcon_lim in ('N.D.','*','*********') then 0 else cast(ppcon_lim as decimal(5,2)) end as ppcon_lim,\n    case when graproes in ('N.D.','*','*********') then 0 else cast(graproes as decimal(10,2)) end as graproes,\n    ent,\n    nom_ent,\n    mun,\n    nom_mun,\n    loc,\n    nom_loc,\n    ageb,\n    mza,\n    ambito,\n    fecha_poli,\n    fecha_inf,\n    fecha_ceu,\n    oid,\n    geometry\nfrom __dbt__cte__inegi2_step2\n)"}, {"id": "model.sdna_project.inegi2_step4", "sql": " __dbt__cte__inegi2_step4 as (\n\nselect distinct\n    cvegeo,\n    vivtot,\n    tvivhab,\n    p_tvivhab,\n    tvivpar,\n    p_tvivpar,\n    tvivparhab,\n    pvivparhab,\n    vivpar_des,\n    p_vivpar_d,\n    vivpar_ut,\n    p_vivpar_u,\n    vivnohab,\n    p_vivnohab,\n    proocup_c,\n    pobtot,\n    p0a14a,\n    pp0a14a,\n    p15a29a,\n    pp15a29a,\n    p30a59a,\n    pp30a59a,\n    p_60ymas,\n    pp_60ymas,\n    case when p15a29a >= 0 then round(p15a29a*.8) else 0 end as genz,\n    case when p15a29a >= 0 or p30a59a >= 0 then round((p15a29a*.2) + (p30a59a*.37)) else 0 end as millenial,\n    case when p30a59a >= 0  then round(p30a59a*.5) else 0 end as genx,\n    case when p30a59a >= 0 or p_60ymas >= 0 then round((p30a59a*.13) + p_60ymas) else 0 end as baby_boomer,\n    case when pobtot >= 0 then round(pobtot*a_b) else 0 end as a_b,\n    case when pobtot >= 0 then round(pobtot*c_plus) else 0 end as c_plus,\n    case when pobtot >= 0 then round(pobtot*c) else 0 end as c,\n    case when pobtot >= 0 then round(pobtot*c_minus) else 0 end as c_minus,\n    case when pobtot >= 0 then round(pobtot*d_plus) else 0 end as d_plus,\n    case when pobtot >= 0 then round(pobtot*d) else 0 end as d,\n    case when pobtot >= 0 then round(pobtot*e) else 0 end as e,\n    pcon_lim,\n    ppcon_lim,\n    graproes,\n    x.ent,\n    x.nom_ent,\n    mun,\n    nom_mun,\n    loc,\n    nom_loc,\n    ageb,\n    mza,\n    ambito,\n    fecha_poli,\n    fecha_inf,\n    fecha_ceu,\n    oid,\n    geometry\nfrom __dbt__cte__inegi2_step3 x\njoin DP_SDNA_MX.SDNA_MX_DEV.nse y\non x.ent = y.ent\n)"}, {"id": "model.sdna_project.inegi2_step5", "sql": " __dbt__cte__inegi2_step5 as (\n\nwith x as (\n    select\n        cvegeo,\n        round(p_0a2_f + p_3a5_f + p_6a11_f + p_12a14_f + (pob15_64*.51) + (pob65_mas*.51)) as f_pob,\n        round(p_0a2_m + p_3a5_m + p_6a11_m + p_12a14_m + (pob15_64*.49) + (pob65_mas*.49)) as m_pob\n    from\n        DP_SDNA_MX.SDNA_MX_DEV.inegi\n    group by\n        cvegeo,\n        p_0a2_f,\n        p_0a2_m,\n        p_3a5_f,\n        p_3a5_m,\n        p_6a11_f,\n        p_6a11_m,\n        p_12a14_f,\n        p_12a14_m,\n        pob15_64,\n        pob65_mas\n)\nselect distinct\n    a.cvegeo,\n    a.vivtot,\n    a.tvivhab,\n    a.p_tvivhab,\n    a.tvivpar,\n    a.p_tvivpar,\n    a.tvivparhab,\n    a.pvivparhab,\n    a.vivpar_des,\n    a.p_vivpar_d,\n    a.vivpar_ut,\n    a.p_vivpar_u,\n    a.vivnohab,\n    a.p_vivnohab,\n    a.proocup_c,\n    a.pobtot,\n    a.p0a14a,\n    a.pp0a14a,\n    a.p15a29a,\n    a.pp15a29a,\n    a.p30a59a,\n    a.pp30a59a,\n    a.p_60ymas,\n    a.pp_60ymas,\n    a.genz,\n    a.millenial,\n    a.genx,\n    a.baby_boomer,\n    a.a_b,\n    a.c_plus,\n    a.c,\n    a.c_minus,\n    a.d_plus,\n    a.d,\n    a.e,\n    f_pob,\n    m_pob,\n    a.pcon_lim,\n    a.ppcon_lim,\n    a.graproes,\n    a.ent,\n    a.nom_ent,\n    a.mun,\n    a.nom_mun,\n    a.loc,\n    a.nom_loc,\n    a.ageb,\n    a.mza,\n    a.ambito,\n    a.fecha_poli,\n    a.fecha_inf,\n    a.fecha_ceu,\n    a.oid,\n    a.geometry\nfrom __dbt__cte__inegi2_step4 a\njoin x\non a.cvegeo = x.cvegeo\n)"}], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.inegi_2"}, "model.sdna_project.inegi_2pbi": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\", \"refresh_once\"]) }}\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        genz,\n        millenial,\n        genx,\n        baby_boomer,\n        a_b,\n        c_plus,\n        c,\n        c_minus,\n        d_plus,\n        d,\n        e,\n        f_pob,\n        m_pob,\n        y_fam,\n        o_fam,\n        pre_fam,\n        post_fam,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        ent,\n        nom_ent,\n        mun,\n        nom_mun,\n        loc,\n        nom_loc,\n        ageb,\n        mza,\n        ambito,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid\n    from {{ ref('inegi_2') }}\n)\nselect distinct * from x", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.inegi_2"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation", "refresh_once"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "inegi_2pbi"], "unique_id": "model.sdna_project.inegi_2pbi", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/inegi_2pbi.sql", "original_file_path": "models/sdna_mx/transformations/inegi_2pbi.sql", "name": "inegi_2pbi", "alias": "inegi_2pbi", "checksum": {"name": "sha256", "checksum": "5f7e08dede1a12f11e2131fd53800b75d2a2e457572143f894845bc04a25a5c8"}, "tags": ["mx", "transformation", "refresh_once"], "refs": [["inegi_2"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/inegi_2pbi.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation", "refresh_once"]}, "created_at": 1629326231, "compiled_sql": "\nwith x as (\n    select distinct\n        cvegeo,\n        vivtot,\n        tvivhab,\n        p_tvivhab,\n        tvivpar,\n        p_tvivpar,\n        tvivparhab,\n        pvivparhab,\n        vivpar_des,\n        p_vivpar_d,\n        vivpar_ut,\n        p_vivpar_u,\n        vivnohab,\n        p_vivnohab,\n        proocup_c,\n        pobtot,\n        p0a14a,\n        pp0a14a,\n        p15a29a,\n        pp15a29a,\n        p30a59a,\n        pp30a59a,\n        p_60ymas,\n        pp_60ymas,\n        genz,\n        millenial,\n        genx,\n        baby_boomer,\n        a_b,\n        c_plus,\n        c,\n        c_minus,\n        d_plus,\n        d,\n        e,\n        f_pob,\n        m_pob,\n        y_fam,\n        o_fam,\n        pre_fam,\n        post_fam,\n        pcon_lim,\n        ppcon_lim,\n        graproes,\n        ent,\n        nom_ent,\n        mun,\n        nom_mun,\n        loc,\n        nom_loc,\n        ageb,\n        mza,\n        ambito,\n        fecha_poli,\n        fecha_inf,\n        fecha_ceu,\n        oid\n    from DP_SDNA_MX.SDNA_MX_DEV.inegi_2\n)\nselect distinct * from x", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.inegi_2pbi"}, "model.sdna_project.mapping_id_cliente_dataplor_all": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\", \"refresh_quarterly\"]) }}\nselect\n    stores.id_cliente,\n    stores.lat,\n    stores.long,\n    current_timestamp() as last_updt_dt\nfrom {{ ref('stg_mx_store_coordinates') }} stores\njoin {{ ref('stg_dataplor_coordinates') }} dc --+ convert store long, lat to a geo point. use st_dwithin to identify all dataplor ids (aka poi's) within a boundary of 1000 m\nwhere st_dwithin(stores.coords, dc.coords, 1000) --+surrounding the point (1000 m ~  .6 mi)", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.stg_mx_store_coordinates", "model.sdna_project.stg_dataplor_coordinates"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation", "refresh_quarterly"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "mapping_id_cliente_dataplor_all"], "unique_id": "model.sdna_project.mapping_id_cliente_dataplor_all", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/mapping_id_cliente_dataplor_all.sql", "original_file_path": "models/sdna_mx/transformations/mapping_id_cliente_dataplor_all.sql", "name": "mapping_id_cliente_dataplor_all", "alias": "mapping_id_cliente_dataplor_all", "checksum": {"name": "sha256", "checksum": "76054bcac4463d0dcf6a2ce5333aa5fbf1ef39ab35768cac612766e0c8884d4b"}, "tags": ["mx", "transformation", "refresh_quarterly"], "refs": [["stg_mx_store_coordinates"], ["stg_dataplor_coordinates"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mapping_id_cliente_dataplor_all.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation", "refresh_quarterly"]}, "created_at": 1629326231, "compiled_sql": "\nwith __dbt__cte__stg_mx_store_coordinates as (\n\nselect distinct\n    id_cliente,\n    lat,\n    long,\n    to_geography(st_makepoint(long, lat)) as coords\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\n-- filters out invalid lat / long values\nwhere lat between -90 and 90\nand long between -180 and 180\n),  __dbt__cte__stg_dataplor_coordinates as (\n\nselect distinct\n    dataplor_id,\n    to_geography(st_makepoint(longitude, latitude)) as coords\nfrom DP_SDNA_MX.SDNA_MX_DEV.dataplor\nwhere country = 'Mexico'\n-- filters out invalid lat / long values\nand latitude between -90 and 90\nand longitude between -180 and 180\n)select\n    stores.id_cliente,\n    stores.lat,\n    stores.long,\n    current_timestamp() as last_updt_dt\nfrom __dbt__cte__stg_mx_store_coordinates stores\njoin __dbt__cte__stg_dataplor_coordinates dc --+ convert store long, lat to a geo point. use st_dwithin to identify all dataplor ids (aka poi's) within a boundary of 1000 m\nwhere st_dwithin(stores.coords, dc.coords, 1000) --+surrounding the point (1000 m ~  .6 mi)", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sdna_project.stg_mx_store_coordinates", "sql": " __dbt__cte__stg_mx_store_coordinates as (\n\nselect distinct\n    id_cliente,\n    lat,\n    long,\n    to_geography(st_makepoint(long, lat)) as coords\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\n-- filters out invalid lat / long values\nwhere lat between -90 and 90\nand long between -180 and 180\n)"}, {"id": "model.sdna_project.stg_dataplor_coordinates", "sql": " __dbt__cte__stg_dataplor_coordinates as (\n\nselect distinct\n    dataplor_id,\n    to_geography(st_makepoint(longitude, latitude)) as coords\nfrom DP_SDNA_MX.SDNA_MX_DEV.dataplor\nwhere country = 'Mexico'\n-- filters out invalid lat / long values\nand latitude between -90 and 90\nand longitude between -180 and 180\n)"}], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.mapping_id_cliente_dataplor_all"}, "model.sdna_project.mapping_id_cliente_quadkey": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\", \"refresh_weekly\"]) }}\nwith mx_mapping_table_temp as (\n    select distinct\n        mx_stores.*,\n        dudupe_geo.geography\n    from {{ ref('mx_stores') }}\n    join (\n        select distinct\n            geography\n            trunc(split_part(array_to_string(bounds,','),',',1),7) as long_left_unit,\n            trunc(split_part(array_to_string(bounds,','),',',2),7) as lat_bottom_unit,\n            trunc(split_part(array_to_string(bounds,','),',',3),7) as long_right_unit,\n            trunc(split_part(array_to_string(bounds,','),',',4),7) as lat_top_unit\n        from \"DP_DATA_SHARE_AWS_TO_AZ_REPLICA\".\"MAPBOX\".\"MAPBOX_V0_2_DAILY_QUADKEY_TOTAL\"\n        where country = 'MX'\n    ) dudupe_geo\n    where (\n        (long_left_unit between (long - 0.0015) and long + 0.0015)\n        or (long_right_unit between (long - 0.0015) and long + 0.0015)\n    )\n    and (\n        (lat_bottom_unit between (lat - 0.0015) and lat + 0.0015)\n        or (lat_top_unit between (lat - 0.0015) and lat + 0.0015)\n    )\n)\nselect\n    id_cliente,\n    lat,\n    long,\n    geography,\n    count(distinct geography) over (partition by  id_cliente) as count_quad_keys\nfrom mx_mapping_table_temp\nand lat between -90 and 90\nand long between -180 and 180", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mx_stores"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "mapping_id_cliente_quadkey"], "unique_id": "model.sdna_project.mapping_id_cliente_quadkey", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/mapping_id_cliente_quadkey.sql", "original_file_path": "models/sdna_mx/transformations/mapping_id_cliente_quadkey.sql", "name": "mapping_id_cliente_quadkey", "alias": "mapping_id_cliente_quadkey", "checksum": {"name": "sha256", "checksum": "a293c5d27e8678408973dd7fb5b0d500b23e916101e35cd0112c4e75108e161e"}, "tags": ["mx", "transformation", "refresh_weekly"], "refs": [["mx_stores"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mapping_id_cliente_quadkey.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\nwith mx_mapping_table_temp as (\n    select distinct\n        mx_stores.*,\n        dudupe_geo.geography\n    from DP_SDNA_MX.SDNA_MX_DEV.mx_stores\n    join (\n        select distinct\n            geography\n            trunc(split_part(array_to_string(bounds,','),',',1),7) as long_left_unit,\n            trunc(split_part(array_to_string(bounds,','),',',2),7) as lat_bottom_unit,\n            trunc(split_part(array_to_string(bounds,','),',',3),7) as long_right_unit,\n            trunc(split_part(array_to_string(bounds,','),',',4),7) as lat_top_unit\n        from \"DP_DATA_SHARE_AWS_TO_AZ_REPLICA\".\"MAPBOX\".\"MAPBOX_V0_2_DAILY_QUADKEY_TOTAL\"\n        where country = 'MX'\n    ) dudupe_geo\n    where (\n        (long_left_unit between (long - 0.0015) and long + 0.0015)\n        or (long_right_unit between (long - 0.0015) and long + 0.0015)\n    )\n    and (\n        (lat_bottom_unit between (lat - 0.0015) and lat + 0.0015)\n        or (lat_top_unit between (lat - 0.0015) and lat + 0.0015)\n    )\n)\nselect\n    id_cliente,\n    lat,\n    long,\n    geography,\n    count(distinct geography) over (partition by  id_cliente) as count_quad_keys\nfrom mx_mapping_table_temp\nand lat between -90 and 90\nand long between -180 and 180", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.mapping_id_cliente_quadkey"}, "model.sdna_project.mex_con_per": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\"]) }}\nWITH x AS (\n    SELECT\n        ent,\n        mun,\n        CONCAT(ent, mun) AS mun_cde,\n        SUM(vivtot) AS vivtot,\n        SUM(pobtot) AS pobtot,\n        SUM(genz) AS genz,\n        SUM(millenial) AS millenial,\n        SUM(genx) AS genx,\n        SUM(baby_boomer) AS baby_boomer,\n        SUM(a_b) AS a_b,\n        SUM(c_plus) AS c_plus,\n        SUM(c) AS c,\n        SUM(c_minus) AS c_minus,\n        SUM(d_plus) AS d_plus,\n        SUM(d) AS d,\n        SUM(e) AS e,\n        SUM(f_pob) AS f_pob,\n        SUM(m_pob) AS m_pob,\n        SUM(y_fam) AS y_fam,\n        SUM(o_fam) AS o_fam,\n        SUM(pre_fam) AS pre_fam,\n        SUM(post_fam) AS post_fam\n    FROM {{ ref('inegi_2pbi') }}\n    WHERE pobtot > 0\n    GROUP BY\n        ent,\n        mun\n)\nselect distinct\n    mun_cde,\n    vivtot,\n    pobtot,\n    (genz/pobtot) AS genz_con,\n    (millenial/pobtot) AS millenial_con,\n    (genx/pobtot) AS genx_con,\n    (baby_boomer/pobtot) AS baby_boomer_con,\n    (a_b/pobtot) AS a_b_con,\n    (c_plus/pobtot) AS c_plus_con,\n    (c/pobtot) AS c_con,\n    (c_minus/pobtot) AS c_minus_con,\n    (d_plus/pobtot) AS d_plus_con,\n    (d/pobtot) AS d_con,\n    (e/pobtot) AS e_con,\n    (f_pob/pobtot) AS f_pob_con,\n    (m_pob/pobtot) AS m_pob_con,\n    (y_fam/pobtot) AS y_fam_con,\n    (o_fam/pobtot) AS o_fam_con,\n    (pre_fam/pobtot) AS pre_fam_con,\n    (post_fam/pobtot) AS post_fam_con,\n    CURRENT_TIMESTAMP() AS last_updt_dt\nFROM x", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.inegi_2pbi"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "mex_con_per"], "unique_id": "model.sdna_project.mex_con_per", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/mex_con_per.sql", "original_file_path": "models/sdna_mx/transformations/mex_con_per.sql", "name": "mex_con_per", "alias": "mex_con_per", "checksum": {"name": "sha256", "checksum": "5b94da41933d316a708f846d7091ba29897a4a5ac918d77dc4c4705bc0045060"}, "tags": ["mx", "transformation"], "refs": [["inegi_2pbi"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mex_con_per.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation"]}, "created_at": 1629326231, "compiled_sql": "\nWITH x AS (\n    SELECT\n        ent,\n        mun,\n        CONCAT(ent, mun) AS mun_cde,\n        SUM(vivtot) AS vivtot,\n        SUM(pobtot) AS pobtot,\n        SUM(genz) AS genz,\n        SUM(millenial) AS millenial,\n        SUM(genx) AS genx,\n        SUM(baby_boomer) AS baby_boomer,\n        SUM(a_b) AS a_b,\n        SUM(c_plus) AS c_plus,\n        SUM(c) AS c,\n        SUM(c_minus) AS c_minus,\n        SUM(d_plus) AS d_plus,\n        SUM(d) AS d,\n        SUM(e) AS e,\n        SUM(f_pob) AS f_pob,\n        SUM(m_pob) AS m_pob,\n        SUM(y_fam) AS y_fam,\n        SUM(o_fam) AS o_fam,\n        SUM(pre_fam) AS pre_fam,\n        SUM(post_fam) AS post_fam\n    FROM DP_SDNA_MX.SDNA_MX_DEV.inegi_2pbi\n    WHERE pobtot > 0\n    GROUP BY\n        ent,\n        mun\n)\nselect distinct\n    mun_cde,\n    vivtot,\n    pobtot,\n    (genz/pobtot) AS genz_con,\n    (millenial/pobtot) AS millenial_con,\n    (genx/pobtot) AS genx_con,\n    (baby_boomer/pobtot) AS baby_boomer_con,\n    (a_b/pobtot) AS a_b_con,\n    (c_plus/pobtot) AS c_plus_con,\n    (c/pobtot) AS c_con,\n    (c_minus/pobtot) AS c_minus_con,\n    (d_plus/pobtot) AS d_plus_con,\n    (d/pobtot) AS d_con,\n    (e/pobtot) AS e_con,\n    (f_pob/pobtot) AS f_pob_con,\n    (m_pob/pobtot) AS m_pob_con,\n    (y_fam/pobtot) AS y_fam_con,\n    (o_fam/pobtot) AS o_fam_con,\n    (pre_fam/pobtot) AS pre_fam_con,\n    (post_fam/pobtot) AS post_fam_con,\n    CURRENT_TIMESTAMP() AS last_updt_dt\nFROM x", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.mex_con_per"}, "model.sdna_project.mex_con_per_ent": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\"]) }}\nWITH x AS (\n    SELECT\n        ent,\n        SUM(vivtot) AS vivtot,\n        SUM(pobtot) AS pobtot,\n        SUM(genz) AS genz,\n        SUM(millenial) AS millenial,\n        SUM(genx) AS genx,\n        SUM(baby_boomer) AS baby_boomer,\n        SUM(a_b) AS a_b,\n        SUM(c_plus) AS c_plus,\n        SUM(c) AS c,\n        SUM(c_minus) AS c_minus,\n        SUM(d_plus) AS d_plus,\n        SUM(d) AS d,\n        SUM(e) AS e,\n        SUM(f_pob) AS f_pob,\n        SUM(m_pob) AS m_pob,\n        SUM(y_fam) AS y_fam,\n        SUM(o_fam) AS o_fam,\n        SUM(pre_fam) AS pre_fam,\n        SUM(post_fam) AS post_fam\n    FROM {{ ref('inegi_2') }}\n    WHERE pobtot > 0\n    GROUP BY\n    ent\n)\nSELECT DISTINCT\n    ent,\n    vivtot,\n    pobtot,\n    (genz/pobtot) AS genz_con,\n    (millenial/pobtot) AS millenial_con,\n    (genx/pobtot) AS genx_con,\n    (baby_boomer/pobtot) AS baby_boomer_con,\n    (a_b/pobtot) AS a_b_con,\n    (c_plus/pobtot) AS c_plus_con,\n    (c/pobtot) AS c_con,\n    (c_minus/pobtot) AS c_minus_con,\n    (d_plus/pobtot) AS d_plus_con,\n    (d/pobtot) AS d_con,\n    (e/pobtot) AS e_con,\n    (f_pob/pobtot) AS f_pob_con,\n    (m_pob/pobtot) AS m_pob_con,\n    (y_fam/pobtot) AS y_fam_con,\n    (o_fam/pobtot) AS o_fam_con,\n    (pre_fam/pobtot) AS pre_fam_con,\n    (post_fam/pobtot) AS post_fam_con,\n    CURRENT_TIMESTAMP() AS last_updt_dt\nFROM x", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.inegi_2"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "mex_con_per_ent"], "unique_id": "model.sdna_project.mex_con_per_ent", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/mex_con_per_ent.sql", "original_file_path": "models/sdna_mx/transformations/mex_con_per_ent.sql", "name": "mex_con_per_ent", "alias": "mex_con_per_ent", "checksum": {"name": "sha256", "checksum": "4b88ca192b20ce688a6f64eb0f2f120869c1f2d85fa7f0ae522b0c14cdfee63e"}, "tags": ["mx", "transformation"], "refs": [["inegi_2"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mex_con_per_ent.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation"]}, "created_at": 1629326231, "compiled_sql": "\nWITH x AS (\n    SELECT\n        ent,\n        SUM(vivtot) AS vivtot,\n        SUM(pobtot) AS pobtot,\n        SUM(genz) AS genz,\n        SUM(millenial) AS millenial,\n        SUM(genx) AS genx,\n        SUM(baby_boomer) AS baby_boomer,\n        SUM(a_b) AS a_b,\n        SUM(c_plus) AS c_plus,\n        SUM(c) AS c,\n        SUM(c_minus) AS c_minus,\n        SUM(d_plus) AS d_plus,\n        SUM(d) AS d,\n        SUM(e) AS e,\n        SUM(f_pob) AS f_pob,\n        SUM(m_pob) AS m_pob,\n        SUM(y_fam) AS y_fam,\n        SUM(o_fam) AS o_fam,\n        SUM(pre_fam) AS pre_fam,\n        SUM(post_fam) AS post_fam\n    FROM DP_SDNA_MX.SDNA_MX_DEV.inegi_2\n    WHERE pobtot > 0\n    GROUP BY\n    ent\n)\nSELECT DISTINCT\n    ent,\n    vivtot,\n    pobtot,\n    (genz/pobtot) AS genz_con,\n    (millenial/pobtot) AS millenial_con,\n    (genx/pobtot) AS genx_con,\n    (baby_boomer/pobtot) AS baby_boomer_con,\n    (a_b/pobtot) AS a_b_con,\n    (c_plus/pobtot) AS c_plus_con,\n    (c/pobtot) AS c_con,\n    (c_minus/pobtot) AS c_minus_con,\n    (d_plus/pobtot) AS d_plus_con,\n    (d/pobtot) AS d_con,\n    (e/pobtot) AS e_con,\n    (f_pob/pobtot) AS f_pob_con,\n    (m_pob/pobtot) AS m_pob_con,\n    (y_fam/pobtot) AS y_fam_con,\n    (o_fam/pobtot) AS o_fam_con,\n    (pre_fam/pobtot) AS pre_fam_con,\n    (post_fam/pobtot) AS post_fam_con,\n    CURRENT_TIMESTAMP() AS last_updt_dt\nFROM x", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.mex_con_per_ent"}, "model.sdna_project.mx_buck_piv_pbi": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\"]) }}\nSELECT DISTINCT\n    a.*,\n    b.demand_space\nFROM {{ ref('mx_ind_ent_buck_piv') }} a\nFULL JOIN\n    {{ ref('demand_space_mx_piv') }} b\n    ON a.id_cliente = b.id_cliente", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mx_ind_ent_buck_piv", "model.sdna_project.demand_space_mx_piv"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "mx_buck_piv_pbi"], "unique_id": "model.sdna_project.mx_buck_piv_pbi", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/mx_buck_piv_pbi.sql", "original_file_path": "models/sdna_mx/transformations/mx_buck_piv_pbi.sql", "name": "mx_buck_piv_pbi", "alias": "mx_buck_piv_pbi", "checksum": {"name": "sha256", "checksum": "22e0f5cecb848cd3f0c64dd59e04e8f159ab129cdba165e1096dd9f30c7a6684"}, "tags": ["mx", "transformation"], "refs": [["mx_ind_ent_buck_piv"], ["demand_space_mx_piv"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mx_buck_piv_pbi.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation"]}, "created_at": 1629326231, "compiled_sql": "\nSELECT DISTINCT\n    a.*,\n    b.demand_space\nFROM DP_SDNA_MX.SDNA_MX_DEV.mx_ind_ent_buck_piv a\nFULL JOIN\n    DP_SDNA_MX.SDNA_MX_DEV.demand_space_mx_piv b\n    ON a.id_cliente = b.id_cliente", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.mx_buck_piv_pbi"}, "model.sdna_project.mx_ind_ent": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\"]) }}\nWITH x AS (\n    SELECT\n        id_cliente,\n        manzana_count,\n        vivtot,\n        pobtot,\n        (genz/pobtot) AS genz_con,\n        (millenial/pobtot) AS millenial_con,\n        (genx/pobtot) AS genx_con,\n        (baby_boomer/pobtot) AS baby_boomer_con,\n        (a_b/pobtot) AS a_b_con,\n        (c_plus/pobtot) AS c_plus_con,\n        (c/pobtot) AS c_con,\n        (c_minus/pobtot) AS c_minus_con,\n        (d_plus/pobtot) AS d_plus_con,\n        (d/pobtot) AS d_con,\n        (e/pobtot) AS e_con,\n        (f_pob/pobtot) AS f_pob_con,\n        (m_pob/pobtot) AS m_pob_con,\n        (y_fam/pobtot) as y_fam_con,\n        (o_fam/pobtot) as o_fam_con,\n        (pre_fam/pobtot) as pre_fam_con,\n        (post_fam/pobtot) as post_fam_con,\n        format\n    FROM {{ ref('tradearea') }}\n    WHERE pobtot > 0\n)\nSELECT\n    x.id_cliente,\n    x.manzana_count,\n    x.vivtot,\n    x.pobtot,\n    (x.genz_con/b.genz_con)*100 AS genz_ind,\n    (x.millenial_con/b.millenial_con)*100 AS millenial_ind,\n    (x.genx_con/b.genx_con)*100 AS genx_ind,\n    (x.baby_boomer_con/b.baby_boomer_con)*100 AS baby_boomer_ind,\n    (x.a_b_con/.06)*100 AS a_b_ind,\n    (x.c_plus_con/.11)*100 AS c_plus_ind,\n    (x.c_con/.13)*100 AS c_ind,\n    (x.c_minus_con/.14)*100 AS c_minus_ind,\n    (x.d_plus_con/.15)*100 AS d_plus_ind,\n    (x.d_con/.30)*100 AS d_ind,\n    (x.e_con/.11)*100 AS e_ind,\n    (x.f_pob_con/b.f_pob_con)*100 AS f_pob_ind,\n    (x.m_pob_con/b.m_pob_con)*100 AS m_pob_ind,\n    (x.y_fam_con/b.y_fam_con)*100 AS y_fam_ind,\n    (x.o_fam_con/b.o_fam_con)*100 AS o_fam_ind,\n    (x.pre_fam_con/b.pre_fam_con)*100 AS pre_fam_ind,\n    (x.post_fam_con/b.post_fam_con)*100 AS post_fam_ind,\n    x.format,\n    CURRENT_TIMESTAMP() AS last_updt_dt\nFROM x\nJOIN {{ ref('mxstore_ent') }} c\n    ON x.id_cliente = c.id_cliente\nJOIN {{ ref('mex_con_per_ent') }} b\n    ON c.ent = b.ent", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.tradearea", "model.sdna_project.mxstore_ent", "model.sdna_project.mex_con_per_ent"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "mx_ind_ent"], "unique_id": "model.sdna_project.mx_ind_ent", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/mx_ind_ent.sql", "original_file_path": "models/sdna_mx/transformations/mx_ind_ent.sql", "name": "mx_ind_ent", "alias": "mx_ind_ent", "checksum": {"name": "sha256", "checksum": "5af8f3aa6b315bc4bcf83e4d07995734e17be1697bd1b0eae3a99b928e35e23c"}, "tags": ["mx", "transformation"], "refs": [["tradearea"], ["mxstore_ent"], ["mex_con_per_ent"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mx_ind_ent.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation"]}, "created_at": 1629326231, "compiled_sql": "\nWITH x AS (\n    SELECT\n        id_cliente,\n        manzana_count,\n        vivtot,\n        pobtot,\n        (genz/pobtot) AS genz_con,\n        (millenial/pobtot) AS millenial_con,\n        (genx/pobtot) AS genx_con,\n        (baby_boomer/pobtot) AS baby_boomer_con,\n        (a_b/pobtot) AS a_b_con,\n        (c_plus/pobtot) AS c_plus_con,\n        (c/pobtot) AS c_con,\n        (c_minus/pobtot) AS c_minus_con,\n        (d_plus/pobtot) AS d_plus_con,\n        (d/pobtot) AS d_con,\n        (e/pobtot) AS e_con,\n        (f_pob/pobtot) AS f_pob_con,\n        (m_pob/pobtot) AS m_pob_con,\n        (y_fam/pobtot) as y_fam_con,\n        (o_fam/pobtot) as o_fam_con,\n        (pre_fam/pobtot) as pre_fam_con,\n        (post_fam/pobtot) as post_fam_con,\n        format\n    FROM DP_SDNA_MX.SDNA_MX_DEV.tradearea\n    WHERE pobtot > 0\n)\nSELECT\n    x.id_cliente,\n    x.manzana_count,\n    x.vivtot,\n    x.pobtot,\n    (x.genz_con/b.genz_con)*100 AS genz_ind,\n    (x.millenial_con/b.millenial_con)*100 AS millenial_ind,\n    (x.genx_con/b.genx_con)*100 AS genx_ind,\n    (x.baby_boomer_con/b.baby_boomer_con)*100 AS baby_boomer_ind,\n    (x.a_b_con/.06)*100 AS a_b_ind,\n    (x.c_plus_con/.11)*100 AS c_plus_ind,\n    (x.c_con/.13)*100 AS c_ind,\n    (x.c_minus_con/.14)*100 AS c_minus_ind,\n    (x.d_plus_con/.15)*100 AS d_plus_ind,\n    (x.d_con/.30)*100 AS d_ind,\n    (x.e_con/.11)*100 AS e_ind,\n    (x.f_pob_con/b.f_pob_con)*100 AS f_pob_ind,\n    (x.m_pob_con/b.m_pob_con)*100 AS m_pob_ind,\n    (x.y_fam_con/b.y_fam_con)*100 AS y_fam_ind,\n    (x.o_fam_con/b.o_fam_con)*100 AS o_fam_ind,\n    (x.pre_fam_con/b.pre_fam_con)*100 AS pre_fam_ind,\n    (x.post_fam_con/b.post_fam_con)*100 AS post_fam_ind,\n    x.format,\n    CURRENT_TIMESTAMP() AS last_updt_dt\nFROM x\nJOIN DP_SDNA_MX.SDNA_MX_DEV.mxstore_ent c\n    ON x.id_cliente = c.id_cliente\nJOIN DP_SDNA_MX.SDNA_MX_DEV.mex_con_per_ent b\n    ON c.ent = b.ent", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.mx_ind_ent"}, "model.sdna_project.mx_ind_ent_buck": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\"]) }}\nSELECT DISTINCT\n    id_cliente,\n    manzana_count,\n    vivtot,\n    pobtot,\n    CASE\n        WHEN genz_ind >= 110\n        THEN 'high'\n        WHEN genz_ind < 110 AND genz_ind >= 100\n        THEN 'mid'\n        WHEN genz_ind < 100\n        THEN 'low'\n    END AS genz_ind,\n    CASE\n        WHEN millenial_ind >= 110\n        THEN 'high'\n        WHEN millenial_ind < 110 AND millenial_ind >= 100\n        THEN 'mid'\n        WHEN millenial_ind < 100\n        THEN 'low'\n    END AS millenial_ind,\n    CASE\n        WHEN genx_ind >= 110\n        THEN 'high'\n        WHEN genx_ind <110 AND genx_ind >=100\n        THEN 'mid'\n        WHEN genx_ind <100\n        THEN 'low'\n    END AS genx_ind,\n    CASE\n        WHEN baby_boomer_ind >= 110\n        THEN 'high'\n        WHEN baby_boomer_ind <110 AND baby_boomer_ind >=100\n        THEN 'mid'\n        WHEN baby_boomer_ind <100\n        THEN 'low'\n    END AS baby_boomer_ind,\n    CASE\n        WHEN a_b_ind >= 110\n        THEN 'high'\n        WHEN a_b_ind <110 AND a_b_ind >=100\n        THEN 'mid'\n        WHEN a_b_ind <100\n        THEN 'low'\n    END AS a_b_ind,\n    CASE\n        WHEN c_plus_ind >= 110\n        THEN 'high'\n        WHEN c_plus_ind <110 AND c_plus_ind >=100\n        THEN 'mid'\n        WHEN c_plus_ind <100\n        THEN 'low'\n    END AS c_plus_ind,\n    CASE\n        WHEN c_ind >= 110\n        THEN 'high'\n        WHEN c_ind <110 AND c_ind >=100\n        THEN 'mid'\n        WHEN c_ind <100\n        THEN 'low'\n    END AS c_ind,\n    CASE\n        WHEN c_minus_ind >= 110\n        THEN 'high'\n        WHEN c_minus_ind <110 AND c_minus_ind >=100\n        THEN 'mid'\n        WHEN c_minus_ind <100\n        THEN 'low'\n    END AS c_minus_ind,\n    CASE\n        WHEN d_plus_ind >= 110\n        THEN 'high'\n        WHEN d_plus_ind <110 AND d_plus_ind >=100\n        THEN 'mid'\n        WHEN d_plus_ind <100\n        THEN 'low'\n    END AS d_plus_ind,\n    CASE\n        WHEN d_ind >= 110\n        THEN 'high'\n        WHEN d_ind <110 AND d_ind >=100\n        THEN 'mid'\n        WHEN d_ind <100\n        THEN 'low'\n    END AS d_ind,\n    CASE\n        WHEN e_ind >= 110\n        THEN 'high'\n        WHEN e_ind <110 AND e_ind >=100\n        THEN 'mid'\n        WHEN e_ind <100\n        THEN 'low'\n    END AS e_ind,\n    CASE\n        WHEN f_pob_ind >= 105\n        THEN 'high'\n        WHEN f_pob_ind <105 AND f_pob_ind >=100\n        THEN 'mid'\n        WHEN f_pob_ind <100\n        THEN 'low'\n    END AS f_pob_ind,\n    CASE\n        WHEN m_pob_ind >= 105\n        THEN 'high'\n        WHEN m_pob_ind <105 AND m_pob_ind >=100\n        THEN 'mid'\n        WHEN m_pob_ind <100\n        THEN 'low'\n    END AS m_pob_ind,\n    CASE\n        WHEN y_fam_ind >= 110\n        THEN 'high'\n        WHEN y_fam_ind <110 AND y_fam_ind >=100\n        THEN 'mid'\n        WHEN y_fam_ind <100\n        THEN 'low'\n    END AS y_fam_ind,\n    CASE\n        WHEN o_fam_ind >= 105\n        THEN 'high'\n        WHEN o_fam_ind <105 AND o_fam_ind >=100\n        THEN 'mid'\n        WHEN o_fam_ind <100\n        THEN 'low'\n    END AS o_fam_ind,\n    CASE\n        WHEN pre_fam_ind >= 105\n        THEN 'high'\n        WHEN pre_fam_ind <105 AND pre_fam_ind >=100\n        THEN 'mid'\n        WHEN pre_fam_ind <100\n        THEN 'low'\n    END AS pre_fam_ind,\n    CASE\n        WHEN post_fam_ind >= 110\n        THEN 'high'\n        WHEN post_fam_ind <110 AND post_fam_ind >=100\n        THEN 'mid'\n        WHEN post_fam_ind <100\n        THEN 'low'\n    END AS post_fam_ind,\n    format,\n    CURRENT_TIMESTAMP() AS last_updt_dt\nFROM {{ ref('mx_ind_ent') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mx_ind_ent"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "mx_ind_ent_buck"], "unique_id": "model.sdna_project.mx_ind_ent_buck", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/mx_ind_ent_buck.sql", "original_file_path": "models/sdna_mx/transformations/mx_ind_ent_buck.sql", "name": "mx_ind_ent_buck", "alias": "mx_ind_ent_buck", "checksum": {"name": "sha256", "checksum": "7b4d976512a62e50d4d4938bc12a30e7cb2fe63ba9d081eba36eafb5bfa058a4"}, "tags": ["mx", "transformation"], "refs": [["mx_ind_ent"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mx_ind_ent_buck.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation"]}, "created_at": 1629326231, "compiled_sql": "\nSELECT DISTINCT\n    id_cliente,\n    manzana_count,\n    vivtot,\n    pobtot,\n    CASE\n        WHEN genz_ind >= 110\n        THEN 'high'\n        WHEN genz_ind < 110 AND genz_ind >= 100\n        THEN 'mid'\n        WHEN genz_ind < 100\n        THEN 'low'\n    END AS genz_ind,\n    CASE\n        WHEN millenial_ind >= 110\n        THEN 'high'\n        WHEN millenial_ind < 110 AND millenial_ind >= 100\n        THEN 'mid'\n        WHEN millenial_ind < 100\n        THEN 'low'\n    END AS millenial_ind,\n    CASE\n        WHEN genx_ind >= 110\n        THEN 'high'\n        WHEN genx_ind <110 AND genx_ind >=100\n        THEN 'mid'\n        WHEN genx_ind <100\n        THEN 'low'\n    END AS genx_ind,\n    CASE\n        WHEN baby_boomer_ind >= 110\n        THEN 'high'\n        WHEN baby_boomer_ind <110 AND baby_boomer_ind >=100\n        THEN 'mid'\n        WHEN baby_boomer_ind <100\n        THEN 'low'\n    END AS baby_boomer_ind,\n    CASE\n        WHEN a_b_ind >= 110\n        THEN 'high'\n        WHEN a_b_ind <110 AND a_b_ind >=100\n        THEN 'mid'\n        WHEN a_b_ind <100\n        THEN 'low'\n    END AS a_b_ind,\n    CASE\n        WHEN c_plus_ind >= 110\n        THEN 'high'\n        WHEN c_plus_ind <110 AND c_plus_ind >=100\n        THEN 'mid'\n        WHEN c_plus_ind <100\n        THEN 'low'\n    END AS c_plus_ind,\n    CASE\n        WHEN c_ind >= 110\n        THEN 'high'\n        WHEN c_ind <110 AND c_ind >=100\n        THEN 'mid'\n        WHEN c_ind <100\n        THEN 'low'\n    END AS c_ind,\n    CASE\n        WHEN c_minus_ind >= 110\n        THEN 'high'\n        WHEN c_minus_ind <110 AND c_minus_ind >=100\n        THEN 'mid'\n        WHEN c_minus_ind <100\n        THEN 'low'\n    END AS c_minus_ind,\n    CASE\n        WHEN d_plus_ind >= 110\n        THEN 'high'\n        WHEN d_plus_ind <110 AND d_plus_ind >=100\n        THEN 'mid'\n        WHEN d_plus_ind <100\n        THEN 'low'\n    END AS d_plus_ind,\n    CASE\n        WHEN d_ind >= 110\n        THEN 'high'\n        WHEN d_ind <110 AND d_ind >=100\n        THEN 'mid'\n        WHEN d_ind <100\n        THEN 'low'\n    END AS d_ind,\n    CASE\n        WHEN e_ind >= 110\n        THEN 'high'\n        WHEN e_ind <110 AND e_ind >=100\n        THEN 'mid'\n        WHEN e_ind <100\n        THEN 'low'\n    END AS e_ind,\n    CASE\n        WHEN f_pob_ind >= 105\n        THEN 'high'\n        WHEN f_pob_ind <105 AND f_pob_ind >=100\n        THEN 'mid'\n        WHEN f_pob_ind <100\n        THEN 'low'\n    END AS f_pob_ind,\n    CASE\n        WHEN m_pob_ind >= 105\n        THEN 'high'\n        WHEN m_pob_ind <105 AND m_pob_ind >=100\n        THEN 'mid'\n        WHEN m_pob_ind <100\n        THEN 'low'\n    END AS m_pob_ind,\n    CASE\n        WHEN y_fam_ind >= 110\n        THEN 'high'\n        WHEN y_fam_ind <110 AND y_fam_ind >=100\n        THEN 'mid'\n        WHEN y_fam_ind <100\n        THEN 'low'\n    END AS y_fam_ind,\n    CASE\n        WHEN o_fam_ind >= 105\n        THEN 'high'\n        WHEN o_fam_ind <105 AND o_fam_ind >=100\n        THEN 'mid'\n        WHEN o_fam_ind <100\n        THEN 'low'\n    END AS o_fam_ind,\n    CASE\n        WHEN pre_fam_ind >= 105\n        THEN 'high'\n        WHEN pre_fam_ind <105 AND pre_fam_ind >=100\n        THEN 'mid'\n        WHEN pre_fam_ind <100\n        THEN 'low'\n    END AS pre_fam_ind,\n    CASE\n        WHEN post_fam_ind >= 110\n        THEN 'high'\n        WHEN post_fam_ind <110 AND post_fam_ind >=100\n        THEN 'mid'\n        WHEN post_fam_ind <100\n        THEN 'low'\n    END AS post_fam_ind,\n    format,\n    CURRENT_TIMESTAMP() AS last_updt_dt\nFROM DP_SDNA_MX.SDNA_MX_DEV.mx_ind_ent", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.mx_ind_ent_buck"}, "model.sdna_project.mx_ind_ent_buck_piv": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\"]) }}\nwith x as (\n    select distinct\n        id_cliente,\n        case when  genz_ind         in ('high','mid','low') then 'GENZ'             end as genz_ind_1,\n        case when  genz_ind         in ('high','mid','low') then genz_ind           end as genz_score_1,\n        case when  millenial_ind    in ('high','mid','low') then 'MILLENIAL'        end as millenial_ind_2,\n        case when  millenial_ind    in ('high','mid','low') then millenial_ind      end as millenial_score_2,\n        case when  genx_ind         in ('high','mid','low') then 'GENX'             end as genx_ind_3,\n        case when  genx_ind         in ('high','mid','low') then genx_ind           end as genx_score_3,\n        case when  baby_boomer_ind  in ('high','mid','low') then 'BABY_BOOMER'      end as baby_boomer_ind_4,\n        case when  baby_boomer_ind  in ('high','mid','low') then baby_boomer_ind    end as baby_boomer_score_4,\n        case when  a_b_ind          in ('high','mid','low') then 'A_B'              end as a_b_ind_1,\n        case when  a_b_ind          in ('high','mid','low') then a_b_ind            end as a_b_score_1,\n        case when  c_plus_ind       in ('high','mid','low') then 'C_PLUS'           end as c_plus_ind_2,\n        case when  c_plus_ind       in ('high','mid','low') then c_plus_ind         end as c_plus_score_2,\n        case when  c_ind            in ('high','mid','low') then 'C'                end as c_ind_3,\n        case when  c_ind            in ('high','mid','low') then c_ind              end as c_score_3,\n        case when  c_minus_ind      in ('high','mid','low') then 'C_MINUS'          end as c_minus_ind_4,\n        case when  c_minus_ind      in ('high','mid','low') then c_minus_ind        end as c_minus_score_4,\n        case when  d_plus_ind       in ('high','mid','low') then 'D_PLUS'           end as d_plus_ind_5,\n        case when  d_plus_ind       in ('high','mid','low') then d_plus_ind         end as d_plus_score_5,\n        case when  d_ind            in ('high','mid','low') then 'D'                end as d_ind_6,\n        case when  d_ind            in ('high','mid','low') then d_ind              end as d_score_6,\n        case when  e_ind            in ('high','mid','low') then 'E'                end as e_ind_7,\n        case when  e_ind            in ('high','mid','low') then e_ind              end as e_score_7,\n        case when  f_pob_ind        in ('high','mid','low') then 'F_POB'            end as f_pob_ind_5,\n        case when  f_pob_ind        in ('high','mid','low') then f_pob_ind          end as f_pob_score_5,\n        case when  m_pob_ind        in ('high','mid','low') then 'M_POB'            end as m_pob_ind_6,\n        case when  m_pob_ind        in ('high','mid','low') then m_pob_ind          end as m_pob_score_6,\n        case when  y_fam_ind        in ('high','mid','low') then 'Y_FAM'            end as y_fam_ind_1,\n        case when  y_fam_ind        in ('high','mid','low') then y_fam_ind          end as y_fam_score_1,\n        case when  o_fam_ind        in ('high','mid','low') then 'O_FAM'            end as o_fam_ind_2,\n        case when  o_fam_ind        in ('high','mid','low') then o_fam_ind          end as o_fam_score_2,\n        case when  pre_fam_ind      in ('high','mid','low') then 'PRE_FAM'          end as pre_fam_ind_3,\n        case when  pre_fam_ind      in ('high','mid','low') then pre_fam_ind        end as pre_fam_score_3,\n        case when  post_fam_ind     in ('high','mid','low') then 'POST_FAM'         end as post_fam_ind_4,\n        case when  post_fam_ind     in ('high','mid','low') then post_fam_ind       end as post_fam_score_4\n    from {{ ref('mx_ind_ent_buck') }}\n)\nSELECT\n    id_cliente,\n    demo,\n    demo_rank,\n    sel,\n    sel_rank,\n    lifestage,\n    lifestage_rank\nFROM (\n        SELECT\n            id_cliente,\n            genz_ind_1,\n            genz_score_1,\n            millenial_ind_2,\n            millenial_score_2,\n            genx_ind_3,\n            genx_score_3,\n            baby_boomer_ind_4,\n            baby_boomer_score_4,\n            a_b_ind_1,\n            a_b_score_1,\n            c_plus_ind_2,\n            c_plus_score_2,\n            c_ind_3,\n            c_score_3,\n            c_minus_ind_4,\n            c_minus_score_4,\n            d_plus_ind_5,\n            d_plus_score_5,\n            d_ind_6,\n            d_score_6,\n            e_ind_7,\n            e_score_7,\n            f_pob_ind_5,\n            f_pob_score_5,\n            m_pob_ind_6,\n            m_pob_score_6,\n            y_fam_ind_1,\n            y_fam_score_1,\n            o_fam_ind_2,\n            o_fam_score_2,\n            pre_fam_ind_3,\n            pre_fam_score_3,\n            post_fam_ind_4,\n            post_fam_score_4\n        FROM\n            x\n    )\n    mytable unpivot (demo FOR demos IN\n    (\n        genz_ind_1,\n        millenial_ind_2,\n        genx_ind_3,\n        baby_boomer_ind_4,\n        f_pob_ind_5,\n        m_pob_ind_6\n    )\n) AS demo unpivot (demo_rank FOR demo_ranks IN\n    (\n        genz_score_1,\n        millenial_score_2,\n        genx_score_3,\n        baby_boomer_score_4,\n        f_pob_score_5,\n        m_pob_score_6\n    )\n) AS demo_rank unpivot (sel FOR sels IN\n    (\n        a_b_ind_1,\n        c_plus_ind_2,\n        c_ind_3,\n        c_minus_ind_4,\n        d_plus_ind_5,\n        d_ind_6,\n        e_ind_7\n    )\n) AS sel unpivot (sel_rank FOR sel_ranks IN\n    (\n        a_b_score_1,\n        c_plus_score_2,\n        c_score_3,\n        c_minus_score_4,\n        d_plus_score_5,\n        d_score_6,\n        e_score_7\n    )\n) AS sel_rank unpivot (lifestage FOR lifestages IN\n    (\n        y_fam_ind_1,\n        o_fam_ind_2,\n        pre_fam_ind_3,\n        post_fam_ind_4\n    )\n) AS lifestage unpivot (lifestage_rank FOR lifestage_ranks IN\n    (\n        y_fam_score_1,\n        o_fam_score_2,\n        pre_fam_score_3,\n        post_fam_score_4\n    )\n) AS lifestage_rank\nWHERE\n    RIGHT(demos, 1) = RIGHT(demo_ranks, 1)\n    AND RIGHT(sels, 1) = RIGHT(sel_ranks, 1)\n    AND RIGHT(lifestages, 1) = RIGHT(lifestage_ranks, 1)", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mx_ind_ent_buck"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "mx_ind_ent_buck_piv"], "unique_id": "model.sdna_project.mx_ind_ent_buck_piv", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/mx_ind_ent_buck_piv.sql", "original_file_path": "models/sdna_mx/transformations/mx_ind_ent_buck_piv.sql", "name": "mx_ind_ent_buck_piv", "alias": "mx_ind_ent_buck_piv", "checksum": {"name": "sha256", "checksum": "6c1555bdb83150b96225839ba6a6315c4feeaf0f30c69a1eef2ea066bcda0019"}, "tags": ["mx", "transformation"], "refs": [["mx_ind_ent_buck"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mx_ind_ent_buck_piv.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation"]}, "created_at": 1629326231, "compiled_sql": "\nwith x as (\n    select distinct\n        id_cliente,\n        case when  genz_ind         in ('high','mid','low') then 'GENZ'             end as genz_ind_1,\n        case when  genz_ind         in ('high','mid','low') then genz_ind           end as genz_score_1,\n        case when  millenial_ind    in ('high','mid','low') then 'MILLENIAL'        end as millenial_ind_2,\n        case when  millenial_ind    in ('high','mid','low') then millenial_ind      end as millenial_score_2,\n        case when  genx_ind         in ('high','mid','low') then 'GENX'             end as genx_ind_3,\n        case when  genx_ind         in ('high','mid','low') then genx_ind           end as genx_score_3,\n        case when  baby_boomer_ind  in ('high','mid','low') then 'BABY_BOOMER'      end as baby_boomer_ind_4,\n        case when  baby_boomer_ind  in ('high','mid','low') then baby_boomer_ind    end as baby_boomer_score_4,\n        case when  a_b_ind          in ('high','mid','low') then 'A_B'              end as a_b_ind_1,\n        case when  a_b_ind          in ('high','mid','low') then a_b_ind            end as a_b_score_1,\n        case when  c_plus_ind       in ('high','mid','low') then 'C_PLUS'           end as c_plus_ind_2,\n        case when  c_plus_ind       in ('high','mid','low') then c_plus_ind         end as c_plus_score_2,\n        case when  c_ind            in ('high','mid','low') then 'C'                end as c_ind_3,\n        case when  c_ind            in ('high','mid','low') then c_ind              end as c_score_3,\n        case when  c_minus_ind      in ('high','mid','low') then 'C_MINUS'          end as c_minus_ind_4,\n        case when  c_minus_ind      in ('high','mid','low') then c_minus_ind        end as c_minus_score_4,\n        case when  d_plus_ind       in ('high','mid','low') then 'D_PLUS'           end as d_plus_ind_5,\n        case when  d_plus_ind       in ('high','mid','low') then d_plus_ind         end as d_plus_score_5,\n        case when  d_ind            in ('high','mid','low') then 'D'                end as d_ind_6,\n        case when  d_ind            in ('high','mid','low') then d_ind              end as d_score_6,\n        case when  e_ind            in ('high','mid','low') then 'E'                end as e_ind_7,\n        case when  e_ind            in ('high','mid','low') then e_ind              end as e_score_7,\n        case when  f_pob_ind        in ('high','mid','low') then 'F_POB'            end as f_pob_ind_5,\n        case when  f_pob_ind        in ('high','mid','low') then f_pob_ind          end as f_pob_score_5,\n        case when  m_pob_ind        in ('high','mid','low') then 'M_POB'            end as m_pob_ind_6,\n        case when  m_pob_ind        in ('high','mid','low') then m_pob_ind          end as m_pob_score_6,\n        case when  y_fam_ind        in ('high','mid','low') then 'Y_FAM'            end as y_fam_ind_1,\n        case when  y_fam_ind        in ('high','mid','low') then y_fam_ind          end as y_fam_score_1,\n        case when  o_fam_ind        in ('high','mid','low') then 'O_FAM'            end as o_fam_ind_2,\n        case when  o_fam_ind        in ('high','mid','low') then o_fam_ind          end as o_fam_score_2,\n        case when  pre_fam_ind      in ('high','mid','low') then 'PRE_FAM'          end as pre_fam_ind_3,\n        case when  pre_fam_ind      in ('high','mid','low') then pre_fam_ind        end as pre_fam_score_3,\n        case when  post_fam_ind     in ('high','mid','low') then 'POST_FAM'         end as post_fam_ind_4,\n        case when  post_fam_ind     in ('high','mid','low') then post_fam_ind       end as post_fam_score_4\n    from DP_SDNA_MX.SDNA_MX_DEV.mx_ind_ent_buck\n)\nSELECT\n    id_cliente,\n    demo,\n    demo_rank,\n    sel,\n    sel_rank,\n    lifestage,\n    lifestage_rank\nFROM (\n        SELECT\n            id_cliente,\n            genz_ind_1,\n            genz_score_1,\n            millenial_ind_2,\n            millenial_score_2,\n            genx_ind_3,\n            genx_score_3,\n            baby_boomer_ind_4,\n            baby_boomer_score_4,\n            a_b_ind_1,\n            a_b_score_1,\n            c_plus_ind_2,\n            c_plus_score_2,\n            c_ind_3,\n            c_score_3,\n            c_minus_ind_4,\n            c_minus_score_4,\n            d_plus_ind_5,\n            d_plus_score_5,\n            d_ind_6,\n            d_score_6,\n            e_ind_7,\n            e_score_7,\n            f_pob_ind_5,\n            f_pob_score_5,\n            m_pob_ind_6,\n            m_pob_score_6,\n            y_fam_ind_1,\n            y_fam_score_1,\n            o_fam_ind_2,\n            o_fam_score_2,\n            pre_fam_ind_3,\n            pre_fam_score_3,\n            post_fam_ind_4,\n            post_fam_score_4\n        FROM\n            x\n    )\n    mytable unpivot (demo FOR demos IN\n    (\n        genz_ind_1,\n        millenial_ind_2,\n        genx_ind_3,\n        baby_boomer_ind_4,\n        f_pob_ind_5,\n        m_pob_ind_6\n    )\n) AS demo unpivot (demo_rank FOR demo_ranks IN\n    (\n        genz_score_1,\n        millenial_score_2,\n        genx_score_3,\n        baby_boomer_score_4,\n        f_pob_score_5,\n        m_pob_score_6\n    )\n) AS demo_rank unpivot (sel FOR sels IN\n    (\n        a_b_ind_1,\n        c_plus_ind_2,\n        c_ind_3,\n        c_minus_ind_4,\n        d_plus_ind_5,\n        d_ind_6,\n        e_ind_7\n    )\n) AS sel unpivot (sel_rank FOR sel_ranks IN\n    (\n        a_b_score_1,\n        c_plus_score_2,\n        c_score_3,\n        c_minus_score_4,\n        d_plus_score_5,\n        d_score_6,\n        e_score_7\n    )\n) AS sel_rank unpivot (lifestage FOR lifestages IN\n    (\n        y_fam_ind_1,\n        o_fam_ind_2,\n        pre_fam_ind_3,\n        post_fam_ind_4\n    )\n) AS lifestage unpivot (lifestage_rank FOR lifestage_ranks IN\n    (\n        y_fam_score_1,\n        o_fam_score_2,\n        pre_fam_score_3,\n        post_fam_score_4\n    )\n) AS lifestage_rank\nWHERE\n    RIGHT(demos, 1) = RIGHT(demo_ranks, 1)\n    AND RIGHT(sels, 1) = RIGHT(sel_ranks, 1)\n    AND RIGHT(lifestages, 1) = RIGHT(lifestage_ranks, 1)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.mx_ind_ent_buck_piv"}, "model.sdna_project.mx_products": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\", \"refresh_weekly\"]) }}\nselect distinct\n    a13.id_producto,\n    a13.des_producto,\n    a13.id_marca,\n    a13.des_marca,\n    a13.id_submarca,\n    a13.des_submarca,\n    a13.id_segmento,\n    a13.des_segmento,\n    a13.id_unidnegocio,\n    a13.des_unidnegocio,\n    a13.id_tamano,\n    a13.des_tamano,\n    a13.id_categoria id_categoria,\n    a16.des_categoria des_categoria,\n    current_timestamp() last_updt_dt\nfrom {{ ref('dls_latam_ins_vtaclipro_sem_v') }} a11\njoin {{ ref('dls_latam_ins_producto') }} a13\n    on (a11.id_producto = a13.id_producto)\njoin {{ ref('dls_latam_ins_categoria') }} a16\n    on (a13.id_categoria = a16.id_categoria)", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.dls_latam_ins_vtaclipro_sem_v", "model.sdna_project.dls_latam_ins_producto", "model.sdna_project.dls_latam_ins_categoria"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "mx_products"], "unique_id": "model.sdna_project.mx_products", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/mx_products.sql", "original_file_path": "models/sdna_mx/transformations/mx_products.sql", "name": "mx_products", "alias": "mx_products", "checksum": {"name": "sha256", "checksum": "d667c89a31e9886b4a2847c1676c6be946a1d77940cff55c1f5c265565f0a010"}, "tags": ["mx", "transformation", "refresh_weekly"], "refs": [["dls_latam_ins_vtaclipro_sem_v"], ["dls_latam_ins_producto"], ["dls_latam_ins_categoria"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mx_products.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\nselect distinct\n    a13.id_producto,\n    a13.des_producto,\n    a13.id_marca,\n    a13.des_marca,\n    a13.id_submarca,\n    a13.des_submarca,\n    a13.id_segmento,\n    a13.des_segmento,\n    a13.id_unidnegocio,\n    a13.des_unidnegocio,\n    a13.id_tamano,\n    a13.des_tamano,\n    a13.id_categoria id_categoria,\n    a16.des_categoria des_categoria,\n    current_timestamp() last_updt_dt\nfrom DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_vtaclipro_sem_v a11\njoin DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_producto a13\n    on (a11.id_producto = a13.id_producto)\njoin DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_categoria a16\n    on (a13.id_categoria = a16.id_categoria)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.mx_products"}, "model.sdna_project.mx_sales_cy_ly": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\", \"refresh_weekly\"]) }}\nwith cr as (\n    select\n        a.id_cliente,\n        a.id_producto,\n        b.des_ano,\n        sum(a.pesos) as pesos_current_year,\n        sum(a.unidad) as unidad_current_year\n    from {{ ref('mx_sales_wk') }} a\n        left join {{ ref('dls_latam_ins_semana') }} b\n            on a.id_semana = b.id_semana\n    where b.des_ano = year(current_timestamp(3))\n    group by\n        a.id_cliente,\n        a.id_producto,\n        b.des_ano\n),\nlt as (\n    select\n        a.id_cliente,\n        a.id_producto,\n        b.des_ano,\n        sum(a.pesos) as pesos_last_year,\n        sum(a.unidad) as unidad_last_year\n    from {{ ref('mx_sales_wk') }} a\n    left join {{ ref('dls_latam_ins_semana') }} b\n        on a.id_semana = b.id_semana\n    where b.des_ano = year(current_timestamp(3)) - 1\n    group by\n        a.id_cliente,\n        a.id_producto,\n        b.des_ano\n)\nselect\n    cr.id_cliente,\n    cr.id_producto,\n    cr.pesos_current_year as pesos_current_year,\n    cr.unidad_current_year as unidad_current_year,\n    lt.pesos_last_year as pesos_last_year,\n    lt.unidad_last_year as unidad_last_year,\n    current_timestamp() as last_updt_dt\nfrom cr\nleft join lt\n    on cr.id_cliente = lt.id_cliente\n    and cr.id_producto = lt.id_producto", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mx_sales_wk", "model.sdna_project.dls_latam_ins_semana", "model.sdna_project.mx_sales_wk", "model.sdna_project.dls_latam_ins_semana"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "mx_sales_cy_ly"], "unique_id": "model.sdna_project.mx_sales_cy_ly", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/mx_sales_cy_ly.sql", "original_file_path": "models/sdna_mx/transformations/mx_sales_cy_ly.sql", "name": "mx_sales_cy_ly", "alias": "mx_sales_cy_ly", "checksum": {"name": "sha256", "checksum": "7a903afb44ea17e85dd861ec8ae20fbf334f931d5383c30d086e389db5df1301"}, "tags": ["mx", "transformation", "refresh_weekly"], "refs": [["mx_sales_wk"], ["dls_latam_ins_semana"], ["mx_sales_wk"], ["dls_latam_ins_semana"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mx_sales_cy_ly.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\nwith cr as (\n    select\n        a.id_cliente,\n        a.id_producto,\n        b.des_ano,\n        sum(a.pesos) as pesos_current_year,\n        sum(a.unidad) as unidad_current_year\n    from DP_SDNA_MX.SDNA_MX_DEV.mx_sales_wk a\n        left join DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_semana b\n            on a.id_semana = b.id_semana\n    where b.des_ano = year(current_timestamp(3))\n    group by\n        a.id_cliente,\n        a.id_producto,\n        b.des_ano\n),\nlt as (\n    select\n        a.id_cliente,\n        a.id_producto,\n        b.des_ano,\n        sum(a.pesos) as pesos_last_year,\n        sum(a.unidad) as unidad_last_year\n    from DP_SDNA_MX.SDNA_MX_DEV.mx_sales_wk a\n    left join DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_semana b\n        on a.id_semana = b.id_semana\n    where b.des_ano = year(current_timestamp(3)) - 1\n    group by\n        a.id_cliente,\n        a.id_producto,\n        b.des_ano\n)\nselect\n    cr.id_cliente,\n    cr.id_producto,\n    cr.pesos_current_year as pesos_current_year,\n    cr.unidad_current_year as unidad_current_year,\n    lt.pesos_last_year as pesos_last_year,\n    lt.unidad_last_year as unidad_last_year,\n    current_timestamp() as last_updt_dt\nfrom cr\nleft join lt\n    on cr.id_cliente = lt.id_cliente\n    and cr.id_producto = lt.id_producto", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.mx_sales_cy_ly"}, "model.sdna_project.mx_sales_l26_wk": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\", \"refresh_weekly\"]) }}\nselect\n    id_cliente,\n    id_producto,\n    sum(pesos) as pesos_l26w_cy,\n    sum(unidad) as unidad_l26w_cy,\n    current_timestamp() as last_updt_dt\nfrom {{ ref('mx_sales_wk') }}\nwhere id_semana >= to_number(concat_ws('', to_varchar(dateadd(week, - 26, current_timestamp()), 'YYYYMM'), cast(round((day( current_timestamp() ) + 6) / 7, 0) as varchar) ), 38, 0)\ngroup by\n    id_cliente,\n    id_producto\norder by\n    id_cliente", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mx_sales_wk"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "mx_sales_l26_wk"], "unique_id": "model.sdna_project.mx_sales_l26_wk", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/mx_sales_l26_wk.sql", "original_file_path": "models/sdna_mx/transformations/mx_sales_l26_wk.sql", "name": "mx_sales_l26_wk", "alias": "mx_sales_l26_wk", "checksum": {"name": "sha256", "checksum": "a417510b6b77140b169b675c30ce946c32116996cd6f3260316a60e0ca718117"}, "tags": ["mx", "transformation", "refresh_weekly"], "refs": [["mx_sales_wk"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mx_sales_l26_wk.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\nselect\n    id_cliente,\n    id_producto,\n    sum(pesos) as pesos_l26w_cy,\n    sum(unidad) as unidad_l26w_cy,\n    current_timestamp() as last_updt_dt\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_sales_wk\nwhere id_semana >= to_number(concat_ws('', to_varchar(dateadd(week, - 26, current_timestamp()), 'YYYYMM'), cast(round((day( current_timestamp() ) + 6) / 7, 0) as varchar) ), 38, 0)\ngroup by\n    id_cliente,\n    id_producto\norder by\n    id_cliente", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.mx_sales_l26_wk"}, "model.sdna_project.mx_sales_l52_wk": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\", \"refresh_weekly\"]) }}\nselect\n    id_cliente,\n    id_producto,\n    sum(pesos) as pesos_l52w_cy,\n    sum(unidad) as unidad_l52w_cy,\n    current_timestamp() as last_updt_dt\nfrom {{ ref('mx_sales_wk') }}\nwhere id_semana >= to_number(concat_ws('', to_varchar(dateadd(week, - 52, current_timestamp()), 'YYYYMM'), cast(round((day( current_timestamp() ) + 6) / 7, 0) as varchar) ), 38, 0)\ngroup by\n    id_cliente,\n    id_producto\norder by\n    id_cliente", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mx_sales_wk"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "mx_sales_l52_wk"], "unique_id": "model.sdna_project.mx_sales_l52_wk", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/mx_sales_l52_wk.sql", "original_file_path": "models/sdna_mx/transformations/mx_sales_l52_wk.sql", "name": "mx_sales_l52_wk", "alias": "mx_sales_l52_wk", "checksum": {"name": "sha256", "checksum": "88a426135f4997942d491d7d459ecb2dba7bc573a9f60065d8290074b0a61e30"}, "tags": ["mx", "transformation", "refresh_weekly"], "refs": [["mx_sales_wk"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mx_sales_l52_wk.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\nselect\n    id_cliente,\n    id_producto,\n    sum(pesos) as pesos_l52w_cy,\n    sum(unidad) as unidad_l52w_cy,\n    current_timestamp() as last_updt_dt\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_sales_wk\nwhere id_semana >= to_number(concat_ws('', to_varchar(dateadd(week, - 52, current_timestamp()), 'YYYYMM'), cast(round((day( current_timestamp() ) + 6) / 7, 0) as varchar) ), 38, 0)\ngroup by\n    id_cliente,\n    id_producto\norder by\n    id_cliente", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.mx_sales_l52_wk"}, "model.sdna_project.mx_sales_periodo": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\", \"refresh_weekly\"]) }}\nselect\n    a.id_cliente,\n    a.id_producto,\n    b.id_periodo,\n    sum(a.pesos) as pesos_pp,\n    sum(a.unidad) as unidad_pp\nfrom {{ ref('mx_sales_wk') }} a\nleft join {{ ref('dls_latam_ins_semana') }} b\n    on a.id_semana = b.id_semana\ngroup by\n    a.id_cliente,\n    a.id_producto,\n    b.id_periodo", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mx_sales_wk", "model.sdna_project.dls_latam_ins_semana"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "mx_sales_periodo"], "unique_id": "model.sdna_project.mx_sales_periodo", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/mx_sales_periodo.sql", "original_file_path": "models/sdna_mx/transformations/mx_sales_periodo.sql", "name": "mx_sales_periodo", "alias": "mx_sales_periodo", "checksum": {"name": "sha256", "checksum": "cfffa83b18e03093df5b9604be076d874e1801b73d1b0e2b194736f3a9ed73cf"}, "tags": ["mx", "transformation", "refresh_weekly"], "refs": [["mx_sales_wk"], ["dls_latam_ins_semana"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mx_sales_periodo.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\nselect\n    a.id_cliente,\n    a.id_producto,\n    b.id_periodo,\n    sum(a.pesos) as pesos_pp,\n    sum(a.unidad) as unidad_pp\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_sales_wk a\nleft join DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_semana b\n    on a.id_semana = b.id_semana\ngroup by\n    a.id_cliente,\n    a.id_producto,\n    b.id_periodo", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.mx_sales_periodo"}, "model.sdna_project.mx_sales_tri": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\", \"refresh_weekly\"]) }}\nselect\n    a.id_cliente,\n    a.id_producto,\n    b.des_trimestre,\n    sum(a.pesos) as pesos_ptri,\n    sum(a.unidad) as unidad_ptri,\n    current_timestamp() as last_updt_dt\nfrom {{ ref('mx_sales_wk') }} a\nleft join {{ ref('dls_latam_ins_semana') }} b\n    on a.id_semana = b.id_semana\ngroup by\n    a.id_cliente,\n    a.id_producto,\n    b.des_trimestre", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mx_sales_wk", "model.sdna_project.dls_latam_ins_semana"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "mx_sales_tri"], "unique_id": "model.sdna_project.mx_sales_tri", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/mx_sales_tri.sql", "original_file_path": "models/sdna_mx/transformations/mx_sales_tri.sql", "name": "mx_sales_tri", "alias": "mx_sales_tri", "checksum": {"name": "sha256", "checksum": "ca3a6bca900d97cd2bbadaf4faec3011f1cb5ef190fc7719519ba3ef9897aba6"}, "tags": ["mx", "transformation", "refresh_weekly"], "refs": [["mx_sales_wk"], ["dls_latam_ins_semana"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mx_sales_tri.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\nselect\n    a.id_cliente,\n    a.id_producto,\n    b.des_trimestre,\n    sum(a.pesos) as pesos_ptri,\n    sum(a.unidad) as unidad_ptri,\n    current_timestamp() as last_updt_dt\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_sales_wk a\nleft join DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_semana b\n    on a.id_semana = b.id_semana\ngroup by\n    a.id_cliente,\n    a.id_producto,\n    b.des_trimestre", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.mx_sales_tri"}, "model.sdna_project.mx_sales_wk": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\", \"refresh_weekly\"]) }}\nselect\n    a11.id_cliente id_cliente,\n    a13.id_producto,\n    a11.id_semana id_semana,\n    a15.des_semana des_semana,\n    sum(a11.venta_capt_uni) unidad,\n    sum(a11.venta_capt_pes) pesos,\n    current_timestamp() last_updt_dt\nfrom {{ ref('dls_latam_ins_vtaclipro_sem_v') }} a11\njoin {{ ref('dls_latam_ins_producto') }} a13\n    on (a11.id_producto = a13.id_producto)\njoin {{ ref('dls_latam_ins_semana') }} a15\n    on (a11.id_semana = a15.id_semana)\ngroup by\n    a11.id_cliente,\n    a13.id_producto,\n    a11.id_semana,\n    a15.des_semana", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.dls_latam_ins_vtaclipro_sem_v", "model.sdna_project.dls_latam_ins_producto", "model.sdna_project.dls_latam_ins_semana"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "mx_sales_wk"], "unique_id": "model.sdna_project.mx_sales_wk", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/mx_sales_wk.sql", "original_file_path": "models/sdna_mx/transformations/mx_sales_wk.sql", "name": "mx_sales_wk", "alias": "mx_sales_wk", "checksum": {"name": "sha256", "checksum": "3a09559f7eea0433df4187b4e3358ad0ded756a7a55898c44b60507fdf14d74d"}, "tags": ["mx", "transformation", "refresh_weekly"], "refs": [["dls_latam_ins_vtaclipro_sem_v"], ["dls_latam_ins_producto"], ["dls_latam_ins_semana"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mx_sales_wk.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\nselect\n    a11.id_cliente id_cliente,\n    a13.id_producto,\n    a11.id_semana id_semana,\n    a15.des_semana des_semana,\n    sum(a11.venta_capt_uni) unidad,\n    sum(a11.venta_capt_pes) pesos,\n    current_timestamp() last_updt_dt\nfrom DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_vtaclipro_sem_v a11\njoin DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_producto a13\n    on (a11.id_producto = a13.id_producto)\njoin DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_semana a15\n    on (a11.id_semana = a15.id_semana)\ngroup by\n    a11.id_cliente,\n    a13.id_producto,\n    a11.id_semana,\n    a15.des_semana", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.mx_sales_wk"}, "model.sdna_project.mx_stores": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\", \"refresh_weekly\"]) }}\nselect distinct\n    id_cliente,\n    des_cliente,\n    direccion,\n    des_municipio,\n    des_edo,\n    des_cp,\n    lat,\n    long,\n    idcia_ruta,\n    des_cia_ruta,\n    id_zona,\n    des_zona,\n    id_division,\n    division,\n    id_sucursal,\n    sucursal,\n    id_tiporuta,\n    des_tiporuta,\n    tru_clave,\n    id_ruta,\n    ruta,\n    id_ruta_corp,\n    id_cli_corp,\n    id_tipocliente,\n    tipocliente,\n    id_nivelcliente,\n    des_nivelcliente,\n    case\n        when trim(des_cliente) like  ('%LA COMER%')\n            or trim(des_cliente) like ('%SORIANA%')\n            or trim(des_cliente) like ('%COMERCIAL MEXICANA%')\n            or trim(des_cliente) like ('%WALMART%')\n            or trim(des_cliente) like ('%SAMS CLUB%')\n            or trim(des_cliente) like ('%COSTCO%')\n            or trim(des_cliente) like ('%EL ZORRO%')\n            or trim(des_cliente) like ('%SUPERAMA%')\n            or trim(des_cliente) like ('%CHEDRAUI%')\n            or trim(des_cliente) like ('%BODEGA AURRERA EXPRESS%')\n        then 'LF'\n        when trim(des_cliente) like ('%BAE%')\n            and trim(des_cliente) not like ('%BAEZ%')\n            and trim(des_cliente) not like ('%BAEZA%')\n        then 'LF'\n        else 'SF'\n    end as format,\n    current_timestamp() as last_updt_dt\nfrom {{ ref('mx_stores_stg') }}\n-- these are the bounding coordinates for MX. Anything else is invalid.\nwhere lat between 14.5 and 32.8\nand long between -117.2 and -86.7", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mx_stores_stg"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation", "refresh_weekly"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "mx_stores"], "unique_id": "model.sdna_project.mx_stores", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/mx_stores.sql", "original_file_path": "models/sdna_mx/transformations/mx_stores.sql", "name": "mx_stores", "alias": "mx_stores", "checksum": {"name": "sha256", "checksum": "7e068bca7f9cdddaabcd5dae2f32b515aa58d5d4327da6e28f0e3cb72e1c1ab8"}, "tags": ["mx", "transformation", "refresh_weekly"], "refs": [["mx_stores_stg"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mx_stores.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation", "refresh_weekly"]}, "created_at": 1629326231, "compiled_sql": "\nwith __dbt__cte__mx_stores_stg as (\n\nSELECT DISTINCT\n    a11.id_cliente AS id_cliente,\n    a12.des_cliente AS des_cliente,\n    CONCAT(a12.des_numero, a12.des_calle) AS direccion,\n    a12.des_municipio AS des_municipio,\n    a12.des_edo AS des_edo,\n    a12.des_cp AS des_cp,\n    a12.des_corx AS lat,\n    a12.des_cory AS long,\n    a11.id_cia_ruta AS idcia_ruta,\n    a17.des_cia_ruta AS des_cia_ruta,\n    a14.id_zona AS id_zona,\n    a14.des_zona AS des_zona,\n    a14.id_division AS id_division,\n    CONCAT(a14.id_div_ods, ' ', a14.des_division) AS division,\n    a12.id_sucursal AS id_sucursal,\n    CONCAT(a14.id_suc_corp, '  ', COALESCE(a14.des_sucursal, '')) AS sucursal,\n    a19.id_tiporuta AS id_tiporuta,\n    a111.des_tiporuta AS des_tiporuta,\n    a111.tru_clave AS tru_clave,\n    a11.id_ruta AS id_ruta,\n    CONCAT(a19.id_ruta_corp, '  ', COALESCE(a19.des_ruta, '')) AS ruta,\n    a19.id_ruta_corp AS id_ruta_corp,\n    a12.id_cli_corp AS id_cli_corp,\n    a11.id_tipocliente AS id_tipocliente,\n    CONCAT(a110.id_tcl_corp, '  ', a110.des_tipocliente) AS tipocliente,\n    a11.id_nivelcliente AS id_nivelcliente,\n    a18.id_ncl_corp AS des_nivelcliente\nFROM\n    DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_vtaclipro_sem_v AS a11\n    JOIN\n        DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_maestrocliente AS a12\n        ON (a11.id_cliente = a12.id_cliente)\n    JOIN\n        DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_sucursal AS a14\n        ON (a12.id_sucursal = a14.id_sucursal)\n    JOIN\n        DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_cia_ruta AS a17\n        ON (a11.id_cia_ruta = a17.id_cia_ruta)\n    JOIN\n        DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_nivelcliente AS a18\n        ON (a11.id_cia_ruta = a18.id_cia_ruta\n        AND a11.id_nivelcliente = a18.id_nivelcliente)\n    JOIN\n        DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_ruta AS a19\n        ON (a11.id_cia_ruta = a19.id_cia_ruta\n        AND a11.id_ruta = a19.id_ruta\n        AND a14.id_sucursal = a19.id_sucursal)\n    JOIN\n        DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_tipocliente AS a110\n        ON (a11.id_tipocliente = a110.id_tipocliente)\n    JOIN\n        DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_tiporuta AS a111\n        ON (TRY_CAST(a19.id_tiporuta AS number) = a111.id_tiporuta)\n)select distinct\n    id_cliente,\n    des_cliente,\n    direccion,\n    des_municipio,\n    des_edo,\n    des_cp,\n    lat,\n    long,\n    idcia_ruta,\n    des_cia_ruta,\n    id_zona,\n    des_zona,\n    id_division,\n    division,\n    id_sucursal,\n    sucursal,\n    id_tiporuta,\n    des_tiporuta,\n    tru_clave,\n    id_ruta,\n    ruta,\n    id_ruta_corp,\n    id_cli_corp,\n    id_tipocliente,\n    tipocliente,\n    id_nivelcliente,\n    des_nivelcliente,\n    case\n        when trim(des_cliente) like  ('%LA COMER%')\n            or trim(des_cliente) like ('%SORIANA%')\n            or trim(des_cliente) like ('%COMERCIAL MEXICANA%')\n            or trim(des_cliente) like ('%WALMART%')\n            or trim(des_cliente) like ('%SAMS CLUB%')\n            or trim(des_cliente) like ('%COSTCO%')\n            or trim(des_cliente) like ('%EL ZORRO%')\n            or trim(des_cliente) like ('%SUPERAMA%')\n            or trim(des_cliente) like ('%CHEDRAUI%')\n            or trim(des_cliente) like ('%BODEGA AURRERA EXPRESS%')\n        then 'LF'\n        when trim(des_cliente) like ('%BAE%')\n            and trim(des_cliente) not like ('%BAEZ%')\n            and trim(des_cliente) not like ('%BAEZA%')\n        then 'LF'\n        else 'SF'\n    end as format,\n    current_timestamp() as last_updt_dt\nfrom __dbt__cte__mx_stores_stg\n-- these are the bounding coordinates for MX. Anything else is invalid.\nwhere lat between 14.5 and 32.8\nand long between -117.2 and -86.7", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sdna_project.mx_stores_stg", "sql": " __dbt__cte__mx_stores_stg as (\n\nSELECT DISTINCT\n    a11.id_cliente AS id_cliente,\n    a12.des_cliente AS des_cliente,\n    CONCAT(a12.des_numero, a12.des_calle) AS direccion,\n    a12.des_municipio AS des_municipio,\n    a12.des_edo AS des_edo,\n    a12.des_cp AS des_cp,\n    a12.des_corx AS lat,\n    a12.des_cory AS long,\n    a11.id_cia_ruta AS idcia_ruta,\n    a17.des_cia_ruta AS des_cia_ruta,\n    a14.id_zona AS id_zona,\n    a14.des_zona AS des_zona,\n    a14.id_division AS id_division,\n    CONCAT(a14.id_div_ods, ' ', a14.des_division) AS division,\n    a12.id_sucursal AS id_sucursal,\n    CONCAT(a14.id_suc_corp, '  ', COALESCE(a14.des_sucursal, '')) AS sucursal,\n    a19.id_tiporuta AS id_tiporuta,\n    a111.des_tiporuta AS des_tiporuta,\n    a111.tru_clave AS tru_clave,\n    a11.id_ruta AS id_ruta,\n    CONCAT(a19.id_ruta_corp, '  ', COALESCE(a19.des_ruta, '')) AS ruta,\n    a19.id_ruta_corp AS id_ruta_corp,\n    a12.id_cli_corp AS id_cli_corp,\n    a11.id_tipocliente AS id_tipocliente,\n    CONCAT(a110.id_tcl_corp, '  ', a110.des_tipocliente) AS tipocliente,\n    a11.id_nivelcliente AS id_nivelcliente,\n    a18.id_ncl_corp AS des_nivelcliente\nFROM\n    DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_vtaclipro_sem_v AS a11\n    JOIN\n        DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_maestrocliente AS a12\n        ON (a11.id_cliente = a12.id_cliente)\n    JOIN\n        DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_sucursal AS a14\n        ON (a12.id_sucursal = a14.id_sucursal)\n    JOIN\n        DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_cia_ruta AS a17\n        ON (a11.id_cia_ruta = a17.id_cia_ruta)\n    JOIN\n        DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_nivelcliente AS a18\n        ON (a11.id_cia_ruta = a18.id_cia_ruta\n        AND a11.id_nivelcliente = a18.id_nivelcliente)\n    JOIN\n        DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_ruta AS a19\n        ON (a11.id_cia_ruta = a19.id_cia_ruta\n        AND a11.id_ruta = a19.id_ruta\n        AND a14.id_sucursal = a19.id_sucursal)\n    JOIN\n        DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_tipocliente AS a110\n        ON (a11.id_tipocliente = a110.id_tipocliente)\n    JOIN\n        DP_SDNA_MX.SDNA_MX_DEV.dls_latam_ins_tiporuta AS a111\n        ON (TRY_CAST(a19.id_tiporuta AS number) = a111.id_tiporuta)\n)"}], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.mx_stores"}, "model.sdna_project.mxstore_ent": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\"]) }}\nWITH x AS (\n    SELECT DISTINCT\n        a.id_cliente,\n        ent AS ent,\n        format,\n        FIRST_VALUE(ent) OVER(PARTITION BY a.id_cliente ORDER BY format) AS rn\n    FROM {{ ref('mx_stores') }} a\n    JOIN {{ ref('inegi_2') }}\n    WHERE\n        lat BETWEEN -90 AND 90\n        AND long BETWEEN -180 AND 180\n        --lat <90 and long >-30\n        --and ent in ('09','17','19')\n        AND ST_DWITHIN(TO_GEOGRAPHY(ST_MAKEPOINT(long, lat)), geometry, 100)\n    ORDER BY\n        a.id_cliente\n)\nSELECT DISTINCT\n    id_cliente,\n    rn AS ent,\n    format,\n    CURRENT_TIMESTAMP() AS last_updt_dt\nFROM x", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mx_stores", "model.sdna_project.inegi_2"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "mxstore_ent"], "unique_id": "model.sdna_project.mxstore_ent", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/mxstore_ent.sql", "original_file_path": "models/sdna_mx/transformations/mxstore_ent.sql", "name": "mxstore_ent", "alias": "mxstore_ent", "checksum": {"name": "sha256", "checksum": "4b79d834519110abc0a236e1761b59bca32ff2851ff32573624beb9e21c8d4e8"}, "tags": ["mx", "transformation"], "refs": [["mx_stores"], ["inegi_2"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mxstore_ent.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation"]}, "created_at": 1629326231, "compiled_sql": "\nWITH x AS (\n    SELECT DISTINCT\n        a.id_cliente,\n        ent AS ent,\n        format,\n        FIRST_VALUE(ent) OVER(PARTITION BY a.id_cliente ORDER BY format) AS rn\n    FROM DP_SDNA_MX.SDNA_MX_DEV.mx_stores a\n    JOIN DP_SDNA_MX.SDNA_MX_DEV.inegi_2\n    WHERE\n        lat BETWEEN -90 AND 90\n        AND long BETWEEN -180 AND 180\n        --lat <90 and long >-30\n        --and ent in ('09','17','19')\n        AND ST_DWITHIN(TO_GEOGRAPHY(ST_MAKEPOINT(long, lat)), geometry, 100)\n    ORDER BY\n        a.id_cliente\n)\nSELECT DISTINCT\n    id_cliente,\n    rn AS ent,\n    format,\n    CURRENT_TIMESTAMP() AS last_updt_dt\nFROM x", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.mxstore_ent"}, "model.sdna_project.nse": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\", \"refresh_once\"]) }}\nwith x as (\n    select distinct\n        lpad(ent, 2, 0) as ent,\n        entidad,\n        a_b,\n        c_plus,\n        c,\n        c_minus,\n        d_plus,\n        d,\n        e\n    from {{ ref('nse_stg') }}\n)\nselect distinct\n    *,\n    current_timestamp() as last_updt_dt\nfrom x", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.nse_stg"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation", "refresh_once"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "nse"], "unique_id": "model.sdna_project.nse", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/nse.sql", "original_file_path": "models/sdna_mx/transformations/nse.sql", "name": "nse", "alias": "nse", "checksum": {"name": "sha256", "checksum": "114222c13425cfb57b3743f5d8a2e4f0774d6a9b419d11d0b3a222ec3619092d"}, "tags": ["mx", "transformation", "refresh_once"], "refs": [["nse_stg"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/nse.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation", "refresh_once"]}, "created_at": 1629326231, "compiled_sql": "\nwith x as (\n    select distinct\n        lpad(ent, 2, 0) as ent,\n        entidad,\n        a_b,\n        c_plus,\n        c,\n        c_minus,\n        d_plus,\n        d,\n        e\n    from DP_SDNA_MX.SDNA_MX_DEV.nse_stg\n)\nselect distinct\n    *,\n    current_timestamp() as last_updt_dt\nfrom x", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.nse"}, "model.sdna_project.store_mobility": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\", \"refresh_monthly\"]) }}\nwith id_cliente_daily_ttl as (\n    select\n        x.id_cliente as id_cliente,\n        a.agg_day_period as agg_day_period,\n        sum(nvl(a.activity_index_total, 0)) as sum_daily_activity_ttl,\n        (\n            sum(\n                case\n                    when agg_day_period < '2020-04-01'\n                    then nvl(sum(nvl(a.activity_index_total, 0)), 0)\n                end\n            ) over (partition by x.id_cliente) / 91\n        ) as avg_daily_activity_q1\n    from {{ ref('mapping_id_cliente_quadkey') }} x\n    join dp_data_share_aws_to_az_replica.mapbox.mapbox_v0_2_daily_quadkey_total a\n        on x.geography = a.geography\n    where a.country = 'MX'\n    group by\n        x.id_cliente,\n        a.agg_day_period\n),\nsummary as (\n    select\n        id_cliente,\n        trunc(agg_day_period, 'MM') as month_year,\n        avg(nvl(sum_daily_activity_ttl, 0)) as avg_daily_activity_ttl,\n        avg_daily_activity_q1\n    from id_cliente_daily_ttl\n    group by\n        id_cliente,\n        trunc(agg_day_period, 'MM'),\n        avg_daily_activity_q1\n)\nselect\n    id_cliente,\n    month_year,\n    avg_daily_activity_ttl,\n    nvl(avg_daily_activity_q1, 0) as avg_daily_activity_q1,\n    nvl((nvl(avg_daily_activity_ttl, 0) / avg_daily_activity_q1), 0) as ttl_activity_q1_index\nfrom summary", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mapping_id_cliente_quadkey"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation", "refresh_monthly"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "store_mobility"], "unique_id": "model.sdna_project.store_mobility", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/store_mobility.sql", "original_file_path": "models/sdna_mx/transformations/store_mobility.sql", "name": "store_mobility", "alias": "store_mobility", "checksum": {"name": "sha256", "checksum": "6b68af21b96846ed92054a0d8c2eb09fb902a36e14e4b2340bfcab4079a171bb"}, "tags": ["mx", "transformation", "refresh_monthly"], "refs": [["mapping_id_cliente_quadkey"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/store_mobility.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation", "refresh_monthly"]}, "created_at": 1629326231, "compiled_sql": "\nwith id_cliente_daily_ttl as (\n    select\n        x.id_cliente as id_cliente,\n        a.agg_day_period as agg_day_period,\n        sum(nvl(a.activity_index_total, 0)) as sum_daily_activity_ttl,\n        (\n            sum(\n                case\n                    when agg_day_period < '2020-04-01'\n                    then nvl(sum(nvl(a.activity_index_total, 0)), 0)\n                end\n            ) over (partition by x.id_cliente) / 91\n        ) as avg_daily_activity_q1\n    from DP_SDNA_MX.SDNA_MX_DEV.mapping_id_cliente_quadkey x\n    join dp_data_share_aws_to_az_replica.mapbox.mapbox_v0_2_daily_quadkey_total a\n        on x.geography = a.geography\n    where a.country = 'MX'\n    group by\n        x.id_cliente,\n        a.agg_day_period\n),\nsummary as (\n    select\n        id_cliente,\n        trunc(agg_day_period, 'MM') as month_year,\n        avg(nvl(sum_daily_activity_ttl, 0)) as avg_daily_activity_ttl,\n        avg_daily_activity_q1\n    from id_cliente_daily_ttl\n    group by\n        id_cliente,\n        trunc(agg_day_period, 'MM'),\n        avg_daily_activity_q1\n)\nselect\n    id_cliente,\n    month_year,\n    avg_daily_activity_ttl,\n    nvl(avg_daily_activity_q1, 0) as avg_daily_activity_q1,\n    nvl((nvl(avg_daily_activity_ttl, 0) / avg_daily_activity_q1), 0) as ttl_activity_q1_index\nfrom summary", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.store_mobility"}, "model.sdna_project.store_poi_counts": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\", \"refresh_quarterly\"]) }}\nselect\n    a.id_cliente,\n    b.business_category,\n    count(distinct a.dataplor_id) as count_poi,\n    current_timestamp() as last_updt_dt\nfrom {{ ref('mapping_id_cliente_dataplor_all') }} a\njoin {{ ref('dataplor') }} b\n    on a.dataplor_id = b.dataplor_id\ngroup by\n    a.id_cliente,\n    b.business_category\norder by\n    a.id_cliente", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mapping_id_cliente_dataplor_all", "model.sdna_project.dataplor"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation", "refresh_quarterly"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "store_poi_counts"], "unique_id": "model.sdna_project.store_poi_counts", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/store_poi_counts.sql", "original_file_path": "models/sdna_mx/transformations/store_poi_counts.sql", "name": "store_poi_counts", "alias": "store_poi_counts", "checksum": {"name": "sha256", "checksum": "fd6bfdded75d9ebf7f10071b7d4851b29c8a560113597b605ace3334af81cd80"}, "tags": ["mx", "transformation", "refresh_quarterly"], "refs": [["mapping_id_cliente_dataplor_all"], ["dataplor"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/store_poi_counts.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation", "refresh_quarterly"]}, "created_at": 1629326231, "compiled_sql": "\nselect\n    a.id_cliente,\n    b.business_category,\n    count(distinct a.dataplor_id) as count_poi,\n    current_timestamp() as last_updt_dt\nfrom DP_SDNA_MX.SDNA_MX_DEV.mapping_id_cliente_dataplor_all a\njoin DP_SDNA_MX.SDNA_MX_DEV.dataplor b\n    on a.dataplor_id = b.dataplor_id\ngroup by\n    a.id_cliente,\n    b.business_category\norder by\n    a.id_cliente", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.store_poi_counts"}, "model.sdna_project.tradearea": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\"]) }}\nSELECT\n    id_cliente,\n    manzana_count,\n    vivtot,\n    tvivhab,\n    p_tvivhab,\n    tvivpar,\n    p_tvivpar,\n    tvivparhab,\n    pvivparhab,\n    vivpar_des,\n    p_vivpar_d,\n    vivpar_ut,\n    p_vivpar_u,\n    vivnohab,\n    p_vivnohab,\n    proocup_c,\n    pobtot,\n    p0a14a,\n    pp0a14a,\n    p15a29a,\n    pp15a29a,\n    p30a59a,\n    pp30a59a,\n    p_60ymas,\n    pp_60ymas,\n    genz,\n    millenial,\n    genx,\n    baby_boomer,\n    a_b,\n    c_plus,\n    c,\n    c_minus,\n    d_plus,\n    d,\n    e,\n    f_pob,\n    m_pob,\n    pcon_lim,\n    ppcon_lim,\n    y_fam,\n    o_fam,\n    pre_fam,\n    post_fam,\n    graproes,\n    format,\n    current_timestamp() AS last_updt_dt\nFROM {{ ref('tradearea_ranked_step3') }}\nwhere group_value = max_group_value", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.tradearea_ranked_step3"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "tradearea"], "unique_id": "model.sdna_project.tradearea", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/tradearea.sql", "original_file_path": "models/sdna_mx/transformations/tradearea.sql", "name": "tradearea", "alias": "tradearea", "checksum": {"name": "sha256", "checksum": "c8cab3e34aaa609a42008aef6543a6ea191d083493c45f745c983b8504efda69"}, "tags": ["mx", "transformation"], "refs": [["tradearea_ranked_step3"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/tradearea.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation"]}, "created_at": 1629326231, "compiled_sql": "\nwith __dbt__cte__tradearea_df_lf as (\n\nSELECT\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'DF_LF' AS group_type,\n    3 AS group_value\nFROM DP_SDNA_MX.SDNA_MX_DEV.mx_stores\nJOIN DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nWHERE (\n       format = 'LF' AND des_edo IN ('DISTRITO FEDERAL', '%D F%', 'D. F.', 'D.F.', 'DISTITO FEDERAL')\n    OR format = 'LF' AND des_edo IN ('NUEVO LEON')           AND des_municipio IN ('MONTERREY')\n    OR format = 'LF' AND des_edo IN ('JALISCO')              AND des_municipio IN ('GUADALAJARA')\n    OR format = 'LF' AND des_edo IN ('PUEBLA')               AND des_municipio IN ('PUEBLA')\n    OR format = 'LF' AND des_edo IN ('MEXICO')               AND des_municipio IN ('TOLUCA')\n)\n    AND ST_DWITHIN(TO_GEOGRAPHY(ST_MAKEPOINT(long ,lat)), geometry, 1000)\nGROUP BY\n    id_cliente,\n    format\n),  __dbt__cte__tradearea_df_sf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'DF_SF' AS group_type,\n    3 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere (\n       format = 'SF' AND des_edo IN ('DISTRITO FEDERAL', '%D F%', 'D. F.', 'D.F.', 'DISTITO FEDERAL')\n    OR format = 'SF' AND des_edo IN ('NUEVO LEON')           AND des_municipio IN ('MONTERREY')\n    OR format = 'SF' AND des_edo IN ('JALISCO')              AND des_municipio IN ('GUADALAJARA')\n    OR format = 'SF' AND des_edo IN ('PUEBLA')               AND des_municipio IN ('PUEBLA')\n    OR format = 'SF' AND des_edo IN ('MEXICO')               AND des_municipio IN ('TOLUCA')\n)\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 300)\ngroup by\n    id_cliente,\n    format\n),  __dbt__cte__tradearea_r_lf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'R_LF' as group_type,\n    1 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito in ('R', null)\n    and format = 'LF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 5000)\ngroup by\n    id_cliente,\n    format\n),  __dbt__cte__tradearea_r_sf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'R_SF' as group_type,\n    1 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito in ('R', null)\n    and format = 'SF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 5000)\ngroup by\n    id_cliente,\n    format\n),  __dbt__cte__tradearea_u_lf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'U_LF' as group_type,\n    2 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito = 'U'\n    and format = 'LF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 2000)\ngroup by\n    id_cliente,\n    format\n),  __dbt__cte__tradearea_u_sf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'U_SF' as group_type,\n    2 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito = 'U'\n    and format = 'SF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 1000)\ngroup by\n    id_cliente,\n    format\n),  __dbt__cte__tradearea_union_step2 as (\n\nselect * from __dbt__cte__tradearea_df_lf\nunion all\nselect * from __dbt__cte__tradearea_df_sf\nunion all\nselect * from __dbt__cte__tradearea_r_lf\nunion all\nselect * from __dbt__cte__tradearea_r_sf\nunion all\nselect * from __dbt__cte__tradearea_u_lf\nunion all\nselect * from __dbt__cte__tradearea_u_sf\n),  __dbt__cte__tradearea_ranked_step3 as (\n\nSELECT\n    id_cliente,\n    manzana_count,\n    vivtot,\n    tvivhab,\n    p_tvivhab,\n    tvivpar,\n    p_tvivpar,\n    tvivparhab,\n    pvivparhab,\n    vivpar_des,\n    p_vivpar_d,\n    vivpar_ut,\n    p_vivpar_u,\n    vivnohab,\n    p_vivnohab,\n    proocup_c,\n    pobtot,\n    p0a14a,\n    pp0a14a,\n    p15a29a,\n    pp15a29a,\n    p30a59a,\n    pp30a59a,\n    p_60ymas,\n    pp_60ymas,\n    genz,\n    millenial,\n    genx,\n    baby_boomer,\n    a_b,\n    c_plus,\n    c,\n    c_minus,\n    d_plus,\n    d,\n    e,\n    f_pob,\n    m_pob,\n    pcon_lim,\n    ppcon_lim,\n    y_fam,\n    o_fam,\n    pre_fam,\n    post_fam,\n    graproes,\n    format,\n    group_type,\n    group_value,\n    first_value(group_value) over (partition by id_cliente order by group_value desc) as max_group_value\nFROM __dbt__cte__tradearea_union_step2\n)SELECT\n    id_cliente,\n    manzana_count,\n    vivtot,\n    tvivhab,\n    p_tvivhab,\n    tvivpar,\n    p_tvivpar,\n    tvivparhab,\n    pvivparhab,\n    vivpar_des,\n    p_vivpar_d,\n    vivpar_ut,\n    p_vivpar_u,\n    vivnohab,\n    p_vivnohab,\n    proocup_c,\n    pobtot,\n    p0a14a,\n    pp0a14a,\n    p15a29a,\n    pp15a29a,\n    p30a59a,\n    pp30a59a,\n    p_60ymas,\n    pp_60ymas,\n    genz,\n    millenial,\n    genx,\n    baby_boomer,\n    a_b,\n    c_plus,\n    c,\n    c_minus,\n    d_plus,\n    d,\n    e,\n    f_pob,\n    m_pob,\n    pcon_lim,\n    ppcon_lim,\n    y_fam,\n    o_fam,\n    pre_fam,\n    post_fam,\n    graproes,\n    format,\n    current_timestamp() AS last_updt_dt\nFROM __dbt__cte__tradearea_ranked_step3\nwhere group_value = max_group_value", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sdna_project.tradearea_df_lf", "sql": " __dbt__cte__tradearea_df_lf as (\n\nSELECT\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'DF_LF' AS group_type,\n    3 AS group_value\nFROM DP_SDNA_MX.SDNA_MX_DEV.mx_stores\nJOIN DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nWHERE (\n       format = 'LF' AND des_edo IN ('DISTRITO FEDERAL', '%D F%', 'D. F.', 'D.F.', 'DISTITO FEDERAL')\n    OR format = 'LF' AND des_edo IN ('NUEVO LEON')           AND des_municipio IN ('MONTERREY')\n    OR format = 'LF' AND des_edo IN ('JALISCO')              AND des_municipio IN ('GUADALAJARA')\n    OR format = 'LF' AND des_edo IN ('PUEBLA')               AND des_municipio IN ('PUEBLA')\n    OR format = 'LF' AND des_edo IN ('MEXICO')               AND des_municipio IN ('TOLUCA')\n)\n    AND ST_DWITHIN(TO_GEOGRAPHY(ST_MAKEPOINT(long ,lat)), geometry, 1000)\nGROUP BY\n    id_cliente,\n    format\n)"}, {"id": "model.sdna_project.tradearea_df_sf", "sql": " __dbt__cte__tradearea_df_sf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'DF_SF' AS group_type,\n    3 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere (\n       format = 'SF' AND des_edo IN ('DISTRITO FEDERAL', '%D F%', 'D. F.', 'D.F.', 'DISTITO FEDERAL')\n    OR format = 'SF' AND des_edo IN ('NUEVO LEON')           AND des_municipio IN ('MONTERREY')\n    OR format = 'SF' AND des_edo IN ('JALISCO')              AND des_municipio IN ('GUADALAJARA')\n    OR format = 'SF' AND des_edo IN ('PUEBLA')               AND des_municipio IN ('PUEBLA')\n    OR format = 'SF' AND des_edo IN ('MEXICO')               AND des_municipio IN ('TOLUCA')\n)\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 300)\ngroup by\n    id_cliente,\n    format\n)"}, {"id": "model.sdna_project.tradearea_r_lf", "sql": " __dbt__cte__tradearea_r_lf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'R_LF' as group_type,\n    1 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito in ('R', null)\n    and format = 'LF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 5000)\ngroup by\n    id_cliente,\n    format\n)"}, {"id": "model.sdna_project.tradearea_r_sf", "sql": " __dbt__cte__tradearea_r_sf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'R_SF' as group_type,\n    1 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito in ('R', null)\n    and format = 'SF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 5000)\ngroup by\n    id_cliente,\n    format\n)"}, {"id": "model.sdna_project.tradearea_u_lf", "sql": " __dbt__cte__tradearea_u_lf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'U_LF' as group_type,\n    2 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito = 'U'\n    and format = 'LF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 2000)\ngroup by\n    id_cliente,\n    format\n)"}, {"id": "model.sdna_project.tradearea_u_sf", "sql": " __dbt__cte__tradearea_u_sf as (\n\nselect\n    id_cliente,\n    COUNT(cvegeo) AS manzana_count,\n    SUM(vivtot) AS vivtot,\n    SUM(tvivhab) AS tvivhab,\n    AVG(p_tvivhab) AS p_tvivhab,\n    SUM(tvivpar) AS tvivpar,\n    AVG(p_tvivpar) AS p_tvivpar,\n    SUM(tvivparhab) AS tvivparhab,\n    AVG(pvivparhab) AS pvivparhab,\n    SUM(vivpar_des) AS vivpar_des,\n    AVG(p_vivpar_d) AS p_vivpar_d,\n    SUM(vivpar_ut) AS vivpar_ut,\n    AVG(p_vivpar_u) AS p_vivpar_u,\n    SUM(vivnohab) AS vivnohab,\n    AVG(p_vivnohab) AS p_vivnohab,\n    AVG(proocup_c) AS proocup_c,\n    SUM(pobtot) AS pobtot,\n    SUM(p0a14a) AS p0a14a,\n    AVG(pp0a14a) AS pp0a14a,\n    SUM(p15a29a) AS p15a29a,\n    AVG(pp15a29a) AS pp15a29a,\n    SUM(p30a59a) AS p30a59a,\n    AVG(pp30a59a) AS pp30a59a,\n    SUM(p_60ymas) AS p_60ymas,\n    AVG(pp_60ymas) AS pp_60ymas,\n    SUM(genz) AS genz,\n    SUM(millenial) AS millenial,\n    SUM(genx) AS genx,\n    SUM(baby_boomer) AS baby_boomer,\n    SUM(a_b) AS a_b,\n    SUM(c_plus) AS c_plus,\n    SUM(c) AS c,\n    SUM(c_minus) AS c_minus,\n    SUM(d_plus) AS d_plus,\n    SUM(d) AS d,\n    SUM(e) AS e,\n    SUM(f_pob) AS f_pob,\n    SUM(m_pob) AS m_pob,\n    SUM(pcon_lim) AS pcon_lim,\n    AVG(ppcon_lim) AS ppcon_lim,\n    SUM(y_fam) AS y_fam,\n    SUM(o_fam) AS o_fam,\n    SUM(pre_fam) AS pre_fam,\n    SUM(post_fam) AS post_fam,\n    AVG(graproes) AS graproes,\n    format,\n    'U_SF' as group_type,\n    2 AS group_value\nfrom DP_SDNA_MX.SDNA_MX_DEV.mx_stores\njoin DP_SDNA_MX.SDNA_MX_DEV.inegi_2\nwhere ambito = 'U'\n    and format = 'SF'\n    and st_dwithin(to_geography(st_makepoint(long, lat)), geometry, 1000)\ngroup by\n    id_cliente,\n    format\n)"}, {"id": "model.sdna_project.tradearea_union_step2", "sql": " __dbt__cte__tradearea_union_step2 as (\n\nselect * from __dbt__cte__tradearea_df_lf\nunion all\nselect * from __dbt__cte__tradearea_df_sf\nunion all\nselect * from __dbt__cte__tradearea_r_lf\nunion all\nselect * from __dbt__cte__tradearea_r_sf\nunion all\nselect * from __dbt__cte__tradearea_u_lf\nunion all\nselect * from __dbt__cte__tradearea_u_sf\n)"}, {"id": "model.sdna_project.tradearea_ranked_step3", "sql": " __dbt__cte__tradearea_ranked_step3 as (\n\nSELECT\n    id_cliente,\n    manzana_count,\n    vivtot,\n    tvivhab,\n    p_tvivhab,\n    tvivpar,\n    p_tvivpar,\n    tvivparhab,\n    pvivparhab,\n    vivpar_des,\n    p_vivpar_d,\n    vivpar_ut,\n    p_vivpar_u,\n    vivnohab,\n    p_vivnohab,\n    proocup_c,\n    pobtot,\n    p0a14a,\n    pp0a14a,\n    p15a29a,\n    pp15a29a,\n    p30a59a,\n    pp30a59a,\n    p_60ymas,\n    pp_60ymas,\n    genz,\n    millenial,\n    genx,\n    baby_boomer,\n    a_b,\n    c_plus,\n    c,\n    c_minus,\n    d_plus,\n    d,\n    e,\n    f_pob,\n    m_pob,\n    pcon_lim,\n    ppcon_lim,\n    y_fam,\n    o_fam,\n    pre_fam,\n    post_fam,\n    graproes,\n    format,\n    group_type,\n    group_value,\n    first_value(group_value) over (partition by id_cliente order by group_value desc) as max_group_value\nFROM __dbt__cte__tradearea_union_step2\n)"}], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.tradearea"}, "model.sdna_project.urbanicity": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\", \"refresh_once\"]) }}\nwith x as(\n    select distinct\n        lpad(clave_de_entidad, 2, 0) as clave_de_entidad,\n        lpad(clave_de_municipio, 3, 0) as clave_de_municipio,\n        lpad(clave_de_localidad, 4, 0) as clave_de_localidad,\n        nombre_de_localidad,\n        ambito\n    from {{ ref('urbanicity_stg') }}\n)\nselect distinct\n    clave_de_entidad,\n    clave_de_municipio,\n    clave_de_localidad,\n    concat(clave_de_entidad, clave_de_municipio, clave_de_localidad) as localidad_codigo,\n    nombre_de_localidad,\n    ambito,\n    current_timestamp() as last_updt_dt\nfrom x", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.urbanicity_stg"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation", "refresh_once"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "urbanicity"], "unique_id": "model.sdna_project.urbanicity", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/urbanicity.sql", "original_file_path": "models/sdna_mx/transformations/urbanicity.sql", "name": "urbanicity", "alias": "urbanicity", "checksum": {"name": "sha256", "checksum": "fbc981dd58aa3cd429c0eb33be0a6cee604b2c84f96baaf1f1db586cc1327d80"}, "tags": ["mx", "transformation", "refresh_once"], "refs": [["urbanicity_stg"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/urbanicity.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation", "refresh_once"]}, "created_at": 1629326231, "compiled_sql": "\nwith x as(\n    select distinct\n        lpad(clave_de_entidad, 2, 0) as clave_de_entidad,\n        lpad(clave_de_municipio, 3, 0) as clave_de_municipio,\n        lpad(clave_de_localidad, 4, 0) as clave_de_localidad,\n        nombre_de_localidad,\n        ambito\n    from DP_SDNA_MX.SDNA_MX_DEV.urbanicity_stg\n)\nselect distinct\n    clave_de_entidad,\n    clave_de_municipio,\n    clave_de_localidad,\n    concat(clave_de_entidad, clave_de_municipio, clave_de_localidad) as localidad_codigo,\n    nombre_de_localidad,\n    ambito,\n    current_timestamp() as last_updt_dt\nfrom x", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.urbanicity"}, "model.sdna_project.mobility_adm1_mx": {"raw_sql": "{{ config(tags=[\"mx\", \"transformation\"]) }}\nwith mobility_data_cte as\n(\n    select * from {{ ref('stg_mobility_data') }}\n),\n\nlookup_cte as\n(\n    select * from {{ ref('stg_lookup') }}\n),\n\nfinal as\n(\n    select\n        mdc.geo_code,\n        lc.state,\n        lc.centroid,\n        mdc.agg_day,\n        mdc.activity_index_total\n    from mobility_data_cte mdc\n\n    left join lookup_cte lc on mdc.geo_code = lc.geo_code\n)\n\nselect * from final", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.stg_mobility_data", "model.sdna_project.stg_lookup"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": ["mx", "transformation"], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "transaction": true, "index": null}]}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "sdna_mx", "transformations", "mobility", "mobility_adm1_mx"], "unique_id": "model.sdna_project.mobility_adm1_mx", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "sdna_mx/transformations/mobility/mobility_adm1_mx.sql", "original_file_path": "models/sdna_mx/transformations/mobility/mobility_adm1_mx.sql", "name": "mobility_adm1_mx", "alias": "mobility_adm1_mx", "checksum": {"name": "sha256", "checksum": "3a2220ddddeb6276c5cbdfdb1c5f75d12bcb5f7dc4dfeabba1c685d53fd85e03"}, "tags": ["mx", "transformation"], "refs": [["stg_mobility_data"], ["stg_lookup"]], "sources": [], "description": "", "columns": {"geo_code": {"name": "geo_code", "description": "Foreign key -- lookup table", "meta": {}, "data_type": null, "quote": null, "tags": []}, "activity_index_total": {"name": "activity_index_total", "description": "Total activity index for each geo block", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "sdna_project://models/sdna_mx/transformations/mobility/mobility.yml", "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mobility/mobility_adm1_mx.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_SDNA_MX_L {% elif target.name == 'stage' %} USE WAREHOUSE DP_SDNA_MX_M {% elif target.name == 'prod' %} USE WAREHOUSE DP_SDNA_MX_L {% endif %}", "materialized": "table", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "transient": false, "tags": ["mx", "transformation"]}, "created_at": 1629326232, "compiled_sql": "\nwith  __dbt__cte__stg_mobility_data as (\nselect\n    geography as geo_code,\n    agg_day_period as agg_day,\n    activity_index_total as activity_index_total\n\nfrom dp_data_share_aws_to_az_replica.mapbox.mapbox_v0_2_daily_adm1_total\nwhere country = 'MX'\n),  __dbt__cte__stg_lookup as (\nselect\n    unit_code as geo_code,\n    name as state,\n    centroid as centroid\n\nfrom dp_data_share_aws_to_az_replica.mapbox.mapbox_lookup_adm1\nwhere country = 'MX'\n),mobility_data_cte as\n(\n    select * from __dbt__cte__stg_mobility_data\n),\n\nlookup_cte as\n(\n    select * from __dbt__cte__stg_lookup\n),\n\nfinal as\n(\n    select\n        mdc.geo_code,\n        lc.state,\n        lc.centroid,\n        mdc.agg_day,\n        mdc.activity_index_total\n    from mobility_data_cte mdc\n\n    left join lookup_cte lc on mdc.geo_code = lc.geo_code\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sdna_project.stg_mobility_data", "sql": " __dbt__cte__stg_mobility_data as (\nselect\n    geography as geo_code,\n    agg_day_period as agg_day,\n    activity_index_total as activity_index_total\n\nfrom dp_data_share_aws_to_az_replica.mapbox.mapbox_v0_2_daily_adm1_total\nwhere country = 'MX'\n)"}, {"id": "model.sdna_project.stg_lookup", "sql": " __dbt__cte__stg_lookup as (\nselect\n    unit_code as geo_code,\n    name as state,\n    centroid as centroid\n\nfrom dp_data_share_aws_to_az_replica.mapbox.mapbox_lookup_adm1\nwhere country = 'MX'\n)"}], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.mobility_adm1_mx"}, "model.sdna_project.btg_fl_sales_cust_prod_v_extend_full": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AZURE_ENT_CONTAINER',\n    file_format_name='PARQUET',\n    copy_transform=True\n  )\n}}\n(\nSELECT\n    {% for col in get_cols_field_column_mapping('btg_fl_sales_cust_prod_v_extend') %}\n    $1:{{ col[0] }}::{{ col[1] }},\n    {% endfor %}\n    CURRENT_TIMESTAMP()\nFROM\n{{ external_stage('/sDNA/mvh/btg/dx_mvhs/btg_fl_sales_cust_prod_v_extend') }}\n)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.get_cols_field_column_mapping", "macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "stage_name": "AZURE_ENT_CONTAINER", "file_format_name": "PARQUET", "copy_transform": true, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "loads", "btg_extend", "btg_fl_sales_cust_prod_v_extend_full"], "unique_id": "model.sdna_project.btg_fl_sales_cust_prod_v_extend_full", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/loads/btg_extend/btg_fl_sales_cust_prod_v_extend_full.sql", "original_file_path": "models/walmart_data_infra/loads/btg_extend/btg_fl_sales_cust_prod_v_extend_full.sql", "name": "btg_fl_sales_cust_prod_v_extend_full", "alias": "btg_fl_sales_cust_prod_v_extend_full", "checksum": {"name": "sha256", "checksum": "66498798ae7c17ef163e51ce924d4c7f950efbc011a8e44dce359d92d375052e"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/loads/btg_extend/btg_fl_sales_cust_prod_v_extend_full.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "from_external_stage", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AZURE_ENT_CONTAINER", "file_format_name": "PARQUET", "copy_transform": true}, "created_at": 1629326231, "compiled_sql": "\n(\nSELECT\n    \n    $1:msa_id::VARCHAR,\n    \n    $1:fl_cust_id::NUMBER(38, 0),\n    \n    $1:cust_cnt::NUMBER(38, 0),\n    \n    $1:prod_upc::NUMBER(38, 0),\n    \n    $1:prod_slbl::NUMBER(38, 0),\n    \n    $1:upc_mfg_id::NUMBER(38, 0),\n    \n    $1:tdlinx_id::VARCHAR,\n    \n    $1:cust_name::VARCHAR,\n    \n    $1:address::VARCHAR,\n    \n    $1:city::VARCHAR,\n    \n    $1:state::VARCHAR,\n    \n    $1:zip5::VARCHAR,\n    \n    $1:zip9::VARCHAR,\n    \n    $1:county::VARCHAR,\n    \n    $1:latitude::NUMBER(38, 6),\n    \n    $1:longitude::NUMBER(38, 6),\n    \n    $1:division_id::VARCHAR,\n    \n    $1:division::VARCHAR,\n    \n    $1:region_id::VARCHAR,\n    \n    $1:region::VARCHAR,\n    \n    $1:zone_id::VARCHAR,\n    \n    $1:zone::VARCHAR,\n    \n    $1:district_id::VARCHAR,\n    \n    $1:district::VARCHAR,\n    \n    $1:rt_nbr::NUMBER(38, 0),\n    \n    $1:trade_chanl_cde::VARCHAR,\n    \n    $1:trade_chanl_descp::VARCHAR,\n    \n    $1:format::VARCHAR,\n    \n    $1:retailer::VARCHAR,\n    \n    $1:pbc_fbu_flg::VARCHAR,\n    \n    $1:chain_lvl1_node_nbr::VARCHAR,\n    \n    $1:chain_lvl1_node_nm::VARCHAR,\n    \n    $1:chain_lvl2_node_nbr::VARCHAR,\n    \n    $1:chain_lvl2_node_nm::VARCHAR,\n    \n    $1:chain_lvl3_node_nbr::VARCHAR,\n    \n    $1:chain_lvl3_node_nm::VARCHAR,\n    \n    $1:chain_lvl4_node_nbr::VARCHAR,\n    \n    $1:chain_lvl4_node_nm::VARCHAR,\n    \n    $1:sale_class_code::VARCHAR,\n    \n    $1:sale_class_descp::VARCHAR,\n    \n    $1:size_code::VARCHAR,\n    \n    $1:size_descp::VARCHAR,\n    \n    $1:categ_code::VARCHAR,\n    \n    $1:categ_desc::VARCHAR,\n    \n    $1:bus_unit_code::VARCHAR,\n    \n    $1:bus_unit_descp::VARCHAR,\n    \n    $1:brand_code::VARCHAR,\n    \n    $1:brand_descp::VARCHAR,\n    \n    $1:flvr_code::VARCHAR,\n    \n    $1:flvr_descp::VARCHAR,\n    \n    $1:prod_tkt_descp_txt::VARCHAR,\n    \n    $1:upc_cde::VARCHAR,\n    \n    $1:upc_10::VARCHAR,\n    \n    $1:bdc_descp::VARCHAR,\n    \n    $1:gtin::VARCHAR,\n    \n    $1:major_cat::VARCHAR,\n    \n    $1:tkt_sale_amt_cy_ytd::NUMBER(28, 6),\n    \n    $1:tkt_sale_amt_py::NUMBER(28, 6),\n    \n    $1:tkt_sale_amt_2py::NUMBER(28, 6),\n    \n    $1:tkt_sale_amt_py_ytd::NUMBER(28, 6),\n    \n    $1:tkt_sale_amt_2py_ytd::NUMBER(28, 6),\n    \n    $1:tkt_sale_amt_cy_l13p::NUMBER(28, 6),\n    \n    $1:tkt_sale_amt_py_l13p::NUMBER(28, 6),\n    \n    $1:tkt_sale_amt_cy_l4wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_amt_py_l4wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_amt_cy_l12wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_amt_py_l12wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_amt_cy_l26wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_amt_py_l26wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_amt_cy_l52wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_amt_py_l52wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_qty_cy_ytd::NUMBER(28, 6),\n    \n    $1:tkt_sale_qty_py::NUMBER(28, 6),\n    \n    $1:tkt_sale_qty_2py::NUMBER(28, 6),\n    \n    $1:tkt_sale_qty_py_ytd::NUMBER(28, 6),\n    \n    $1:tkt_sale_qty_2py_ytd::NUMBER(28, 6),\n    \n    $1:tkt_sale_qty_cy_l13p::NUMBER(28, 6),\n    \n    $1:tkt_sale_qty_py_l13p::NUMBER(28, 6),\n    \n    $1:tkt_sale_qty_cy_l4wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_qty_py_l4wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_qty_cy_l12wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_qty_py_l12wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_qty_cy_l26wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_qty_py_l26wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_qty_cy_l52wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_qty_py_l52wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_wt_cy_ytd::NUMBER(28, 6),\n    \n    $1:tkt_sale_wt_py::NUMBER(28, 6),\n    \n    $1:tkt_sale_wt_2py::NUMBER(28, 6),\n    \n    $1:tkt_sale_wt_py_ytd::NUMBER(28, 6),\n    \n    $1:tkt_sale_wt_2py_ytd::NUMBER(28, 6),\n    \n    $1:tkt_sale_wt_cy_l13p::NUMBER(28, 6),\n    \n    $1:tkt_sale_wt_py_l13p::NUMBER(28, 6),\n    \n    $1:tkt_sale_wt_cy_l4wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_wt_py_l4wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_wt_cy_l12wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_wt_py_l12wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_wt_cy_l26wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_wt_py_l26wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_wt_cy_l52wk::NUMBER(28, 6),\n    \n    $1:tkt_sale_wt_py_l52wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_amt_cy_ytd::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_amt_py::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_amt_2py::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_amt_py_ytd::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_amt_2py_ytd::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_amt_cy_l13p::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_amt_py_l13p::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_amt_cy_l4wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_amt_py_l4wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_amt_cy_l12wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_amt_py_l12wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_amt_cy_l26wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_amt_py_l26wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_amt_cy_l52wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_amt_py_l52wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_qty_cy_ytd::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_qty_py::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_qty_2py::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_qty_py_ytd::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_qty_2py_ytd::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_qty_cy_l13p::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_qty_py_l13p::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_qty_cy_l4wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_qty_py_l4wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_qty_cy_l12wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_qty_py_l12wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_qty_cy_l26wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_qty_py_l26wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_qty_cy_l52wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_qty_py_l52wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_wt_cy_ytd::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_wt_py::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_wt_2py::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_wt_py_ytd::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_wt_2py_ytd::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_wt_cy_l13p::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_wt_py_l13p::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_wt_cy_l4wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_wt_py_l4wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_wt_cy_l12wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_wt_py_l12wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_wt_cy_l26wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_wt_py_l26wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_wt_cy_l52wk::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_wt_py_l52wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_amt_cy_ytd::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_amt_py::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_amt_2py::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_amt_py_ytd::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_amt_2py_ytd::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_amt_cy_l13p::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_amt_py_l13p::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_amt_cy_l4wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_amt_py_l4wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_amt_cy_l12wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_amt_py_l12wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_amt_cy_l26wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_amt_py_l26wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_amt_cy_l52wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_amt_py_l52wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_qty_cy_ytd::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_qty_py::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_qty_2py::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_qty_py_ytd::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_qty_2py_ytd::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_qty_cy_l13p::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_qty_py_l13p::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_qty_cy_l4wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_qty_py_l4wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_qty_cy_l12wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_qty_py_l12wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_qty_cy_l26wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_qty_py_l26wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_qty_cy_l52wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_qty_py_l52wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_wt_cy_ytd::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_wt_py::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_wt_2py::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_wt_py_ytd::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_wt_2py_ytd::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_wt_cy_l13p::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_wt_py_l13p::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_wt_cy_l4wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_wt_py_l4wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_wt_cy_l12wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_wt_py_l12wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_wt_cy_l26wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_wt_py_l26wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_wt_cy_l52wk::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_wt_py_l52wk::NUMBER(28, 6),\n    \n    $1:am_promo_allow_amt_cy_ytd::NUMBER(28, 6),\n    \n    $1:am_promo_allow_amt_py::NUMBER(28, 6),\n    \n    $1:am_promo_allow_amt_2py::NUMBER(28, 6),\n    \n    $1:am_promo_allow_amt_py_ytd::NUMBER(28, 6),\n    \n    $1:am_promo_allow_amt_2py_ytd::NUMBER(28, 6),\n    \n    $1:am_promo_allow_amt_cy_l13p::NUMBER(28, 6),\n    \n    $1:am_promo_allow_amt_py_l13p::NUMBER(28, 6),\n    \n    $1:am_promo_allow_amt_cy_l4wk::NUMBER(28, 6),\n    \n    $1:am_promo_allow_amt_py_l4wk::NUMBER(28, 6),\n    \n    $1:am_promo_allow_amt_cy_l12wk::NUMBER(28, 6),\n    \n    $1:am_promo_allow_amt_py_l12wk::NUMBER(28, 6),\n    \n    $1:am_promo_allow_amt_cy_l26wk::NUMBER(28, 6),\n    \n    $1:am_promo_allow_amt_py_l26wk::NUMBER(28, 6),\n    \n    $1:am_promo_allow_amt_cy_l52wk::NUMBER(28, 6),\n    \n    $1:am_promo_allow_amt_py_l52wk::NUMBER(28, 6),\n    \n    $1:am_promo_sale_amt_cy_ytd::NUMBER(28, 6),\n    \n    $1:am_promo_sale_amt_py::NUMBER(28, 6),\n    \n    $1:am_promo_sale_amt_2py::NUMBER(28, 6),\n    \n    $1:am_promo_sale_amt_py_ytd::NUMBER(28, 6),\n    \n    $1:am_promo_sale_amt_2py_ytd::NUMBER(28, 6),\n    \n    $1:am_promo_sale_amt_cy_l13p::NUMBER(28, 6),\n    \n    $1:am_promo_sale_amt_py_l13p::NUMBER(28, 6),\n    \n    $1:am_promo_sale_amt_cy_l4wk::NUMBER(28, 6),\n    \n    $1:am_promo_sale_amt_py_l4wk::NUMBER(28, 6),\n    \n    $1:am_promo_sale_amt_cy_l12wk::NUMBER(28, 6),\n    \n    $1:am_promo_sale_amt_py_l12wk::NUMBER(28, 6),\n    \n    $1:am_promo_sale_amt_cy_l26wk::NUMBER(28, 6),\n    \n    $1:am_promo_sale_amt_py_l26wk::NUMBER(28, 6),\n    \n    $1:am_promo_sale_amt_cy_l52wk::NUMBER(28, 6),\n    \n    $1:am_promo_sale_amt_py_l52wk::NUMBER(28, 6),\n    \n    $1:am_promo_sale_qty_cy_ytd::NUMBER(28, 6),\n    \n    $1:am_promo_sale_qty_py::NUMBER(28, 6),\n    \n    $1:am_promo_sale_qty_2py::NUMBER(28, 6),\n    \n    $1:am_promo_sale_qty_py_ytd::NUMBER(28, 6),\n    \n    $1:am_promo_sale_qty_2py_ytd::NUMBER(28, 6),\n    \n    $1:am_promo_sale_qty_cy_l13p::NUMBER(28, 6),\n    \n    $1:am_promo_sale_qty_py_l13p::NUMBER(28, 6),\n    \n    $1:am_promo_sale_qty_cy_l4wk::NUMBER(28, 6),\n    \n    $1:am_promo_sale_qty_py_l4wk::NUMBER(28, 6),\n    \n    $1:am_promo_sale_qty_cy_l12wk::NUMBER(28, 6),\n    \n    $1:am_promo_sale_qty_py_l12wk::NUMBER(28, 6),\n    \n    $1:am_promo_sale_qty_cy_l26wk::NUMBER(28, 6),\n    \n    $1:am_promo_sale_qty_py_l26wk::NUMBER(28, 6),\n    \n    $1:am_promo_sale_qty_cy_l52wk::NUMBER(28, 6),\n    \n    $1:am_promo_sale_qty_py_l52wk::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_amt_cy_ytd::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_amt_py::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_amt_2py::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_amt_py_ytd::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_amt_2py_ytd::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_amt_cy_l13p::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_amt_py_l13p::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_amt_cy_l4wk::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_amt_py_l4wk::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_amt_cy_l12wk::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_amt_py_l12wk::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_amt_cy_l26wk::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_amt_py_l26wk::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_amt_cy_l52wk::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_amt_py_l52wk::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_qty_cy_ytd::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_qty_py::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_qty_2py::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_qty_py_ytd::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_qty_2py_ytd::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_qty_cy_l13p::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_qty_py_l13p::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_qty_cy_l4wk::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_qty_py_l4wk::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_qty_cy_l12wk::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_qty_py_l12wk::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_qty_cy_l26wk::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_qty_py_l26wk::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_qty_cy_l52wk::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_qty_py_l52wk::NUMBER(28, 6),\n    \n    CURRENT_TIMESTAMP()\nFROM\n\n    @DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.__STAGE_TOKEN__/sDNA/mvh/btg/dx_mvhs/btg_fl_sales_cust_prod_v_extend\n\n)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.btg_fl_sales_cust_prod_v_extend_full"}, "model.sdna_project.btg_fl_sales_cust_wk_prod_v_extend_full": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AZURE_ENT_CONTAINER',\n    file_format_name='PARQUET',\n    copy_transform=True\n  )\n}}\n(\nSELECT\n    {% for col in get_cols_field_column_mapping('btg_fl_sales_cust_wk_prod_v_extend') %}\n    $1:{{ col[0] }}::{{ col[1] }},\n    {% endfor %}\n    CURRENT_TIMESTAMP()\nFROM\n{{ external_stage('/sDNA/mvh/btg/dx_mvhs/btg_fl_sales_cust_wk_prod_v_extend') }}\n)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.get_cols_field_column_mapping", "macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "stage_name": "AZURE_ENT_CONTAINER", "file_format_name": "PARQUET", "copy_transform": true, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "loads", "btg_extend", "btg_fl_sales_cust_wk_prod_v_extend_full"], "unique_id": "model.sdna_project.btg_fl_sales_cust_wk_prod_v_extend_full", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/loads/btg_extend/btg_fl_sales_cust_wk_prod_v_extend_full.sql", "original_file_path": "models/walmart_data_infra/loads/btg_extend/btg_fl_sales_cust_wk_prod_v_extend_full.sql", "name": "btg_fl_sales_cust_wk_prod_v_extend_full", "alias": "btg_fl_sales_cust_wk_prod_v_extend_full", "checksum": {"name": "sha256", "checksum": "1cea09732825cc237ea74c3f422fe936f09544ba5d2e90faec33c40e68f78d08"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/loads/btg_extend/btg_fl_sales_cust_wk_prod_v_extend_full.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "from_external_stage", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AZURE_ENT_CONTAINER", "file_format_name": "PARQUET", "copy_transform": true}, "created_at": 1629326231, "compiled_sql": "\n(\nSELECT\n    \n    $1:msa_id::VARCHAR,\n    \n    $1:fl_cust_id::NUMBER(38, 0),\n    \n    $1:prod_upc::NUMBER(38, 0),\n    \n    $1:prod_slbl::NUMBER(38, 0),\n    \n    $1:upc_mfg_id::NUMBER(38, 0),\n    \n    $1:fscl_wk_end_dte::DATE,\n    \n    $1:fscl_yr_num::NUMBER(38, 0),\n    \n    $1:fscl_pd_num::NUMBER(38, 0),\n    \n    $1:fscl_wk_in_pd_num::NUMBER(38, 0),\n    \n    $1:tdlinx_id::VARCHAR,\n    \n    $1:cust_name::VARCHAR,\n    \n    $1:address::VARCHAR,\n    \n    $1:city::VARCHAR,\n    \n    $1:state::VARCHAR,\n    \n    $1:zip5::VARCHAR,\n    \n    $1:zip9::VARCHAR,\n    \n    $1:county::VARCHAR,\n    \n    $1:latitude::NUMBER(38, 6),\n    \n    $1:longitude::NUMBER(38, 6),\n    \n    $1:division_id::VARCHAR,\n    \n    $1:division::VARCHAR,\n    \n    $1:region_id::VARCHAR,\n    \n    $1:region::VARCHAR,\n    \n    $1:zone_id::VARCHAR,\n    \n    $1:zone::VARCHAR,\n    \n    $1:district_id::VARCHAR,\n    \n    $1:district::VARCHAR,\n    \n    $1:rt_nbr::NUMBER(38, 0),\n    \n    $1:trade_chanl_cde::VARCHAR,\n    \n    $1:trade_chanl_descp::VARCHAR,\n    \n    $1:format::VARCHAR,\n    \n    $1:retailer::VARCHAR,\n    \n    $1:pbc_fbu_flg::VARCHAR,\n    \n    $1:chain_lvl1_node_nbr::VARCHAR,\n    \n    $1:chain_lvl1_node_nm::VARCHAR,\n    \n    $1:chain_lvl2_node_nbr::VARCHAR,\n    \n    $1:chain_lvl2_node_nm::VARCHAR,\n    \n    $1:chain_lvl3_node_nbr::VARCHAR,\n    \n    $1:chain_lvl3_node_nm::VARCHAR,\n    \n    $1:chain_lvl4_node_nbr::VARCHAR,\n    \n    $1:chain_lvl4_node_nm::VARCHAR,\n    \n    $1:sale_class_code::VARCHAR,\n    \n    $1:sale_class_descp::VARCHAR,\n    \n    $1:size_code::VARCHAR,\n    \n    $1:size_descp::VARCHAR,\n    \n    $1:categ_code::VARCHAR,\n    \n    $1:categ_desc::VARCHAR,\n    \n    $1:bus_unit_code::VARCHAR,\n    \n    $1:bus_unit_descp::VARCHAR,\n    \n    $1:brand_code::VARCHAR,\n    \n    $1:brand_descp::VARCHAR,\n    \n    $1:flvr_code::VARCHAR,\n    \n    $1:flvr_descp::VARCHAR,\n    \n    $1:prod_tkt_descp_txt::VARCHAR,\n    \n    $1:upc_cde::VARCHAR,\n    \n    $1:upc_10::VARCHAR,\n    \n    $1:bdc_descp::VARCHAR,\n    \n    $1:gtin::VARCHAR,\n    \n    $1:major_cat::VARCHAR,\n    \n    $1:tkt_sale_amt::NUMBER(28, 6),\n    \n    $1:tkt_sale_qty::NUMBER(28, 6),\n    \n    $1:tkt_sale_wt::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_amt::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_qty::NUMBER(28, 6),\n    \n    $1:gross_tkt_sale_wt::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_amt::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_qty::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_wt::NUMBER(28, 6),\n    \n    $1:am_promo_allow_amt::NUMBER(28, 6),\n    \n    $1:am_promo_sale_amt::NUMBER(28, 6),\n    \n    $1:am_promo_sale_qty::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_amt::NUMBER(28, 6),\n    \n    $1:full_revnu_sale_qty::NUMBER(28, 6),\n    \n    CURRENT_TIMESTAMP()\nFROM\n\n    @DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.__STAGE_TOKEN__/sDNA/mvh/btg/dx_mvhs/btg_fl_sales_cust_wk_prod_v_extend\n\n)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.btg_fl_sales_cust_wk_prod_v_extend_full"}, "model.sdna_project.btg_pbc_sales_cust_prod_v_extend_full": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AZURE_ENT_CONTAINER',\n    file_format_name='PARQUET',\n    copy_transform=True\n  )\n}}\n(\nSELECT\n    {% for col in get_cols_field_column_mapping('btg_pbc_sales_cust_prod_v_extend') %}\n    $1:{{ col[0] }}::{{ col[1] }},\n    {% endfor %}\n    CURRENT_TIMESTAMP()\nFROM\n{{ external_stage('/sDNA/mvh/btg/dx_mvhs/btg_pbc_sales_cust_prod_v_extend') }}\n)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.get_cols_field_column_mapping", "macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "stage_name": "AZURE_ENT_CONTAINER", "file_format_name": "PARQUET", "copy_transform": true, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "loads", "btg_extend", "btg_pbc_sales_cust_prod_v_extend_full"], "unique_id": "model.sdna_project.btg_pbc_sales_cust_prod_v_extend_full", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/loads/btg_extend/btg_pbc_sales_cust_prod_v_extend_full.sql", "original_file_path": "models/walmart_data_infra/loads/btg_extend/btg_pbc_sales_cust_prod_v_extend_full.sql", "name": "btg_pbc_sales_cust_prod_v_extend_full", "alias": "btg_pbc_sales_cust_prod_v_extend_full", "checksum": {"name": "sha256", "checksum": "06b91682f4ba0ffd5d8cc050e1957e2375b8f6d28ab44702ddbf14d335085e5b"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/loads/btg_extend/btg_pbc_sales_cust_prod_v_extend_full.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "from_external_stage", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AZURE_ENT_CONTAINER", "file_format_name": "PARQUET", "copy_transform": true}, "created_at": 1629326231, "compiled_sql": "\n(\nSELECT\n    \n    $1:msa_id::VARCHAR,\n    \n    $1:pbc_cust_id::NUMBER(38, 0),\n    \n    $1:inven_id::NUMBER(38, 0),\n    \n    $1:cust_name::VARCHAR,\n    \n    $1:address::VARCHAR,\n    \n    $1:city::VARCHAR,\n    \n    $1:state::VARCHAR,\n    \n    $1:zip5::VARCHAR,\n    \n    $1:zip9::VARCHAR,\n    \n    $1:county::VARCHAR,\n    \n    $1:lat_qty::NUMBER(28, 6),\n    \n    $1:lngtd_qty::NUMBER(28, 6),\n    \n    $1:division_id::NUMBER(38, 0),\n    \n    $1:division::VARCHAR,\n    \n    $1:region_id::NUMBER(38, 0),\n    \n    $1:region::VARCHAR,\n    \n    $1:market_id::NUMBER(38, 0),\n    \n    $1:market::VARCHAR,\n    \n    $1:location::VARCHAR,\n    \n    $1:terr_id::NUMBER(38, 0),\n    \n    $1:terr_nme::VARCHAR,\n    \n    $1:route_id::NUMBER(38, 0),\n    \n    $1:channel_cde::VARCHAR,\n    \n    $1:channel_desc::VARCHAR,\n    \n    $1:format_cde::VARCHAR,\n    \n    $1:format_desc::VARCHAR,\n    \n    $1:banner::VARCHAR,\n    \n    $1:retailer::VARCHAR,\n    \n    $1:cur_stat_desc::VARCHAR,\n    \n    $1:sub_channel_desc::VARCHAR,\n    \n    $1:grp1_lvl_2_desc::VARCHAR,\n    \n    $1:grp2_lvl_1_desc::VARCHAR,\n    \n    $1:grp2_lvl_2_desc::VARCHAR,\n    \n    $1:clust_cde::VARCHAR,\n    \n    $1:clust_desc::VARCHAR,\n    \n    $1:clust_qty::NUMBER(38, 0),\n    \n    $1:cont_desc::VARCHAR,\n    \n    $1:cont_uom_desc::VARCHAR,\n    \n    $1:cont_uom_qty::NUMBER(34, 4),\n    \n    $1:hrzn_pkg_aggr_desc::VARCHAR,\n    \n    $1:hrzn_prod_ctgy_desc::VARCHAR,\n    \n    $1:mkt_trdmrk_desc::VARCHAR,\n    \n    $1:mkt_trdmrk_id::VARCHAR,\n    \n    $1:pbc_fbu_flg::VARCHAR,\n    \n    $1:pkg_clstr_mtrl_desc::VARCHAR,\n    \n    $1:pkg_cont_mtrl_desc::VARCHAR,\n    \n    $1:prod_grp_desc::VARCHAR,\n    \n    $1:ctgy_type_cde::VARCHAR,\n    \n    $1:ctgy_type_desc::VARCHAR,\n    \n    $1:trdmrk_cde::VARCHAR,\n    \n    $1:trdmrk_desc::VARCHAR,\n    \n    $1:brand_cde::NUMBER(38, 0),\n    \n    $1:brnd_nme::VARCHAR,\n    \n    $1:flvr_cde::VARCHAR,\n    \n    $1:flvr_desc::VARCHAR,\n    \n    $1:pkg_nme::VARCHAR,\n    \n    $1:pkg_cde::NUMBER(38, 0),\n    \n    $1:upc_cde::VARCHAR,\n    \n    $1:upc_descp::VARCHAR,\n    \n    $1:ss_mp_ms::VARCHAR,\n    \n    $1:ss_th::VARCHAR,\n    \n    $1:dely_lne_qty_cy_ytd::NUMBER(28, 6),\n    \n    $1:eaches_cy_ytd::NUMBER(28, 6),\n    \n    $1:dely_lne_qty_py::NUMBER(28, 6),\n    \n    $1:eaches_py::NUMBER(28, 6),\n    \n    $1:dely_lne_qty_2py::NUMBER(28, 6),\n    \n    $1:eaches_2py::NUMBER(28, 6),\n    \n    $1:dely_lne_qty_py_ytd::NUMBER(28, 6),\n    \n    $1:eaches_py_ytd::NUMBER(28, 6),\n    \n    $1:dely_lne_qty_2py_ytd::NUMBER(28, 6),\n    \n    $1:eaches_2py_ytd::NUMBER(28, 6),\n    \n    $1:dely_lne_qty_cy_l13p::NUMBER(28, 6),\n    \n    $1:eaches_cy_l13p::NUMBER(28, 6),\n    \n    $1:dely_lne_qty_py_l13p::NUMBER(28, 6),\n    \n    $1:eaches_py_l13p::NUMBER(28, 6),\n    \n    $1:dely_lne_qty_cy_l4wk::NUMBER(28, 6),\n    \n    $1:eaches_cy_l4wk::NUMBER(28, 6),\n    \n    $1:dely_lne_qty_py_l4wk::NUMBER(28, 6),\n    \n    $1:eaches_py_l4wk::NUMBER(28, 6),\n    \n    $1:dely_lne_qty_cy_l12wk::NUMBER(28, 6),\n    \n    $1:eaches_cy_l12wk::NUMBER(28, 6),\n    \n    $1:dely_lne_qty_py_l12wk::NUMBER(28, 6),\n    \n    $1:eaches_py_l12wk::NUMBER(28, 6),\n    \n    $1:dely_lne_qty_cy_l26wk::NUMBER(28, 6),\n    \n    $1:eaches_cy_l26wk::NUMBER(28, 6),\n    \n    $1:dely_lne_qty_py_l26wk::NUMBER(28, 6),\n    \n    $1:eaches_py_l26wk::NUMBER(28, 6),\n    \n    $1:dely_lne_qty_cy_l52wk::NUMBER(28, 6),\n    \n    $1:eaches_cy_l52wk::NUMBER(28, 6),\n    \n    $1:dely_lne_qty_py_l52wk::NUMBER(28, 6),\n    \n    $1:eaches_py_l52wk::NUMBER(28, 6),\n    \n    $1:raw_vol_cy_ytd::NUMBER(28, 6),\n    \n    $1:raw_vol_py::NUMBER(28, 6),\n    \n    $1:raw_vol_2py::NUMBER(28, 6),\n    \n    $1:raw_vol_py_ytd::NUMBER(28, 6),\n    \n    $1:raw_vol_2py_ytd::NUMBER(28, 6),\n    \n    $1:raw_vol_cy_l13p::NUMBER(28, 6),\n    \n    $1:raw_vol_py_l13p::NUMBER(28, 6),\n    \n    $1:raw_vol_cy_l4wk::NUMBER(28, 6),\n    \n    $1:raw_vol_py_l4wk::NUMBER(28, 6),\n    \n    $1:raw_vol_cy_l12wk::NUMBER(28, 6),\n    \n    $1:raw_vol_py_l12wk::NUMBER(28, 6),\n    \n    $1:raw_vol_cy_l26wk::NUMBER(28, 6),\n    \n    $1:raw_vol_py_l26wk::NUMBER(28, 6),\n    \n    $1:raw_vol_cy_l52wk::NUMBER(28, 6),\n    \n    $1:raw_vol_py_l52wk::NUMBER(28, 6),\n    \n    $1:eght_oz_vol_cy_ytd::NUMBER(28, 6),\n    \n    $1:eght_oz_vol_py::NUMBER(28, 6),\n    \n    $1:eght_oz_vol_2py::NUMBER(28, 6),\n    \n    $1:eght_oz_vol_py_ytd::NUMBER(28, 6),\n    \n    $1:eght_oz_vol_2py_ytd::NUMBER(28, 6),\n    \n    $1:eght_oz_vol_cy_l13p::NUMBER(28, 6),\n    \n    $1:eght_oz_vol_py_l13p::NUMBER(28, 6),\n    \n    $1:eght_oz_vol_cy_l4wk::NUMBER(28, 6),\n    \n    $1:eght_oz_vol_py_l4wk::NUMBER(28, 6),\n    \n    $1:eght_oz_vol_cy_l12wk::NUMBER(28, 6),\n    \n    $1:eght_oz_vol_py_l12wk::NUMBER(28, 6),\n    \n    $1:eght_oz_vol_cy_l26wk::NUMBER(28, 6),\n    \n    $1:eght_oz_vol_py_l26wk::NUMBER(28, 6),\n    \n    $1:eght_oz_vol_cy_l52wk::NUMBER(28, 6),\n    \n    $1:eght_oz_vol_py_l52wk::NUMBER(28, 6),\n    \n    $1:net_rev_cy_ytd::NUMBER(28, 6),\n    \n    $1:net_rev_py::NUMBER(28, 6),\n    \n    $1:net_rev_2py::NUMBER(28, 6),\n    \n    $1:net_rev_py_ytd::NUMBER(28, 6),\n    \n    $1:net_rev_2py_ytd::NUMBER(28, 6),\n    \n    $1:net_rev_cy_l13p::NUMBER(28, 6),\n    \n    $1:net_rev_py_l13p::NUMBER(28, 6),\n    \n    $1:net_rev_cy_l4wk::NUMBER(28, 6),\n    \n    $1:net_rev_py_l4wk::NUMBER(28, 6),\n    \n    $1:net_rev_cy_l12wk::NUMBER(28, 6),\n    \n    $1:net_rev_py_l12wk::NUMBER(28, 6),\n    \n    $1:net_rev_cy_l26wk::NUMBER(28, 6),\n    \n    $1:net_rev_py_l26wk::NUMBER(28, 6),\n    \n    $1:net_rev_cy_l52wk::NUMBER(28, 6),\n    \n    $1:net_rev_py_l52wk::NUMBER(28, 6),\n    \n    CURRENT_TIMESTAMP()\nFROM\n\n    @DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.__STAGE_TOKEN__/sDNA/mvh/btg/dx_mvhs/btg_pbc_sales_cust_prod_v_extend\n\n)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.btg_pbc_sales_cust_prod_v_extend_full"}, "model.sdna_project.btg_pbc_sales_cust_wk_prod_v_extend_full": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AZURE_ENT_CONTAINER',\n    file_format_name='PARQUET',\n    copy_transform=True\n  )\n}}\n(\nSELECT\n    {% for col in get_cols_field_column_mapping('btg_pbc_sales_cust_wk_prod_v_extend') %}\n    $1:{{ col[0] }}::{{ col[1] }},\n    {% endfor %}\n    CURRENT_TIMESTAMP()\nFROM\n{{ external_stage('/sDNA/mvh/btg/dx_mvhs/btg_pbc_sales_cust_wk_prod_v_extend') }}\n)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.get_cols_field_column_mapping", "macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "stage_name": "AZURE_ENT_CONTAINER", "file_format_name": "PARQUET", "copy_transform": true, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "loads", "btg_extend", "btg_pbc_sales_cust_wk_prod_v_extend_full"], "unique_id": "model.sdna_project.btg_pbc_sales_cust_wk_prod_v_extend_full", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/loads/btg_extend/btg_pbc_sales_cust_wk_prod_v_extend_full.sql", "original_file_path": "models/walmart_data_infra/loads/btg_extend/btg_pbc_sales_cust_wk_prod_v_extend_full.sql", "name": "btg_pbc_sales_cust_wk_prod_v_extend_full", "alias": "btg_pbc_sales_cust_wk_prod_v_extend_full", "checksum": {"name": "sha256", "checksum": "3ca5cfb3199df3decb2867a81a7d99902dae1548aada8b465b63c115d3ace05d"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/loads/btg_extend/btg_pbc_sales_cust_wk_prod_v_extend_full.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "from_external_stage", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AZURE_ENT_CONTAINER", "file_format_name": "PARQUET", "copy_transform": true}, "created_at": 1629326232, "compiled_sql": "\n(\nSELECT\n    \n    $1:msa_id::VARCHAR,\n    \n    $1:pbc_cust_id::NUMBER(38, 0),\n    \n    $1:inven_id::NUMBER(38, 0),\n    \n    $1:cust_name::VARCHAR,\n    \n    $1:address::VARCHAR,\n    \n    $1:city::VARCHAR,\n    \n    $1:state::VARCHAR,\n    \n    $1:zip5::VARCHAR,\n    \n    $1:zip9::VARCHAR,\n    \n    $1:county::VARCHAR,\n    \n    $1:lat_qty::NUMBER(38, 0),\n    \n    $1:lngtd_qty::NUMBER(38, 0),\n    \n    $1:division_id::NUMBER(38, 0),\n    \n    $1:division::VARCHAR,\n    \n    $1:region_id::NUMBER(38, 0),\n    \n    $1:region::VARCHAR,\n    \n    $1:market_id::NUMBER(38, 0),\n    \n    $1:market::VARCHAR,\n    \n    $1:location::VARCHAR,\n    \n    $1:terr_id::NUMBER(38, 0),\n    \n    $1:terr_nme::VARCHAR,\n    \n    $1:route_id::NUMBER(38, 0),\n    \n    $1:channel_cde::VARCHAR,\n    \n    $1:channel_desc::VARCHAR,\n    \n    $1:format_cde::VARCHAR,\n    \n    $1:format_desc::VARCHAR,\n    \n    $1:banner::VARCHAR,\n    \n    $1:retailer::VARCHAR,\n    \n    $1:cur_stat_desc::VARCHAR,\n    \n    $1:sub_channel_desc::VARCHAR,\n    \n    $1:grp1_lvl_2_desc::VARCHAR,\n    \n    $1:grp2_lvl_1_desc::VARCHAR,\n    \n    $1:grp2_lvl_2_desc::VARCHAR,\n    \n    $1:clust_cde::VARCHAR,\n    \n    $1:clust_desc::VARCHAR,\n    \n    $1:clust_qty::NUMBER(38, 0),\n    \n    $1:cont_desc::VARCHAR,\n    \n    $1:cont_uom_desc::VARCHAR,\n    \n    $1:cont_uom_qty::NUMBER(34, 4),\n    \n    $1:hrzn_pkg_aggr_desc::VARCHAR,\n    \n    $1:hrzn_prod_ctgy_desc::VARCHAR,\n    \n    $1:mkt_trdmrk_desc::VARCHAR,\n    \n    $1:mkt_trdmrk_id::VARCHAR,\n    \n    $1:pbc_fbu_flg::VARCHAR,\n    \n    $1:pkg_clstr_mtrl_desc::VARCHAR,\n    \n    $1:pkg_cont_mtrl_desc::VARCHAR,\n    \n    $1:prod_grp_desc::VARCHAR,\n    \n    $1:ctgy_type_cde::VARCHAR,\n    \n    $1:ctgy_type_desc::VARCHAR,\n    \n    $1:trdmrk_cde::VARCHAR,\n    \n    $1:trdmrk_desc::VARCHAR,\n    \n    $1:brand_cde::NUMBER(38, 0),\n    \n    $1:brnd_nme::VARCHAR,\n    \n    $1:flvr_cde::VARCHAR,\n    \n    $1:flvr_desc::VARCHAR,\n    \n    $1:pkg_nme::VARCHAR,\n    \n    $1:pkg_cde::NUMBER(38, 0),\n    \n    $1:upc_cde::VARCHAR,\n    \n    $1:upc_descp::VARCHAR,\n    \n    $1:ss_mp_ms::VARCHAR,\n    \n    $1:ss_th::VARCHAR,\n    \n    $1:fscl_wk_end_dte::DATE,\n    \n    $1:fscl_yr_num::NUMBER(38, 0),\n    \n    $1:fscl_pd_num::NUMBER(38, 0),\n    \n    $1:fscl_wk_in_pd_num::NUMBER(38, 0),\n    \n    $1:cases::NUMBER(38, 0),\n    \n    $1:eaches::NUMBER(38, 0),\n    \n    $1:raw_vol::NUMBER(38, 0),\n    \n    $1:eght_oz_vol::NUMBER(38, 0),\n    \n    $1:net_rev::NUMBER(38, 0),\n    \n    CURRENT_TIMESTAMP()\nFROM\n\n    @DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.__STAGE_TOKEN__/sDNA/mvh/btg/dx_mvhs/btg_pbc_sales_cust_wk_prod_v_extend\n\n)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.btg_pbc_sales_cust_wk_prod_v_extend_full"}, "model.sdna_project.dx_fl_sales_cust_wk_prod_extend_full": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AZURE_ENT_CONTAINER',\n    file_format_name='PARQUET',\n    copy_transform=True\n  )\n}}\n(\nSELECT\n    {% for col in get_cols_field_column_mapping('dx_fl_sales_cust_wk_prod_extend') %}\n    $1:{{ col[0] }}::{{ col[1] }},\n    {% endfor %}\n    CURRENT_TIMESTAMP()\nFROM\n{{ external_stage('/sDNA/mvh/dxh/dx_mvhs/dx_fl_sales_cust_wk_prod_extend') }}\n)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.get_cols_field_column_mapping", "macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "stage_name": "AZURE_ENT_CONTAINER", "file_format_name": "PARQUET", "copy_transform": true, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "loads", "btg_extend", "dx_fl_sales_cust_wk_prod_extend_full"], "unique_id": "model.sdna_project.dx_fl_sales_cust_wk_prod_extend_full", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/loads/btg_extend/dx_fl_sales_cust_wk_prod_extend_full.sql", "original_file_path": "models/walmart_data_infra/loads/btg_extend/dx_fl_sales_cust_wk_prod_extend_full.sql", "name": "dx_fl_sales_cust_wk_prod_extend_full", "alias": "dx_fl_sales_cust_wk_prod_extend_full", "checksum": {"name": "sha256", "checksum": "0fcbf898595bd7e19a5245a0c53320aeb8fd6fd2bbf782c9e7158e7404fda524"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/loads/btg_extend/dx_fl_sales_cust_wk_prod_extend_full.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "from_external_stage", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AZURE_ENT_CONTAINER", "file_format_name": "PARQUET", "copy_transform": true}, "created_at": 1629326232, "compiled_sql": "\n(\nSELECT\n    \n    $1:dx_id::VARCHAR,\n    \n    $1:store_name::VARCHAR,\n    \n    $1:address::VARCHAR,\n    \n    $1:city::VARCHAR,\n    \n    $1:state::VARCHAR,\n    \n    $1:zip5::VARCHAR,\n    \n    $1:zip9::VARCHAR,\n    \n    $1:county::VARCHAR,\n    \n    $1:latitude::NUMBER(38, 6),\n    \n    $1:longitude::NUMBER(38, 6),\n    \n    $1:division_id::VARCHAR,\n    \n    $1:division::VARCHAR,\n    \n    $1:region_id::VARCHAR,\n    \n    $1:region::VARCHAR,\n    \n    $1:zone_id::VARCHAR,\n    \n    $1:zone::VARCHAR,\n    \n    $1:district_id::VARCHAR,\n    \n    $1:district::VARCHAR,\n    \n    $1:route_number::NUMBER(38, 0),\n    \n    $1:fl_trade_chanl_code::VARCHAR,\n    \n    $1:fl_trade_chanl_descp::VARCHAR,\n    \n    $1:format::VARCHAR,\n    \n    $1:retailer::VARCHAR,\n    \n    $1:prod_upc::NUMBER(38, 0),\n    \n    $1:prod_slbl::NUMBER(38, 0),\n    \n    $1:upc_mfg_id::NUMBER(38, 0),\n    \n    $1:categ_code::VARCHAR,\n    \n    $1:trrdmrk_cde::VARCHAR,\n    \n    $1:trdmark_desc::VARCHAR,\n    \n    $1:brand_cde::VARCHAR,\n    \n    $1:brnd_desc::VARCHAR,\n    \n    $1:flvr_id::VARCHAR,\n    \n    $1:flvr_desc::VARCHAR,\n    \n    $1:pkg_nme::VARCHAR,\n    \n    $1:upc_cde::VARCHAR,\n    \n    $1:upc_10::VARCHAR,\n    \n    $1:bdc_desc::VARCHAR,\n    \n    $1:gtin::VARCHAR,\n    \n    $1:bus_unit_code_new::VARCHAR,\n    \n    $1:bus_unit_descp_new::VARCHAR,\n    \n    $1:major_cat::VARCHAR,\n    \n    $1:major_cat_size::VARCHAR,\n    \n    $1:fscl_wk_end_dte::DATE,\n    \n    $1:fscl_yr_num::NUMBER(38, 0),\n    \n    $1:fscl_pd_num::NUMBER(38, 0),\n    \n    $1:fscl_wk_in_pd_num::NUMBER(38, 0),\n    \n    $1:net_tkt_sale_amt::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_qty::NUMBER(28, 6),\n    \n    $1:net_tkt_sale_wt::NUMBER(28, 6),\n    \n    CURRENT_TIMESTAMP()\nFROM\n\n    @DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.__STAGE_TOKEN__/sDNA/mvh/dxh/dx_mvhs/dx_fl_sales_cust_wk_prod_extend\n\n)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_fl_sales_cust_wk_prod_extend_full"}, "model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_full": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AZURE_ENT_CONTAINER',\n    file_format_name='PARQUET',\n    copy_transform=True\n  )\n}}\n(\nSELECT\n    {% for col in get_cols_field_column_mapping('dx_pbc_sales_cust_wk_prod_extend') %}\n    $1:{{ col[0] }}::{{ col[1] }},\n    {% endfor %}\n    CURRENT_TIMESTAMP()\nFROM\n{{ external_stage('/sDNA/mvh/dxh/dx_mvhs/dx_pbc_sales_cust_wk_prod_extend') }}\n)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.get_cols_field_column_mapping", "macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "stage_name": "AZURE_ENT_CONTAINER", "file_format_name": "PARQUET", "copy_transform": true, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "loads", "btg_extend", "dx_pbc_sales_cust_wk_prod_extend_full"], "unique_id": "model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_full", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/loads/btg_extend/dx_pbc_sales_cust_wk_prod_extend_full.sql", "original_file_path": "models/walmart_data_infra/loads/btg_extend/dx_pbc_sales_cust_wk_prod_extend_full.sql", "name": "dx_pbc_sales_cust_wk_prod_extend_full", "alias": "dx_pbc_sales_cust_wk_prod_extend_full", "checksum": {"name": "sha256", "checksum": "5d8de44720655db7e069a5d4b19f9b4bf95bc5bf61b4e0677bbe46524ef40b24"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/loads/btg_extend/dx_pbc_sales_cust_wk_prod_extend_full.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "from_external_stage", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AZURE_ENT_CONTAINER", "file_format_name": "PARQUET", "copy_transform": true}, "created_at": 1629326232, "compiled_sql": "\n(\nSELECT\n    \n    $1:dx_id::VARCHAR,\n    \n    $1:upc_cde::VARCHAR,\n    \n    $1:upc_descp::VARCHAR,\n    \n    $1:inven_id::NUMBER(38, 0),\n    \n    $1:store_name::VARCHAR,\n    \n    $1:address::VARCHAR,\n    \n    $1:city::VARCHAR,\n    \n    $1:state::VARCHAR,\n    \n    $1:zip5::VARCHAR,\n    \n    $1:zip9::VARCHAR,\n    \n    $1:county::VARCHAR,\n    \n    $1:latitude::NUMBER(34, 4),\n    \n    $1:longitude::NUMBER(34, 4),\n    \n    $1:division_id::NUMBER(38, 0),\n    \n    $1:division::VARCHAR,\n    \n    $1:region_id::NUMBER(38, 0),\n    \n    $1:region::VARCHAR,\n    \n    $1:market_id::NUMBER(38, 0),\n    \n    $1:market::VARCHAR,\n    \n    $1:location::VARCHAR,\n    \n    $1:terr_id::NUMBER(38, 0),\n    \n    $1:terr_nme::VARCHAR,\n    \n    $1:route_id::NUMBER(38, 0),\n    \n    $1:channel_cde::VARCHAR,\n    \n    $1:channel_desc::VARCHAR,\n    \n    $1:format_cde::VARCHAR,\n    \n    $1:format_desc::VARCHAR,\n    \n    $1:banner::VARCHAR,\n    \n    $1:retailer::VARCHAR,\n    \n    $1:ctgy_type_cde::VARCHAR,\n    \n    $1:ctgy_type_desc::VARCHAR,\n    \n    $1:trrdmrk_cde::VARCHAR,\n    \n    $1:trrdmrk_desc::VARCHAR,\n    \n    $1:brand_cde::NUMBER(38, 0),\n    \n    $1:brnd_nme::VARCHAR,\n    \n    $1:flvr_cde::VARCHAR,\n    \n    $1:flvr_desc::VARCHAR,\n    \n    $1:pkg_nme::VARCHAR,\n    \n    $1:pkg_cde::NUMBER(38, 0),\n    \n    $1:ss_mp_ms::VARCHAR,\n    \n    $1:ss_th::VARCHAR,\n    \n    $1:fscl_wk_end_dte::DATE,\n    \n    $1:fscl_yr_num::NUMBER(38, 0),\n    \n    $1:fscl_pd_num::NUMBER(38, 0),\n    \n    $1:fscl_wk_in_pd_num::NUMBER(38, 0),\n    \n    $1:cases::NUMBER(38, 0),\n    \n    $1:raw_vol::NUMBER(38, 0),\n    \n    $1:eght_oz_vol::NUMBER(38, 0),\n    \n    $1:net_rev::NUMBER(38, 0),\n    \n    CURRENT_TIMESTAMP()\nFROM\n\n    @DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.__STAGE_TOKEN__/sDNA/mvh/dxh/dx_mvhs/dx_pbc_sales_cust_wk_prod_extend\n\n)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_pbc_sales_cust_wk_prod_extend_full"}, "model.sdna_project.dx_retailer_trade_area_full": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AZURE_ENT_CONTAINER',\n    file_format_name='ORC',\n    copy_transform=True\n  )\n}}\n(\nSELECT\n    {% for col in get_cols_field_column_mapping('dx_retailer_trade_area') %}\n    $1:{{ col[0] }}::{{ col[1] }},\n    {% endfor %}\n    CURRENT_TIMESTAMP()\nFROM\n{{ external_stage('/sDNA/mvh/dxh/dx_mvhs/dx_retailer_trade_area') }}\n)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.get_cols_field_column_mapping", "macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "stage_name": "AZURE_ENT_CONTAINER", "file_format_name": "ORC", "copy_transform": true, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "loads", "btg_extend", "dx_retailer_trade_area_full"], "unique_id": "model.sdna_project.dx_retailer_trade_area_full", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/loads/btg_extend/dx_retailer_trade_area_full.sql", "original_file_path": "models/walmart_data_infra/loads/btg_extend/dx_retailer_trade_area_full.sql", "name": "dx_retailer_trade_area_full", "alias": "dx_retailer_trade_area_full", "checksum": {"name": "sha256", "checksum": "1f64ef97e29eab5b1ed45da158ede2b5da54ef4818e918002385e5ce77612260"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/loads/btg_extend/dx_retailer_trade_area_full.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "from_external_stage", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AZURE_ENT_CONTAINER", "file_format_name": "ORC", "copy_transform": true}, "created_at": 1629326232, "compiled_sql": "\n(\nSELECT\n    \n    $1:_col0::VARCHAR,\n    \n    $1:_col1::VARCHAR,\n    \n    CURRENT_TIMESTAMP()\nFROM\n\n    @DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.__STAGE_TOKEN__/sDNA/mvh/dxh/dx_mvhs/dx_retailer_trade_area\n\n)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_retailer_trade_area_full"}, "model.sdna_project.mvh_demog_data_full": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AZURE_ENT_CONTAINER',\n    file_format_name='PARQUET',\n    copy_transform=True\n  )\n}}\n(\nSELECT\n    {% for col in get_cols_field_column_mapping('mvh_demog_data') %}\n    $1:{{ col[0] }}::{{ col[1] }},\n    {% endfor %}\n    CURRENT_TIMESTAMP()\nFROM\n{{ external_stage('/sDNA/mvh/dxh/dx_mvhs/mvh_demog_data') }}\n)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.get_cols_field_column_mapping", "macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "stage_name": "AZURE_ENT_CONTAINER", "file_format_name": "PARQUET", "copy_transform": true, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "loads", "btg_extend", "mvh_demog_data_full"], "unique_id": "model.sdna_project.mvh_demog_data_full", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/loads/btg_extend/mvh_demog_data_full.sql", "original_file_path": "models/walmart_data_infra/loads/btg_extend/mvh_demog_data_full.sql", "name": "mvh_demog_data_full", "alias": "mvh_demog_data_full", "checksum": {"name": "sha256", "checksum": "bc0b7d63e81ad243341851c7e67478fc367c2457ca5c9bff3076c8869dc91588"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/loads/btg_extend/mvh_demog_data_full.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "from_external_stage", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AZURE_ENT_CONTAINER", "file_format_name": "PARQUET", "copy_transform": true}, "created_at": 1629326232, "compiled_sql": "\n(\nSELECT\n    \n    $1:dx_id::VARCHAR,\n    \n    $1:cv_living_unit_id::NUMBER(38, 0),\n    \n    $1:Asian_count::NUMBER(38, 0),\n    \n    $1:African_American_count::NUMBER(38, 0),\n    \n    $1:Caucasian_count::NUMBER(38, 0),\n    \n    $1:Hispanic_count::NUMBER(38, 0),\n    \n    $1:Unknown_count::NUMBER(38, 0),\n    \n    $1:Millennial_count::NUMBER(38, 0),\n    \n    $1:GenX_count::NUMBER(38, 0),\n    \n    $1:Young_Boomer_count::NUMBER(38, 0),\n    \n    $1:Older_Boomer_count::NUMBER(38, 0),\n    \n    $1:Retirees_count::NUMBER(38, 0),\n    \n    $1:Seniors_count::NUMBER(38, 0),\n    \n    $1:hh_income_1_count::NUMBER(38, 0),\n    \n    $1:hh_income_2_count::NUMBER(38, 0),\n    \n    $1:hh_income_3_count::NUMBER(38, 0),\n    \n    $1:hh_income_4_count::NUMBER(38, 0),\n    \n    $1:hh_income_5_count::NUMBER(38, 0),\n    \n    $1:hh_income_6_count::NUMBER(38, 0),\n    \n    $1:hh_income_7_count::NUMBER(38, 0),\n    \n    $1:hh_income_8_count::NUMBER(38, 0),\n    \n    $1:Persons_1_count::NUMBER(38, 0),\n    \n    $1:Persons_2_count::NUMBER(38, 0),\n    \n    $1:Persons_3_count::NUMBER(38, 0),\n    \n    $1:Persons_4_count::NUMBER(38, 0),\n    \n    $1:Persons_5_count::NUMBER(38, 0),\n    \n    $1:Persons_6_count::NUMBER(38, 0),\n    \n    $1:Persons_7_count::NUMBER(38, 0),\n    \n    $1:Persons_8plus_count::NUMBER(38, 0),\n    \n    CURRENT_TIMESTAMP()\nFROM\n\n    @DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.__STAGE_TOKEN__/sDNA/mvh/dxh/dx_mvhs/mvh_demog_data\n\n)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.mvh_demog_data_full"}, "model.sdna_project.mvh_retailer_prod_attr_data_full": {"raw_sql": "{{\n  config(\n    materialized='from_external_stage',\n    stage_name='AZURE_ENT_CONTAINER',\n    file_format_name='PARQUET',\n    copy_transform=True\n  )\n}}\n(\nSELECT\n    {% for col in get_cols_field_column_mapping('mvh_retailer_prod_attr_data') %}\n    $1:{{ col[0] }}::{{ col[1] }},\n    {% endfor %}\n    CURRENT_TIMESTAMP()\nFROM\n{{ external_stage('/sDNA/mvh/dxh/dx_mvhs/mvh_retailer_prod_attr_data') }}\n)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.sdna_project.get_cols_field_column_mapping", "macro.sdna_project.external_stage"], "nodes": []}, "config": {"enabled": true, "materialized": "from_external_stage", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "stage_name": "AZURE_ENT_CONTAINER", "file_format_name": "PARQUET", "copy_transform": true, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "loads", "btg_extend", "mvh_retailer_prod_attr_data_full"], "unique_id": "model.sdna_project.mvh_retailer_prod_attr_data_full", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/loads/btg_extend/mvh_retailer_prod_attr_data_full.sql", "original_file_path": "models/walmart_data_infra/loads/btg_extend/mvh_retailer_prod_attr_data_full.sql", "name": "mvh_retailer_prod_attr_data_full", "alias": "mvh_retailer_prod_attr_data_full", "checksum": {"name": "sha256", "checksum": "d99fae5c1bb9dd4a518f349d1ca7e0393758e99ff30b39a0c05e73db0db099c2"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/loads/btg_extend/mvh_retailer_prod_attr_data_full.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "from_external_stage", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}", "stage_name": "AZURE_ENT_CONTAINER", "file_format_name": "PARQUET", "copy_transform": true}, "created_at": 1629326232, "compiled_sql": "\n(\nSELECT\n    \n    $1:dx_id::VARCHAR,\n    \n    $1:cv_living_unit_id::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_7_eleven_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_7_eleven_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_7_eleven_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_7_eleven_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_ahold_delhaize_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_ahold_delhaize_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_ahold_delhaize_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_ahold_delhaize_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_albertsons_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_albertsons_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_albertsons_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_albertsons_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_aldi_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_aldi_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_aldi_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_aldi_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_amazon_com_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_amazon_com_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_amazon_com_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_amazon_com_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_bi_lo_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_bi_lo_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_bi_lo_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_bi_lo_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_bjs_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_bjs_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_bjs_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_bjs_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_circle_k_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_circle_k_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_circle_k_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_circle_k_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_costco_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_costco_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_costco_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_costco_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_cvs_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_cvs_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_cvs_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_cvs_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_dollar_general_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_dollar_general_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_dollar_general_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_dollar_general_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_family_dollar_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_family_dollar_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_family_dollar_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_family_dollar_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_heb_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_heb_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_heb_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_heb_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_speedway_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_speedway_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_speedway_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_speedway_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_hy_vee_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_hy_vee_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_hy_vee_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_hy_vee_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_kroger_banner_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_kroger_banner_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_kroger_banner_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_kroger_banner_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_kroger_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_kroger_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_kroger_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_kroger_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_club_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_club_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_club_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_club_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_dollar_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_dollar_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_dollar_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_dollar_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_drug_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_drug_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_drug_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_drug_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_c_and_g_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_c_and_g_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_c_and_g_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_c_and_g_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_grocery_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_grocery_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_grocery_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_grocery_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_mass_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_mass_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_mass_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_mass_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_publix_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_publix_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_publix_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_publix_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_sams_club_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_sams_club_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_sams_club_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_sams_club_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_target_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_target_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_target_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_target_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_trader_joes_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_trader_joes_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_trader_joes_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_trader_joes_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_wakefern_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_wakefern_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_wakefern_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_wakefern_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_walgreens_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_walgreens_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_walgreens_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_walgreens_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_walmart_com_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_walmart_com_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_walmart_com_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_walmart_com_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_wm_neighborhood_market_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_wm_neighborhood_market_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_wm_neighborhood_market_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_wm_neighborhood_market_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_walmart_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_walmart_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_walmart_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_walmart_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_whole_foods_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_whole_foods_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_whole_foods_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_whole_foods_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_ao_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_ao_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_ao_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_all_other_ao_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_not_assigned_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_not_assigned_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_not_assigned_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_not_assigned_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_target_com_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_target_com_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_target_com_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_target_com_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_kroger_com_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_kroger_com_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_kroger_com_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_kroger_com_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_kmart_com_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_kmart_com_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_kmart_com_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_kmart_com_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_walgreens_com_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_walgreens_com_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_walgreens_com_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_walgreens_com_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_samsclub_com_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_samsclub_com_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_samsclub_com_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_samsclub_com_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_costco_com_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_costco_com_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_costco_com_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:is_avbl_adj_costco_com_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:smart_water_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:smart_water_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:smart_water_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:smart_water_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:energy_csd_zero_calorie_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:energy_csd_zero_calorie_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:energy_csd_zero_calorie_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:energy_csd_zero_calorie_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:csd_total_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:csd_total_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:csd_total_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:csd_total_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:doritos_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:doritos_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:doritos_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:doritos_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:energy_drinks_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:energy_drinks_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:energy_drinks_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:energy_drinks_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:gatorade_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:gatorade_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:gatorade_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:gatorade_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:lays_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:lays_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:lays_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:lays_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:lipton_base_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:lipton_base_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:lipton_base_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:lipton_base_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:lipton_brisk_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:lipton_brisk_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:lipton_brisk_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:lipton_brisk_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:mt_dew_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:mt_dew_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:mt_dew_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:mt_dew_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:mtn_dew_kickstart_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:mtn_dew_kickstart_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:mtn_dew_kickstart_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:mtn_dew_kickstart_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:nuts_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:nuts_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:nuts_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:nuts_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:pepsi_diet_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:pepsi_diet_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:pepsi_diet_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:pepsi_diet_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:pepsi_regular_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:pepsi_regular_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:pepsi_regular_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:pepsi_regular_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:performance_bars_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:performance_bars_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:performance_bars_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:performance_bars_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:pepsico_protein_powder_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:pepsico_protein_powder_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:pepsico_protein_powder_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:pepsico_protein_powder_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:propel_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:propel_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:propel_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:propel_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:quaker_oatmeal_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:quaker_oatmeal_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:quaker_oatmeal_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:quaker_oatmeal_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:rte_cereal_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:rte_cereal_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:rte_cereal_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:rte_cereal_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:ruffles_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:ruffles_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:ruffles_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:ruffles_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:bottled_water_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:bottled_water_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:bottled_water_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:bottled_water_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:starbucks_tripleshot_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:starbucks_tripleshot_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:starbucks_tripleshot_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:starbucks_tripleshot_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:funyuns_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:funyuns_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:funyuns_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:funyuns_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:chilled_tea_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:chilled_tea_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:chilled_tea_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:chilled_tea_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:coffee_rtd_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:coffee_rtd_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:coffee_rtd_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:coffee_rtd_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:online_delivery_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:online_delivery_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:online_delivery_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:online_delivery_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:csd_singles_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:csd_singles_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:csd_singles_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:csd_singles_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:flv_csd_ex_dew_pepper_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:flv_csd_ex_dew_pepper_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:flv_csd_ex_dew_pepper_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:flv_csd_ex_dew_pepper_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:rtd_protein_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:rtd_protein_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:rtd_protein_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:rtd_protein_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:sodastream_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:sodastream_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:sodastream_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:sodastream_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:gamefuel_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:gamefuel_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:gamefuel_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:gamefuel_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:mainstream_kettle_chips_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:mainstream_kettle_chips_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:mainstream_kettle_chips_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:mainstream_kettle_chips_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:lipton_pure_leaf_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:lipton_pure_leaf_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:lipton_pure_leaf_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:lipton_pure_leaf_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:mainstream_juices_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:mainstream_juices_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:mainstream_juices_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:mainstream_juices_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:mt_dew_flv_seek_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:mt_dew_flv_seek_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:mt_dew_flv_seek_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:mt_dew_flv_seek_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:instant_quaker_oats_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:instant_quaker_oats_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:instant_quaker_oats_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:instant_quaker_oats_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:naked_protein_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:naked_protein_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:naked_protein_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:naked_protein_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:pepsi_zero_coke_zero_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:pepsi_zero_coke_zero_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:pepsi_zero_coke_zero_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:pepsi_zero_coke_zero_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:prem_juice_drinks_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:prem_juice_drinks_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:prem_juice_drinks_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:prem_juice_drinks_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:lightly_flavored_tortilla_chips_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:lightly_flavored_tortilla_chips_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:lightly_flavored_tortilla_chips_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:lightly_flavored_tortilla_chips_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:doubleshot_javam_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:doubleshot_javam_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:doubleshot_javam_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:doubleshot_javam_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:food_bev_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:food_bev_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:food_bev_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:food_bev_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:ncb_innovation_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:ncb_innovation_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:ncb_innovation_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:ncb_innovation_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:premium_csd_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:premium_csd_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:premium_csd_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:premium_csd_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:premium_tea_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:premium_tea_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:premium_tea_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:premium_tea_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:premium_water_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:premium_water_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:premium_water_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:premium_water_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:probiotic_juices_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:probiotic_juices_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:probiotic_juices_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:probiotic_juices_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:lays_poppables_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:lays_poppables_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:lays_poppables_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:lays_poppables_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:alternative_tortilla_chips_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:alternative_tortilla_chips_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:alternative_tortilla_chips_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:alternative_tortilla_chips_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:snack_bars_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:snack_bars_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:snack_bars_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:snack_bars_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:sparkling_water_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:sparkling_water_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:sparkling_water_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:sparkling_water_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:dips_as_meal_enhancers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:dips_as_meal_enhancers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:dips_as_meal_enhancers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:dips_as_meal_enhancers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:stacys_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:stacys_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:stacys_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:stacys_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:sunchips_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:sunchips_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:sunchips_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:sunchips_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:super_premium_juices_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:super_premium_juices_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:super_premium_juices_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:super_premium_juices_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:tostitos_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:tostitos_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:tostitos_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:tostitos_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:flavor_camp_bbq_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:flavor_camp_bbq_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:flavor_camp_bbq_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:flavor_camp_bbq_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:plant_based_rtd_protein_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:plant_based_rtd_protein_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:plant_based_rtd_protein_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:plant_based_rtd_protein_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:veggie_chips_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:veggie_chips_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:veggie_chips_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:veggie_chips_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:g_organic_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:g_organic_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:g_organic_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:g_organic_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:mountain_dew_baja_blast_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:mountain_dew_baja_blast_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:mountain_dew_baja_blast_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:mountain_dew_baja_blast_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:cold_brew_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:cold_brew_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:cold_brew_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:cold_brew_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:bubly_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:bubly_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:bubly_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:bubly_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:ultra_premium_juice_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:ultra_premium_juice_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:ultra_premium_juice_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:ultra_premium_juice_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:lightly_salted_chips_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:lightly_salted_chips_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:lightly_salted_chips_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:lightly_salted_chips_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:flavor_camp_cheese_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:flavor_camp_cheese_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:flavor_camp_cheese_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:flavor_camp_cheese_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:sabra_hummus_tubs_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:sabra_hummus_tubs_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:sabra_hummus_tubs_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:sabra_hummus_tubs_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:oj_category_switchers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:oj_category_switchers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:oj_category_switchers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:oj_category_switchers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:standard_quaker_oats_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:standard_quaker_oats_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:standard_quaker_oats_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:standard_quaker_oats_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:csd_multiserve_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:csd_multiserve_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:csd_multiserve_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:csd_multiserve_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:dew_ice_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:dew_ice_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:dew_ice_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:dew_ice_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:flavor_camp_dairy_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:flavor_camp_dairy_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:flavor_camp_dairy_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:flavor_camp_dairy_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:online_curbside_pickup_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:online_curbside_pickup_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:online_curbside_pickup_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:online_curbside_pickup_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:flavor_camp_herb_spice_veggie_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:flavor_camp_herb_spice_veggie_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:flavor_camp_herb_spice_veggie_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:flavor_camp_herb_spice_veggie_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:flv_salty_snacks_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:flv_salty_snacks_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:flv_salty_snacks_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:flv_salty_snacks_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:g2_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:g2_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:g2_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:g2_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:flavor_camp_salted_plain_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:flavor_camp_salted_plain_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:flavor_camp_salted_plain_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:flavor_camp_salted_plain_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:keto_cookies_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:keto_cookies_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:keto_cookies_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:keto_cookies_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:low_fat_salty_snacks_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:low_fat_salty_snacks_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:low_fat_salty_snacks_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:low_fat_salty_snacks_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:aha_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:aha_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:aha_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:aha_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:plant_based_protein_powder_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:plant_based_protein_powder_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:plant_based_protein_powder_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:plant_based_protein_powder_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:pretzel_category_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:pretzel_category_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:pretzel_category_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:pretzel_category_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:flavor_camp_spicy_burn_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:flavor_camp_spicy_burn_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:flavor_camp_spicy_burn_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:flavor_camp_spicy_burn_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:dots_pretzels_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:dots_pretzels_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:dots_pretzels_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:dots_pretzels_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:santitas_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:santitas_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:santitas_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:santitas_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:flavor_camp_tangy_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:flavor_camp_tangy_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:flavor_camp_tangy_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:flavor_camp_tangy_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:tropicana_probiotics_purchasers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:tropicana_probiotics_purchasers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:tropicana_probiotics_purchasers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:tropicana_probiotics_purchasers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:tropicana_pure_premium_purchasers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:tropicana_pure_premium_purchasers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:tropicana_pure_premium_purchasers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:tropicana_pure_premium_purchasers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:rfg_yogurt_drinks_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:rfg_yogurt_drinks_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:rfg_yogurt_drinks_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:rfg_yogurt_drinks_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:flavor_camp_aggregate_all_intense_bold_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:flavor_camp_aggregate_all_intense_bold_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:flavor_camp_aggregate_all_intense_bold_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:flavor_camp_aggregate_all_intense_bold_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:total_regular_cola_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:total_regular_cola_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:total_regular_cola_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:total_regular_cola_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:flavor_camp_meat_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:flavor_camp_meat_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:flavor_camp_meat_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:flavor_camp_meat_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:fritos_original_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:fritos_original_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:fritos_original_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:fritos_original_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:flavored_pretzels_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:flavored_pretzels_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:flavored_pretzels_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:flavored_pretzels_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:nutrition_engaged_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:nutrition_engaged_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:nutrition_engaged_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:nutrition_engaged_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:mainstream_engaged_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:mainstream_engaged_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:mainstream_engaged_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:mainstream_engaged_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:oj_category_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:oj_category_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:oj_category_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:oj_category_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:nutrition_bars_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:nutrition_bars_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:nutrition_bars_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:nutrition_bars_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:oatmeal_category_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:oatmeal_category_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:oatmeal_category_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:oatmeal_category_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:alt_dairy_category_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:alt_dairy_category_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:alt_dairy_category_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:alt_dairy_category_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:kombucha_functional_juices_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:kombucha_functional_juices_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:kombucha_functional_juices_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:kombucha_functional_juices_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:single_serve_mainstream_juice_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:single_serve_mainstream_juice_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:single_serve_mainstream_juice_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:single_serve_mainstream_juice_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:quaker_grits_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:quaker_grits_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:quaker_grits_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:quaker_grits_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:shelf_stable_dips_category_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:shelf_stable_dips_category_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:shelf_stable_dips_category_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:shelf_stable_dips_category_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:fruit_snacks_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:fruit_snacks_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:fruit_snacks_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:fruit_snacks_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:fritos_flavor_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:fritos_flavor_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:fritos_flavor_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:fritos_flavor_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:kevita_purchasers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:kevita_purchasers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:kevita_purchasers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:kevita_purchasers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:heart_claim_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:heart_claim_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:heart_claim_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:heart_claim_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:starbucks_frappuccino_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:starbucks_frappuccino_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:starbucks_frappuccino_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:starbucks_frappuccino_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:single_serve_salty_snacks_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:single_serve_salty_snacks_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:single_serve_salty_snacks_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:single_serve_salty_snacks_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:cholesterol_claim_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:cholesterol_claim_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:cholesterol_claim_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:cholesterol_claim_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:g_zero_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:g_zero_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:g_zero_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:g_zero_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:diet_csds_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:diet_csds_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:diet_csds_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:diet_csds_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:candy_category_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:candy_category_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:candy_category_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:candy_category_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:frozen_fruit_category_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:frozen_fruit_category_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:frozen_fruit_category_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:frozen_fruit_category_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:salty_snacks_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:salty_snacks_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:salty_snacks_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:salty_snacks_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:premium_greek_yogurt_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:premium_greek_yogurt_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:premium_greek_yogurt_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:premium_greek_yogurt_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:rice_pasta_ethnic_spclty_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:rice_pasta_ethnic_spclty_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:rice_pasta_ethnic_spclty_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:rice_pasta_ethnic_spclty_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:pancake_mix_syrup_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:pancake_mix_syrup_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:pancake_mix_syrup_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:pancake_mix_syrup_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:lite_snacks_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:lite_snacks_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:lite_snacks_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:lite_snacks_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:herbal_tea_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:herbal_tea_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:herbal_tea_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:herbal_tea_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:tazo_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:tazo_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:tazo_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:tazo_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:mini_cans_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:mini_cans_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:mini_cans_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:mini_cans_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:unflavored_pretzels_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:unflavored_pretzels_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:unflavored_pretzels_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:unflavored_pretzels_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:bodyarmor_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:bodyarmor_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:bodyarmor_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:bodyarmor_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:organic_food_bev_buyers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:organic_food_bev_buyers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:organic_food_bev_buyers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:organic_food_bev_buyers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:fritos_scoops_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:fritos_scoops_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:fritos_scoops_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:fritos_scoops_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:grain_claim_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:grain_claim_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:grain_claim_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:grain_claim_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:diet_coke_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:diet_coke_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:diet_coke_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:diet_coke_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:online_in_store_pickup_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:online_in_store_pickup_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:online_in_store_pickup_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:online_in_store_pickup_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:bare_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:bare_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:bare_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:bare_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:off_the_eaten_path_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:off_the_eaten_path_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:off_the_eaten_path_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:off_the_eaten_path_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:rte_cereal_all_family_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:rte_cereal_all_family_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:rte_cereal_all_family_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:rte_cereal_all_family_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:rte_cereal_kids_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:rte_cereal_kids_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:rte_cereal_kids_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:rte_cereal_kids_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:instant_quaker_oats_light_lapsed_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:instant_quaker_oats_light_lapsed_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:instant_quaker_oats_light_lapsed_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:instant_quaker_oats_light_lapsed_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:celsius_energy_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:celsius_energy_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:celsius_energy_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:celsius_energy_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:doritos_h_and_s_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:doritos_h_and_s_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:doritos_h_and_s_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:doritos_h_and_s_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:premium_kettle_chips_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:premium_kettle_chips_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:premium_kettle_chips_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:premium_kettle_chips_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:chewy_kids_snacking_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:chewy_kids_snacking_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:chewy_kids_snacking_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:chewy_kids_snacking_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:starbucks_nitro_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:starbucks_nitro_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:starbucks_nitro_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:starbucks_nitro_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:premium_lrb_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:premium_lrb_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:premium_lrb_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:premium_lrb_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:rte_popcorn_full_flavor_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:rte_popcorn_full_flavor_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:rte_popcorn_full_flavor_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:rte_popcorn_full_flavor_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:rte_popcorn_light_flavor_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:rte_popcorn_light_flavor_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:rte_popcorn_light_flavor_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:rte_popcorn_light_flavor_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:breakfast_cereal_snack_bars_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:breakfast_cereal_snack_bars_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:breakfast_cereal_snack_bars_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:breakfast_cereal_snack_bars_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:sports_drinks_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:sports_drinks_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:sports_drinks_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:sports_drinks_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:takis_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:takis_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:takis_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:takis_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:lacroix_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:lacroix_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:lacroix_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:lacroix_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:manzanita_sol_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:manzanita_sol_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:manzanita_sol_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:manzanita_sol_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:unflavored_tortilla_chips_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:unflavored_tortilla_chips_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:unflavored_tortilla_chips_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:unflavored_tortilla_chips_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:crush_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:crush_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:crush_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:crush_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:chewy_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:chewy_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:chewy_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:chewy_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:rockstar_energy_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:rockstar_energy_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:rockstar_energy_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:rockstar_energy_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:light_holiday_salty_snack_buyers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:light_holiday_salty_snack_buyers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:light_holiday_salty_snack_buyers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:light_holiday_salty_snack_buyers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:medium_holiday_salty_snack_buyers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:medium_holiday_salty_snack_buyers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:medium_holiday_salty_snack_buyers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:medium_holiday_salty_snack_buyers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:xxvl_single_serve_snacks_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:xxvl_single_serve_snacks_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:xxvl_single_serve_snacks_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:xxvl_single_serve_snacks_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:svlr_single_serve_snacks_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:svlr_single_serve_snacks_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:svlr_single_serve_snacks_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:svlr_single_serve_snacks_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:lss_single_serve_snacks_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:lss_single_serve_snacks_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:lss_single_serve_snacks_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:lss_single_serve_snacks_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:bolt_24_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:bolt_24_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:bolt_24_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:bolt_24_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:lemonade_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:lemonade_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:lemonade_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:lemonade_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:gamesa_cookies_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:gamesa_cookies_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:gamesa_cookies_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:gamesa_cookies_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:kids_organic_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:kids_organic_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:kids_organic_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:kids_organic_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:rice_crisps_cakes_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:rice_crisps_cakes_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:rice_crisps_cakes_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:rice_crisps_cakes_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:health_warrior_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:health_warrior_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:health_warrior_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:health_warrior_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:simple_nutrition_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:simple_nutrition_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:simple_nutrition_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:simple_nutrition_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:naked_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:naked_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:naked_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:naked_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:yogurt_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:yogurt_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:yogurt_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:yogurt_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:online_edible_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:online_edible_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:online_edible_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:online_edible_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:better_for_you_bagged_snacks_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:better_for_you_bagged_snacks_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:better_for_you_bagged_snacks_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:better_for_you_bagged_snacks_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:vanilla_flavored_rtd_coffee_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:vanilla_flavored_rtd_coffee_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:vanilla_flavored_rtd_coffee_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:vanilla_flavored_rtd_coffee_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:frozen_dips_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:frozen_dips_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:frozen_dips_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:frozen_dips_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:caramel_flavored_rtd_coffee_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:caramel_flavored_rtd_coffee_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:caramel_flavored_rtd_coffee_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:caramel_flavored_rtd_coffee_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:coffee_flavored_rtd_coffee_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:coffee_flavored_rtd_coffee_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:coffee_flavored_rtd_coffee_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:coffee_flavored_rtd_coffee_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:lays_stax_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:lays_stax_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:lays_stax_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:lays_stax_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:popcorners_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:popcorners_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:popcorners_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:popcorners_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:shelf_stable_dairy_dips_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:shelf_stable_dairy_dips_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:shelf_stable_dairy_dips_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:shelf_stable_dairy_dips_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:probiotic_attribute_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:probiotic_attribute_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:probiotic_attribute_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:probiotic_attribute_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:essentia_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:essentia_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:essentia_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:essentia_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:core_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:core_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:core_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:core_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:dasani_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:dasani_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:dasani_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:dasani_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:shelf_stable_salsa_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:shelf_stable_salsa_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:shelf_stable_salsa_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:shelf_stable_salsa_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:shelf_stable_cheese_dips_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:shelf_stable_cheese_dips_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:shelf_stable_cheese_dips_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:shelf_stable_cheese_dips_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:shelf_stable_bean_dips_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:shelf_stable_bean_dips_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:shelf_stable_bean_dips_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:shelf_stable_bean_dips_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:cheetos_cheese_core_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:cheetos_cheese_core_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:cheetos_cheese_core_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:cheetos_cheese_core_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:frito_lay_multipack_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:frito_lay_multipack_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:frito_lay_multipack_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:frito_lay_multipack_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:cheetos_flamin_hot_core_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:cheetos_flamin_hot_core_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:cheetos_flamin_hot_core_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:cheetos_flamin_hot_core_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:muscle_milk_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:muscle_milk_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:muscle_milk_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:muscle_milk_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:kst_regular_coke_transitioner_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:kst_regular_coke_transitioner_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:kst_regular_coke_transitioner_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:kst_regular_coke_transitioner_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:kst_frequent_diet_pepsi_transitioner_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:kst_frequent_diet_pepsi_transitioner_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:kst_frequent_diet_pepsi_transitioner_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:kst_frequent_diet_pepsi_transitioner_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:kst_hispanic_pepsi_drinker_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:kst_hispanic_pepsi_drinker_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:kst_hispanic_pepsi_drinker_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:kst_hispanic_pepsi_drinker_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:kst_light_cola_drinker_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:kst_light_cola_drinker_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:kst_light_cola_drinker_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:kst_light_cola_drinker_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:kst_frequent_blue_pepsi_drinker_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:kst_frequent_blue_pepsi_drinker_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:kst_frequent_blue_pepsi_drinker_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:kst_frequent_blue_pepsi_drinker_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:kst_non_cola_drinkers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:kst_non_cola_drinkers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:kst_non_cola_drinkers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:kst_non_cola_drinkers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:macaroni_and_cheese_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:macaroni_and_cheese_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:macaroni_and_cheese_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:macaroni_and_cheese_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:heat_and_eat_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:heat_and_eat_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:heat_and_eat_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:heat_and_eat_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:instant_rice_pasta_grains_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:instant_rice_pasta_grains_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:instant_rice_pasta_grains_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:instant_rice_pasta_grains_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:better_for_you_crackers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:better_for_you_crackers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:better_for_you_crackers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:better_for_you_crackers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:zero_calorie_csd_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:zero_calorie_csd_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:zero_calorie_csd_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:zero_calorie_csd_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:wavy_lays_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:wavy_lays_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:wavy_lays_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:wavy_lays_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:multiserve_starbucks_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:multiserve_starbucks_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:multiserve_starbucks_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:multiserve_starbucks_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:tea_bags_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:tea_bags_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:tea_bags_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:tea_bags_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:rfg_dips_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:rfg_dips_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:rfg_dips_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:rfg_dips_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:sleeping_remedies_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:sleeping_remedies_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:sleeping_remedies_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:sleeping_remedies_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:adaptogens_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:adaptogens_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:adaptogens_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:adaptogens_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:easy_wellness_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:easy_wellness_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:easy_wellness_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:easy_wellness_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:bang_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:bang_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:bang_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:bang_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:kevita_adjacencies_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:kevita_adjacencies_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:kevita_adjacencies_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:kevita_adjacencies_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:caffeine_attribute_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:caffeine_attribute_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:caffeine_attribute_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:caffeine_attribute_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:vitamin_c_attribute_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:vitamin_c_attribute_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:vitamin_c_attribute_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:vitamin_c_attribute_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:antioxidant_attribute_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:antioxidant_attribute_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:antioxidant_attribute_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:antioxidant_attribute_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:poland_spring_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:poland_spring_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:poland_spring_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:poland_spring_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:polar_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:polar_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:polar_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:polar_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:diet_coke_decliners_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:diet_coke_decliners_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:diet_coke_decliners_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:diet_coke_decliners_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:sprite_and_fanta_decliners_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:sprite_and_fanta_decliners_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:sprite_and_fanta_decliners_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:sprite_and_fanta_decliners_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:rap_snacks_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:rap_snacks_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:rap_snacks_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:rap_snacks_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:cheetos_crunchy_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:cheetos_crunchy_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:cheetos_crunchy_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:cheetos_crunchy_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:cheetos_puffs_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:cheetos_puffs_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:cheetos_puffs_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:cheetos_puffs_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:lays_classic_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:lays_classic_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:lays_classic_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:lays_classic_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:premium_cocktail_mixers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:premium_cocktail_mixers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:premium_cocktail_mixers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:premium_cocktail_mixers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:baken_ets_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:baken_ets_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:baken_ets_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:baken_ets_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:mainstream_mixers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:mainstream_mixers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:mainstream_mixers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:mainstream_mixers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:quaker_hots_light_lapsed_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:quaker_hots_light_lapsed_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:quaker_hots_light_lapsed_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:quaker_hots_light_lapsed_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:zone_in_shopper_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:zone_in_shopper_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:zone_in_shopper_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:zone_in_shopper_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:root_beer_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:root_beer_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:root_beer_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:root_beer_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:coke_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:coke_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:coke_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:coke_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:premium_cheese_snacks_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:premium_cheese_snacks_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:premium_cheese_snacks_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:premium_cheese_snacks_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:stacys_thins_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:stacys_thins_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:stacys_thins_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:stacys_thins_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:stacys_core_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:stacys_core_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:stacys_core_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:stacys_core_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:diet_mountain_dew_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:diet_mountain_dew_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:diet_mountain_dew_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:diet_mountain_dew_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:sparkling_ice_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:sparkling_ice_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:sparkling_ice_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:sparkling_ice_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:granola_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:granola_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:granola_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:granola_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:aj_pancake_mix_and_syrup_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:aj_pancake_mix_and_syrup_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:aj_pancake_mix_and_syrup_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:aj_pancake_mix_and_syrup_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:rte_cereal_adult_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:rte_cereal_adult_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:rte_cereal_adult_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:rte_cereal_adult_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:kids_ambient_juices_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:kids_ambient_juices_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:kids_ambient_juices_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:kids_ambient_juices_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:non_lemonade_juice_drinks_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:non_lemonade_juice_drinks_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:non_lemonade_juice_drinks_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:non_lemonade_juice_drinks_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:cheetos_mac_n_cheese_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:cheetos_mac_n_cheese_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:cheetos_mac_n_cheese_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:cheetos_mac_n_cheese_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:hispanic_cookies_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:hispanic_cookies_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:hispanic_cookies_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:hispanic_cookies_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:gamesa_crackers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:gamesa_crackers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:gamesa_crackers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:gamesa_crackers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:naked_juice_lapsed_buyers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:naked_juice_lapsed_buyers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:naked_juice_lapsed_buyers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:naked_juice_lapsed_buyers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:natural_attribute_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:natural_attribute_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:natural_attribute_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:natural_attribute_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:protein_attribute_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:protein_attribute_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:protein_attribute_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:protein_attribute_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:calcium_attribute_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:calcium_attribute_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:calcium_attribute_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:calcium_attribute_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:fiber_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:fiber_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:fiber_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:fiber_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:gluten_free_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:gluten_free_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:gluten_free_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:gluten_free_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:low_sodium_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:low_sodium_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:low_sodium_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:low_sodium_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:no_added_sugar_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:no_added_sugar_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:no_added_sugar_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:no_added_sugar_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:simply_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:simply_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:simply_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:simply_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:baked_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:baked_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:baked_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:baked_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:non_gmo_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:non_gmo_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:non_gmo_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:non_gmo_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:mt_dew_total_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:mt_dew_total_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:mt_dew_total_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:mt_dew_total_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:keto_dieters_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:keto_dieters_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:keto_dieters_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:keto_dieters_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:party_people_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:party_people_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:party_people_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:party_people_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:cold_and_flu_preppers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:cold_and_flu_preppers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:cold_and_flu_preppers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:cold_and_flu_preppers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:condiments_and_sauces_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:condiments_and_sauces_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:condiments_and_sauces_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:condiments_and_sauces_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:flavored_csds_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:flavored_csds_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:flavored_csds_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:flavored_csds_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:holiday_hosts_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:holiday_hosts_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:holiday_hosts_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:holiday_hosts_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:immunity_boosters_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:immunity_boosters_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:immunity_boosters_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:immunity_boosters_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:new_years_dieters_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:new_years_dieters_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:new_years_dieters_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:new_years_dieters_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:new_years_partiers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:new_years_partiers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:new_years_partiers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:new_years_partiers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:plant_based_buyers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:plant_based_buyers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:plant_based_buyers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:plant_based_buyers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:summer_grillers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:summer_grillers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:summer_grillers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:summer_grillers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:super_bowl_hosts_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:super_bowl_hosts_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:super_bowl_hosts_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:super_bowl_hosts_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:thanksgiving_hosts_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:thanksgiving_hosts_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:thanksgiving_hosts_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:thanksgiving_hosts_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:hard_coffee_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:hard_coffee_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:hard_coffee_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:hard_coffee_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:hard_flavored_bevs_xlemonade_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:hard_flavored_bevs_xlemonade_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:hard_flavored_bevs_xlemonade_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:hard_flavored_bevs_xlemonade_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:hard_kombucha_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:hard_kombucha_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:hard_kombucha_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:hard_kombucha_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:hard_lemonade_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:hard_lemonade_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:hard_lemonade_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:hard_lemonade_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:hard_seltzer_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:hard_seltzer_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:hard_seltzer_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:hard_seltzer_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:health_warrior_competitive_products_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:health_warrior_competitive_products_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:health_warrior_competitive_products_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:health_warrior_competitive_products_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:other_hmb_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:other_hmb_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:other_hmb_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:other_hmb_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:cookies_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:cookies_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:cookies_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:cookies_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:crackers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:crackers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:crackers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:crackers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:trop_premium_juice_drinks_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:trop_premium_juice_drinks_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:trop_premium_juice_drinks_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:trop_premium_juice_drinks_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:wine_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:wine_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:wine_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:wine_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:spirits_liquor_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:spirits_liquor_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:spirits_liquor_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:spirits_liquor_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:premade_cocktails_coolers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:premade_cocktails_coolers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:premade_cocktails_coolers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:premade_cocktails_coolers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:domestic_beer_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:domestic_beer_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:domestic_beer_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:domestic_beer_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:imported_beer_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:imported_beer_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:imported_beer_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:imported_beer_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:flavored_malt_beverages_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:flavored_malt_beverages_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:flavored_malt_beverages_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:flavored_malt_beverages_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:ambient_juice_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:ambient_juice_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:ambient_juice_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:ambient_juice_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:new_rtd_tea_buyers_buying_lipton_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:new_rtd_tea_buyers_buying_lipton_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:new_rtd_tea_buyers_buying_lipton_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:new_rtd_tea_buyers_buying_lipton_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:rtd_tea_buyers_switching_to_lipton_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:rtd_tea_buyers_switching_to_lipton_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:rtd_tea_buyers_switching_to_lipton_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:rtd_tea_buyers_switching_to_lipton_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:sabritas_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:sabritas_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:sabritas_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:sabritas_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:cbd_product_purchasers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:cbd_product_purchasers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:cbd_product_purchasers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:cbd_product_purchasers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:dr_pepper_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:dr_pepper_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:dr_pepper_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:dr_pepper_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:coffee_beans_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:coffee_beans_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:coffee_beans_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:coffee_beans_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:hispanic_aisle_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:hispanic_aisle_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:hispanic_aisle_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:hispanic_aisle_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:functional_juice_kombucha_switchers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:functional_juice_kombucha_switchers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:functional_juice_kombucha_switchers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:functional_juice_kombucha_switchers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:dole_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:dole_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:dole_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:dole_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:twister_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:twister_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:twister_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:twister_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:quaker_grits_new_buyers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:quaker_grits_new_buyers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:quaker_grits_new_buyers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:quaker_grits_new_buyers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:macro_category_multi_pack_buyers_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:macro_category_multi_pack_buyers_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:macro_category_multi_pack_buyers_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:macro_category_multi_pack_buyers_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:frutly_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:frutly_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:frutly_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:frutly_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:flavored_enhanced_water_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:flavored_enhanced_water_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:flavored_enhanced_water_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:flavored_enhanced_water_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:shelf_stable_juice_drinks_decile_lvls_h::NUMBER(38, 0),\n    \n    $1:shelf_stable_juice_drinks_decile_lvls_m::NUMBER(38, 0),\n    \n    $1:shelf_stable_juice_drinks_decile_lvls_l::NUMBER(38, 0),\n    \n    $1:shelf_stable_juice_drinks_decile_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_amusement_park_visit_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_amusement_park_visit_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_amusement_park_visit_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_amusement_park_visit_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_arts_crafts_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_arts_crafts_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_arts_crafts_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_arts_crafts_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_attend_edu_pgm_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_attend_edu_pgm_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_attend_edu_pgm_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_attend_edu_pgm_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_audiobook_listener_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_audiobook_listener_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_audiobook_listener_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_audiobook_listener_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_avid_runners_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_avid_runners_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_avid_runners_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_avid_runners_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_boating_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_boating_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_boating_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_boating_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_book_reader_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_book_reader_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_book_reader_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_book_reader_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_canoeing_kayaking_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_canoeing_kayaking_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_canoeing_kayaking_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_canoeing_kayaking_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_casino_gambling_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_casino_gambling_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_casino_gambling_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_casino_gambling_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_cat_owners_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_cat_owners_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_cat_owners_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_cat_owners_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_coffee_connoisseurs_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_coffee_connoisseurs_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_coffee_connoisseurs_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_coffee_connoisseurs_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_cultural_arts_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_cultural_arts_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_cultural_arts_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_cultural_arts_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_digi_mag_buyer_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_digi_mag_buyer_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_digi_mag_buyer_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_digi_mag_buyer_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_dog_owners_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_dog_owners_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_dog_owners_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_dog_owners_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_doit_yourself_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_doit_yourself_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_doit_yourself_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_doit_yourself_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_eats_fam_restaurant_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_eats_fam_restaurant_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_eats_fam_restaurant_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_eats_fam_restaurant_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_eats_ff_restaurant_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_eats_ff_restaurant_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_eats_ff_restaurant_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_eats_ff_restaurant_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_ebook_reader_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_ebook_reader_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_ebook_reader_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_ebook_reader_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_fishing_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_fishing_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_fishing_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_fishing_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_fitness_enthus_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_fitness_enthus_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_fitness_enthus_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_fitness_enthus_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_gourment_cooking_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_gourment_cooking_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_gourment_cooking_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_gourment_cooking_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_healthy_living_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_healthy_living_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_healthy_living_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_healthy_living_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_hme_imp_spenders_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_hme_imp_spenders_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_hme_imp_spenders_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_hme_imp_spenders_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_hunt_enthus_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_hunt_enthus_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_hunt_enthus_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_hunt_enthus_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_listen_80s_music_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_listen_80s_music_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_listen_80s_music_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_listen_80s_music_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_listen_alter_music_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_listen_alter_music_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_listen_alter_music_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_listen_alter_music_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_listen_christian_music_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_listen_christian_music_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_listen_christian_music_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_listen_christian_music_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_listen_classical_music_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_listen_classical_music_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_listen_classical_music_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_listen_classical_music_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_listen_country_music_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_listen_country_music_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_listen_country_music_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_listen_country_music_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_listen_hiphop_music_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_listen_hiphop_music_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_listen_hiphop_music_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_listen_hiphop_music_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_listen_jazz_music_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_listen_jazz_music_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_listen_jazz_music_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_listen_jazz_music_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_listen_music_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_listen_music_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_listen_music_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_listen_music_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_listen_oldies_music_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_listen_oldies_music_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_listen_oldies_music_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_listen_oldies_music_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_listen_pop_music_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_listen_pop_music_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_listen_pop_music_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_listen_pop_music_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_listen_rock_music_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_listen_rock_music_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_listen_rock_music_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_listen_rock_music_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_mlb_enthus_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_mlb_enthus_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_mlb_enthus_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_mlb_enthus_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_music_download_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_music_download_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_music_download_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_music_download_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_music_stream_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_music_stream_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_music_stream_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_music_stream_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_nascar_enthus_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_nascar_enthus_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_nascar_enthus_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_nascar_enthus_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_nba_enthus_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_nba_enthus_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_nba_enthus_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_nba_enthus_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_nfl_enthus_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_nfl_enthus_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_nfl_enthus_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_nfl_enthus_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_nhl_enthus_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_nhl_enthus_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_nhl_enthus_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_nhl_enthus_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_on_diet_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_on_diet_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_on_diet_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_on_diet_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_outdoor_enthus_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_outdoor_enthus_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_outdoor_enthus_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_outdoor_enthus_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_pet_enthus_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_pet_enthus_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_pet_enthus_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_pet_enthus_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_pga_tour_enthus_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_pga_tour_enthus_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_pga_tour_enthus_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_pga_tour_enthus_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_photography_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_photography_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_photography_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_photography_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_play_golf_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_play_golf_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_play_golf_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_play_golf_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_plays_hockey_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_plays_hockey_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_plays_hockey_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_plays_hockey_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_plays_soccer_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_plays_soccer_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_plays_soccer_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_plays_soccer_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_plays_tennis_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_plays_tennis_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_plays_tennis_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_plays_tennis_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_scrapbooking_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_scrapbooking_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_scrapbooking_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_scrapbooking_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_snow_sport_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_snow_sport_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_snow_sport_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_snow_sport_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_sport_enthusiast_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_sport_enthusiast_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_sport_enthusiast_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_sport_enthusiast_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_sweepstakes_lottery_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_sweepstakes_lottery_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_sweepstakes_lottery_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_sweepstakes_lottery_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_video_gamer_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_video_gamer_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_video_gamer_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_video_gamer_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_weight_conscious_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_weight_conscious_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_weight_conscious_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_weight_conscious_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_wine_lover_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_wine_lover_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_wine_lover_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_wine_lover_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_act_zoo_visit_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_act_zoo_visit_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_act_zoo_visit_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_act_zoo_visit_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_buyer_coupon_users_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_buyer_coupon_users_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_buyer_coupon_users_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_buyer_coupon_users_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_buyer_highend_spirit_drinker_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_buyer_highend_spirit_drinker_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_buyer_highend_spirit_drinker_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_buyer_highend_spirit_drinker_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_buyer_loyalty_card_usr_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_buyer_loyalty_card_usr_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_buyer_loyalty_card_usr_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_buyer_loyalty_card_usr_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_buyer_lux_hme_goods_shopp_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_buyer_lux_hme_goods_shopp_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_buyer_lux_hme_goods_shopp_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_buyer_lux_hme_goods_shopp_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_buyer_lux_store_shopp_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_buyer_lux_store_shopp_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_buyer_lux_store_shopp_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_buyer_lux_store_shopp_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_buyer_nonpres_makeup_usr_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_buyer_nonpres_makeup_usr_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_buyer_nonpres_makeup_usr_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_buyer_nonpres_makeup_usr_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_buyer_pres_makeup_usr_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_buyer_pres_makeup_usr_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_buyer_pres_makeup_usr_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_buyer_pres_makeup_usr_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_buyer_presence_auto_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_buyer_presence_auto_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_buyer_presence_auto_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_buyer_presence_auto_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_buyer_supercenter_shopp_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_buyer_supercenter_shopp_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_buyer_supercenter_shopp_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_buyer_supercenter_shopp_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_buyer_warehouse_club_mem_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_buyer_warehouse_club_mem_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_buyer_warehouse_club_mem_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_buyer_warehouse_club_mem_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_buyer_yng_adult_cloth_shopp_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_buyer_yng_adult_cloth_shopp_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_buyer_yng_adult_cloth_shopp_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_buyer_yng_adult_cloth_shopp_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_arts_charities_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_arts_charities_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_arts_charities_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_arts_charities_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_charities_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_charities_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_charities_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_charities_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_edu_charities_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_edu_charities_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_edu_charities_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_edu_charities_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_health_charities_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_health_charities_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_health_charities_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_health_charities_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_political_charities_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_political_charities_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_political_charities_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_political_charities_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_pvt_found_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_pvt_found_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_pvt_found_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_pvt_found_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_volunteer_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_volunteer_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_volunteer_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_donor_contrib_volunteer_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_finan_credit_card_usr_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_finan_credit_card_usr_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_finan_credit_card_usr_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_finan_credit_card_usr_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_finan_debit_card_usr_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_finan_debit_card_usr_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_finan_debit_card_usr_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_finan_debit_card_usr_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_finan_store_credit_card_usr_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_finan_store_credit_card_usr_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_finan_store_credit_card_usr_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_finan_store_credit_card_usr_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_hobbies_gardening_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_hobbies_gardening_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_hobbies_gardening_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_hobbies_gardening_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_freq_fly_pgm_mem_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_freq_fly_pgm_mem_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_freq_fly_pgm_mem_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_freq_fly_pgm_mem_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_have_grand_child_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_have_grand_child_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_have_grand_child_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_have_grand_child_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_high_freq_business_trav_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_high_freq_business_trav_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_high_freq_business_trav_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_high_freq_business_trav_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_high_freq_cruise_enthus_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_high_freq_cruise_enthus_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_high_freq_cruise_enthus_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_high_freq_cruise_enthus_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_high_freq_domes_vacationer_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_high_freq_domes_vacationer_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_high_freq_domes_vacationer_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_high_freq_domes_vacationer_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_high_freq_forgn_vacationer_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_high_freq_forgn_vacationer_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_high_freq_forgn_vacationer_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_high_freq_forgn_vacationer_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_hostel_guest_loyal_pgm_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_hostel_guest_loyal_pgm_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_hostel_guest_loyal_pgm_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_hostel_guest_loyal_pgm_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_interest_religion_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_interest_religion_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_interest_religion_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_interest_religion_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_lf_insure_plcy_hldr_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_lf_insure_plcy_hldr_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_lf_insure_plcy_hldr_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_lf_insure_plcy_hldr_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_med_insure_plcy_hldrs_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_med_insure_plcy_hldrs_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_med_insure_plcy_hldrs_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_med_insure_plcy_hldrs_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_medicare_plcy_hldrs_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_medicare_plcy_hldrs_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_medicare_plcy_hldrs_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_medicare_plcy_hldrs_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_military_act_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_military_act_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_military_act_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_military_act_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_military_inact_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_military_inact_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_military_inact_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_lfstyl_military_inact_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_memship_aarp_mem_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_memship_aarp_mem_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_memship_aarp_mem_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_memship_aarp_mem_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_memship_union_mem_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_memship_union_mem_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_memship_union_mem_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_memship_union_mem_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_brand_loyal_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_brand_loyal_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_brand_loyal_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_brand_loyal_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_disc_supercenter_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_disc_supercenter_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_disc_supercenter_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_disc_supercenter_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_ebid_sites_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_ebid_sites_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_ebid_sites_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_ebid_sites_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_etail_only_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_etail_only_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_etail_only_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_etail_only_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_mid_hi_end_store_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_mid_hi_end_store_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_mid_hi_end_store_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_mid_hi_end_store_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_online_deal_vouch_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_online_deal_vouch_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_online_deal_vouch_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_online_deal_vouch_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_spclty_boutique_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_spclty_boutique_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_spclty_boutique_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_spclty_boutique_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_spclty_dept_store_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_spclty_dept_store_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_spclty_dept_store_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_spclty_dept_store_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_wholesale_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_wholesale_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_wholesale_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_conv_wholesale_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_deal_seeker_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_deal_seeker_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_deal_seeker_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_deal_seeker_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_broadcast_cabletv_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_broadcast_cabletv_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_broadcast_cabletv_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_broadcast_cabletv_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_digit_display_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_digit_display_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_digit_display_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_digit_display_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_digit_newspaper_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_digit_newspaper_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_digit_newspaper_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_digit_newspaper_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_digit_video_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_digit_video_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_digit_video_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_digit_video_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_direct_mail_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_direct_mail_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_direct_mail_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_direct_mail_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_radio_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_radio_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_radio_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_radio_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_sms_mms_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_sms_mms_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_sms_mms_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_sms_mms_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_stream_tv_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_stream_tv_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_stream_tv_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_stream_tv_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_trad_newspaper_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_trad_newspaper_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_trad_newspaper_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_eng_trad_newspaper_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_mainstream_adapter_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_mainstream_adapter_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_mainstream_adapter_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_mainstream_adapter_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_moment_shopper_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_moment_shopper_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_moment_shopper_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_moment_shopper_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_novelty_seek_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_novelty_seek_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_novelty_seek_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_novelty_seek_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_organic_natural_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_organic_natural_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_organic_natural_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_organic_natural_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_quality_matters_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_quality_matters_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_quality_matters_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_quality_matters_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_recreation_shopper_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_recreation_shopper_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_recreation_shopper_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_recreation_shopper_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_savvy_research_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_savvy_research_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_savvy_research_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_savvy_research_lvls_total::NUMBER(38, 0),\n    \n    $1:cv_tt_trendsetter_lvls_h::NUMBER(38, 0),\n    \n    $1:cv_tt_trendsetter_lvls_m::NUMBER(38, 0),\n    \n    $1:cv_tt_trendsetter_lvls_l::NUMBER(38, 0),\n    \n    $1:cv_tt_trendsetter_lvls_total::NUMBER(38, 0),\n    \n    $1:Asian_count::NUMBER(38, 0),\n    \n    $1:African_American_count::NUMBER(38, 0),\n    \n    $1:Caucasian_count::NUMBER(38, 0),\n    \n    $1:Hispanic_count::NUMBER(38, 0),\n    \n    $1:Unknown_count::NUMBER(38, 0),\n    \n    $1:Millennial_count::NUMBER(38, 0),\n    \n    $1:GenX_count::NUMBER(38, 0),\n    \n    $1:Young_Boomer_count::NUMBER(38, 0),\n    \n    $1:Older_Boomer_count::NUMBER(38, 0),\n    \n    $1:Retirees_count::NUMBER(38, 0),\n    \n    $1:Seniors_count::NUMBER(38, 0),\n    \n    $1:hh_income_1_count::NUMBER(38, 0),\n    \n    $1:hh_income_2_count::NUMBER(38, 0),\n    \n    $1:hh_income_3_count::NUMBER(38, 0),\n    \n    $1:hh_income_4_count::NUMBER(38, 0),\n    \n    $1:hh_income_5_count::NUMBER(38, 0),\n    \n    $1:hh_income_6_count::NUMBER(38, 0),\n    \n    $1:hh_income_7_count::NUMBER(38, 0),\n    \n    $1:hh_income_8_count::NUMBER(38, 0),\n    \n    $1:Persons_1_count::NUMBER(38, 0),\n    \n    $1:Persons_2_count::NUMBER(38, 0),\n    \n    $1:Persons_3_count::NUMBER(38, 0),\n    \n    $1:Persons_4_count::NUMBER(38, 0),\n    \n    $1:Persons_5_count::NUMBER(38, 0),\n    \n    $1:Persons_6_count::NUMBER(38, 0),\n    \n    $1:Persons_7_count::NUMBER(38, 0),\n    \n    $1:Persons_8plus_count::NUMBER(38, 0),\n    \n    CURRENT_TIMESTAMP()\nFROM\n\n    @DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.__STAGE_TOKEN__/sDNA/mvh/dxh/dx_mvhs/mvh_retailer_prod_attr_data\n\n)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.mvh_retailer_prod_attr_data_full"}, "model.sdna_project.btg_fl_sales_cust_prod_v_extend_sc": {"raw_sql": "{{ config(materialized='view') }}\n\nSELECT *\nFROM {{ ref('btg_fl_sales_cust_prod_v_extend_full') }}\nWHERE UPPER(TRIM(retailer)) = 'SAM''S CLUB'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.btg_fl_sales_cust_prod_v_extend_full"]}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "transformations", "btg_extend", "btg_fl_sales_cust_prod_v_extend_sc"], "unique_id": "model.sdna_project.btg_fl_sales_cust_prod_v_extend_sc", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/transformations/btg_extend/btg_fl_sales_cust_prod_v_extend_sc.sql", "original_file_path": "models/walmart_data_infra/transformations/btg_extend/btg_fl_sales_cust_prod_v_extend_sc.sql", "name": "btg_fl_sales_cust_prod_v_extend_sc", "alias": "btg_fl_sales_cust_prod_v_extend_sc", "checksum": {"name": "sha256", "checksum": "6b4b4cf65872b879f1194476438c388da491cb0c0773a304e55df124f972a40d"}, "tags": [], "refs": [["btg_fl_sales_cust_prod_v_extend_full"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/transformations/btg_extend/btg_fl_sales_cust_prod_v_extend_sc.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "view", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "\n\nSELECT *\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.btg_fl_sales_cust_prod_v_extend_full\nWHERE UPPER(TRIM(retailer)) = 'SAM''S CLUB'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.btg_fl_sales_cust_prod_v_extend_sc"}, "model.sdna_project.btg_fl_sales_cust_prod_v_extend_wm": {"raw_sql": "{{ config(materialized='view') }}\n\nSELECT *\nFROM {{ ref('btg_fl_sales_cust_prod_v_extend_full') }}\nWHERE UPPER(TRIM(retailer)) = 'WALMART CO'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.btg_fl_sales_cust_prod_v_extend_full"]}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "transformations", "btg_extend", "btg_fl_sales_cust_prod_v_extend_wm"], "unique_id": "model.sdna_project.btg_fl_sales_cust_prod_v_extend_wm", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/transformations/btg_extend/btg_fl_sales_cust_prod_v_extend_wm.sql", "original_file_path": "models/walmart_data_infra/transformations/btg_extend/btg_fl_sales_cust_prod_v_extend_wm.sql", "name": "btg_fl_sales_cust_prod_v_extend_wm", "alias": "btg_fl_sales_cust_prod_v_extend_wm", "checksum": {"name": "sha256", "checksum": "b65b690edbd88173c1e65087b38f8e08c6f53f026a4957b033a3fd4f3db1a350"}, "tags": [], "refs": [["btg_fl_sales_cust_prod_v_extend_full"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/transformations/btg_extend/btg_fl_sales_cust_prod_v_extend_wm.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "view", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "\n\nSELECT *\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.btg_fl_sales_cust_prod_v_extend_full\nWHERE UPPER(TRIM(retailer)) = 'WALMART CO'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.btg_fl_sales_cust_prod_v_extend_wm"}, "model.sdna_project.btg_fl_sales_cust_wk_prod_v_extend_sc": {"raw_sql": "{{ config(materialized='view') }}\n\nSELECT *\nFROM {{ ref('btg_fl_sales_cust_wk_prod_v_extend_full') }}\nWHERE UPPER(TRIM(retailer)) = 'SAM''S CLUB'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.btg_fl_sales_cust_wk_prod_v_extend_full"]}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "transformations", "btg_extend", "btg_fl_sales_cust_wk_prod_v_extend_sc"], "unique_id": "model.sdna_project.btg_fl_sales_cust_wk_prod_v_extend_sc", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/transformations/btg_extend/btg_fl_sales_cust_wk_prod_v_extend_sc.sql", "original_file_path": "models/walmart_data_infra/transformations/btg_extend/btg_fl_sales_cust_wk_prod_v_extend_sc.sql", "name": "btg_fl_sales_cust_wk_prod_v_extend_sc", "alias": "btg_fl_sales_cust_wk_prod_v_extend_sc", "checksum": {"name": "sha256", "checksum": "82fc1dd4503de64d4491fa143152c2f6c2fbb1931e3564e7a2e3db130da6aa51"}, "tags": [], "refs": [["btg_fl_sales_cust_wk_prod_v_extend_full"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/transformations/btg_extend/btg_fl_sales_cust_wk_prod_v_extend_sc.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "view", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "\n\nSELECT *\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.btg_fl_sales_cust_wk_prod_v_extend_full\nWHERE UPPER(TRIM(retailer)) = 'SAM''S CLUB'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.btg_fl_sales_cust_wk_prod_v_extend_sc"}, "model.sdna_project.btg_fl_sales_cust_wk_prod_v_extend_wm": {"raw_sql": "{{ config(materialized='view') }}\n\nSELECT *\nFROM {{ ref('btg_fl_sales_cust_wk_prod_v_extend_full') }}\nWHERE UPPER(TRIM(retailer)) = 'WALMART CO'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.btg_fl_sales_cust_wk_prod_v_extend_full"]}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "transformations", "btg_extend", "btg_fl_sales_cust_wk_prod_v_extend_wm"], "unique_id": "model.sdna_project.btg_fl_sales_cust_wk_prod_v_extend_wm", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/transformations/btg_extend/btg_fl_sales_cust_wk_prod_v_extend_wm.sql", "original_file_path": "models/walmart_data_infra/transformations/btg_extend/btg_fl_sales_cust_wk_prod_v_extend_wm.sql", "name": "btg_fl_sales_cust_wk_prod_v_extend_wm", "alias": "btg_fl_sales_cust_wk_prod_v_extend_wm", "checksum": {"name": "sha256", "checksum": "50fe918dc938bcdc8b58bb5a7822b156cfe7df229561174a30d25bb2a6c1c660"}, "tags": [], "refs": [["btg_fl_sales_cust_wk_prod_v_extend_full"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/transformations/btg_extend/btg_fl_sales_cust_wk_prod_v_extend_wm.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "view", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "\n\nSELECT *\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.btg_fl_sales_cust_wk_prod_v_extend_full\nWHERE UPPER(TRIM(retailer)) = 'WALMART CO'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.btg_fl_sales_cust_wk_prod_v_extend_wm"}, "model.sdna_project.btg_pbc_sales_cust_prod_v_extend_sc": {"raw_sql": "{{ config(materialized='view') }}\n\nSELECT *\nFROM {{ ref('btg_pbc_sales_cust_prod_v_extend_full') }}\nWHERE UPPER(TRIM(retailer)) = 'SAM''S WHOLESALE CLUB'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.btg_pbc_sales_cust_prod_v_extend_full"]}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "transformations", "btg_extend", "btg_pbc_sales_cust_prod_v_extend_sc"], "unique_id": "model.sdna_project.btg_pbc_sales_cust_prod_v_extend_sc", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/transformations/btg_extend/btg_pbc_sales_cust_prod_v_extend_sc.sql", "original_file_path": "models/walmart_data_infra/transformations/btg_extend/btg_pbc_sales_cust_prod_v_extend_sc.sql", "name": "btg_pbc_sales_cust_prod_v_extend_sc", "alias": "btg_pbc_sales_cust_prod_v_extend_sc", "checksum": {"name": "sha256", "checksum": "9853af1ba2c884f73c700b311cecc487894df7b26596c0fd116a5745986b88df"}, "tags": [], "refs": [["btg_pbc_sales_cust_prod_v_extend_full"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/transformations/btg_extend/btg_pbc_sales_cust_prod_v_extend_sc.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "view", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "\n\nSELECT *\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.btg_pbc_sales_cust_prod_v_extend_full\nWHERE UPPER(TRIM(retailer)) = 'SAM''S WHOLESALE CLUB'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.btg_pbc_sales_cust_prod_v_extend_sc"}, "model.sdna_project.btg_pbc_sales_cust_prod_v_extend_wm": {"raw_sql": "{{ config(materialized='view') }}\n\nSELECT *\nFROM {{ ref('btg_pbc_sales_cust_prod_v_extend_full') }}\nWHERE UPPER(TRIM(retailer)) IN ('WALMART SUPERCENTERS', 'NEIGHBORHOOD MARKETS')", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.btg_pbc_sales_cust_prod_v_extend_full"]}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "transformations", "btg_extend", "btg_pbc_sales_cust_prod_v_extend_wm"], "unique_id": "model.sdna_project.btg_pbc_sales_cust_prod_v_extend_wm", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/transformations/btg_extend/btg_pbc_sales_cust_prod_v_extend_wm.sql", "original_file_path": "models/walmart_data_infra/transformations/btg_extend/btg_pbc_sales_cust_prod_v_extend_wm.sql", "name": "btg_pbc_sales_cust_prod_v_extend_wm", "alias": "btg_pbc_sales_cust_prod_v_extend_wm", "checksum": {"name": "sha256", "checksum": "bb3940566c43ce98199d425fb650ca5de1cee263ec6d524f267bc04f12897c2f"}, "tags": [], "refs": [["btg_pbc_sales_cust_prod_v_extend_full"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/transformations/btg_extend/btg_pbc_sales_cust_prod_v_extend_wm.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "view", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "\n\nSELECT *\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.btg_pbc_sales_cust_prod_v_extend_full\nWHERE UPPER(TRIM(retailer)) IN ('WALMART SUPERCENTERS', 'NEIGHBORHOOD MARKETS')", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.btg_pbc_sales_cust_prod_v_extend_wm"}, "model.sdna_project.btg_pbc_sales_cust_wk_prod_v_extend_sc": {"raw_sql": "{{ config(materialized='view') }}\n\nSELECT *\nFROM {{ ref('btg_pbc_sales_cust_wk_prod_v_extend_full') }}\nWHERE UPPER(TRIM(retailer)) = 'SAM''S WHOLESALE CLUB'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.btg_pbc_sales_cust_wk_prod_v_extend_full"]}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "transformations", "btg_extend", "btg_pbc_sales_cust_wk_prod_v_extend_sc"], "unique_id": "model.sdna_project.btg_pbc_sales_cust_wk_prod_v_extend_sc", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/transformations/btg_extend/btg_pbc_sales_cust_wk_prod_v_extend_sc.sql", "original_file_path": "models/walmart_data_infra/transformations/btg_extend/btg_pbc_sales_cust_wk_prod_v_extend_sc.sql", "name": "btg_pbc_sales_cust_wk_prod_v_extend_sc", "alias": "btg_pbc_sales_cust_wk_prod_v_extend_sc", "checksum": {"name": "sha256", "checksum": "ccb3d9afca8d21ec876c6deabbf83017fac93540d1f9e0ea0b1dad98a4a84439"}, "tags": [], "refs": [["btg_pbc_sales_cust_wk_prod_v_extend_full"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/transformations/btg_extend/btg_pbc_sales_cust_wk_prod_v_extend_sc.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "view", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "\n\nSELECT *\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.btg_pbc_sales_cust_wk_prod_v_extend_full\nWHERE UPPER(TRIM(retailer)) = 'SAM''S WHOLESALE CLUB'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.btg_pbc_sales_cust_wk_prod_v_extend_sc"}, "model.sdna_project.btg_pbc_sales_cust_wk_prod_v_extend_wm": {"raw_sql": "{{ config(materialized='view') }}\n\nSELECT *\nFROM {{ ref('btg_pbc_sales_cust_wk_prod_v_extend_full') }}\nWHERE UPPER(TRIM(retailer)) IN ('WALMART SUPERCENTERS', 'NEIGHBORHOOD MARKETS')", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.btg_pbc_sales_cust_wk_prod_v_extend_full"]}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "transformations", "btg_extend", "btg_pbc_sales_cust_wk_prod_v_extend_wm"], "unique_id": "model.sdna_project.btg_pbc_sales_cust_wk_prod_v_extend_wm", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/transformations/btg_extend/btg_pbc_sales_cust_wk_prod_v_extend_wm.sql", "original_file_path": "models/walmart_data_infra/transformations/btg_extend/btg_pbc_sales_cust_wk_prod_v_extend_wm.sql", "name": "btg_pbc_sales_cust_wk_prod_v_extend_wm", "alias": "btg_pbc_sales_cust_wk_prod_v_extend_wm", "checksum": {"name": "sha256", "checksum": "df66c1d97912860c4fdba1f9d1f5b562185398b015ee02540eaedb6a9cf2bbb1"}, "tags": [], "refs": [["btg_pbc_sales_cust_wk_prod_v_extend_full"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/transformations/btg_extend/btg_pbc_sales_cust_wk_prod_v_extend_wm.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "view", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "\n\nSELECT *\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.btg_pbc_sales_cust_wk_prod_v_extend_full\nWHERE UPPER(TRIM(retailer)) IN ('WALMART SUPERCENTERS', 'NEIGHBORHOOD MARKETS')", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.btg_pbc_sales_cust_wk_prod_v_extend_wm"}, "model.sdna_project.dx_fl_sales_cust_wk_prod_extend_sc": {"raw_sql": "{{ config(materialized='view') }}\n\nSELECT *\nFROM {{ ref('dx_fl_sales_cust_wk_prod_extend_full') }}\nWHERE UPPER(TRIM(retailer)) = 'SAM''S CLUB'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.dx_fl_sales_cust_wk_prod_extend_full"]}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "transformations", "btg_extend", "dx_fl_sales_cust_wk_prod_extend_sc"], "unique_id": "model.sdna_project.dx_fl_sales_cust_wk_prod_extend_sc", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/transformations/btg_extend/dx_fl_sales_cust_wk_prod_extend_sc.sql", "original_file_path": "models/walmart_data_infra/transformations/btg_extend/dx_fl_sales_cust_wk_prod_extend_sc.sql", "name": "dx_fl_sales_cust_wk_prod_extend_sc", "alias": "dx_fl_sales_cust_wk_prod_extend_sc", "checksum": {"name": "sha256", "checksum": "98dc05175666da575d1be636eaa2b505012ef4fb66bbf717ec5950f329365663"}, "tags": [], "refs": [["dx_fl_sales_cust_wk_prod_extend_full"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/transformations/btg_extend/dx_fl_sales_cust_wk_prod_extend_sc.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "view", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "\n\nSELECT *\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_fl_sales_cust_wk_prod_extend_full\nWHERE UPPER(TRIM(retailer)) = 'SAM''S CLUB'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_fl_sales_cust_wk_prod_extend_sc"}, "model.sdna_project.dx_fl_sales_cust_wk_prod_extend_wm": {"raw_sql": "{{ config(materialized='view') }}\n\nSELECT *\nFROM {{ ref('dx_fl_sales_cust_wk_prod_extend_full') }}\nWHERE UPPER(TRIM(retailer)) = 'WALMART CO'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.dx_fl_sales_cust_wk_prod_extend_full"]}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "transformations", "btg_extend", "dx_fl_sales_cust_wk_prod_extend_wm"], "unique_id": "model.sdna_project.dx_fl_sales_cust_wk_prod_extend_wm", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/transformations/btg_extend/dx_fl_sales_cust_wk_prod_extend_wm.sql", "original_file_path": "models/walmart_data_infra/transformations/btg_extend/dx_fl_sales_cust_wk_prod_extend_wm.sql", "name": "dx_fl_sales_cust_wk_prod_extend_wm", "alias": "dx_fl_sales_cust_wk_prod_extend_wm", "checksum": {"name": "sha256", "checksum": "eae5bc98396117895a977ac1521eb7d00c934931babffbab32d48007250cad45"}, "tags": [], "refs": [["dx_fl_sales_cust_wk_prod_extend_full"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/transformations/btg_extend/dx_fl_sales_cust_wk_prod_extend_wm.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "view", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "\n\nSELECT *\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_fl_sales_cust_wk_prod_extend_full\nWHERE UPPER(TRIM(retailer)) = 'WALMART CO'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_fl_sales_cust_wk_prod_extend_wm"}, "model.sdna_project.dx_id_sc": {"raw_sql": "{{ config(materialized='table', transient=false) }}\n\nSELECT dx_id\nFROM {{ ref('dx_fl_sales_cust_wk_prod_extend_sc') }}\n\nUNION\n\nSELECT dx_id\nFROM {{ ref('dx_pbc_sales_cust_wk_prod_extend_sc') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.dx_fl_sales_cust_wk_prod_extend_sc", "model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_sc"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "transformations", "btg_extend", "dx_id_sc"], "unique_id": "model.sdna_project.dx_id_sc", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/transformations/btg_extend/dx_id_sc.sql", "original_file_path": "models/walmart_data_infra/transformations/btg_extend/dx_id_sc.sql", "name": "dx_id_sc", "alias": "dx_id_sc", "checksum": {"name": "sha256", "checksum": "27a4487f4271ea8b3228c25e6b1ab0ee853ce9f16bb21a7d9cdc80b6f978aa3f"}, "tags": [], "refs": [["dx_fl_sales_cust_wk_prod_extend_sc"], ["dx_pbc_sales_cust_wk_prod_extend_sc"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/transformations/btg_extend/dx_id_sc.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "table", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "\n\nSELECT dx_id\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_fl_sales_cust_wk_prod_extend_sc\n\nUNION\n\nSELECT dx_id\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_pbc_sales_cust_wk_prod_extend_sc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_id_sc"}, "model.sdna_project.dx_id_wm": {"raw_sql": "{{ config(materialized='table', transient=false) }}\n\nSELECT dx_id\nFROM {{ ref('dx_fl_sales_cust_wk_prod_extend_wm') }}\n\nUNION\n\nSELECT dx_id\nFROM {{ ref('dx_pbc_sales_cust_wk_prod_extend_wm') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.dx_fl_sales_cust_wk_prod_extend_wm", "model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_wm"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "transformations", "btg_extend", "dx_id_wm"], "unique_id": "model.sdna_project.dx_id_wm", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/transformations/btg_extend/dx_id_wm.sql", "original_file_path": "models/walmart_data_infra/transformations/btg_extend/dx_id_wm.sql", "name": "dx_id_wm", "alias": "dx_id_wm", "checksum": {"name": "sha256", "checksum": "91c60aadc32197541e367f9b58fcff366dade954abfd3647e99aef78473f1a81"}, "tags": [], "refs": [["dx_fl_sales_cust_wk_prod_extend_wm"], ["dx_pbc_sales_cust_wk_prod_extend_wm"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/transformations/btg_extend/dx_id_wm.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "table", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "\n\nSELECT dx_id\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_fl_sales_cust_wk_prod_extend_wm\n\nUNION\n\nSELECT dx_id\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_pbc_sales_cust_wk_prod_extend_wm", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_id_wm"}, "model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_sc": {"raw_sql": "{{ config(materialized='view') }}\n\nSELECT *\nFROM {{ ref('dx_pbc_sales_cust_wk_prod_extend_full') }}\nWHERE UPPER(TRIM(retailer)) = 'SAMS CLUB'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_full"]}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "transformations", "btg_extend", "dx_pbc_sales_cust_wk_prod_extend_sc"], "unique_id": "model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_sc", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/transformations/btg_extend/dx_pbc_sales_cust_wk_prod_extend_sc.sql", "original_file_path": "models/walmart_data_infra/transformations/btg_extend/dx_pbc_sales_cust_wk_prod_extend_sc.sql", "name": "dx_pbc_sales_cust_wk_prod_extend_sc", "alias": "dx_pbc_sales_cust_wk_prod_extend_sc", "checksum": {"name": "sha256", "checksum": "6b6848bcb62a7bab551fa0da3b917a177bc4eb34340db397ecd25c6766d850ba"}, "tags": [], "refs": [["dx_pbc_sales_cust_wk_prod_extend_full"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/transformations/btg_extend/dx_pbc_sales_cust_wk_prod_extend_sc.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "view", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "\n\nSELECT *\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_pbc_sales_cust_wk_prod_extend_full\nWHERE UPPER(TRIM(retailer)) = 'SAMS CLUB'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_pbc_sales_cust_wk_prod_extend_sc"}, "model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_wm": {"raw_sql": "{{ config(materialized='view') }}\n\nSELECT *\nFROM {{ ref('dx_pbc_sales_cust_wk_prod_extend_full') }}\nWHERE UPPER(TRIM(retailer)) IN ('ALL OTHER WALMART', 'NEIGHBORHOOD MARKET')", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_full"]}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "transformations", "btg_extend", "dx_pbc_sales_cust_wk_prod_extend_wm"], "unique_id": "model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_wm", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/transformations/btg_extend/dx_pbc_sales_cust_wk_prod_extend_wm.sql", "original_file_path": "models/walmart_data_infra/transformations/btg_extend/dx_pbc_sales_cust_wk_prod_extend_wm.sql", "name": "dx_pbc_sales_cust_wk_prod_extend_wm", "alias": "dx_pbc_sales_cust_wk_prod_extend_wm", "checksum": {"name": "sha256", "checksum": "b74f57ba46fbcec91a20adac9d06f78b1c436a3fa74aa4e5cd16f3c6c5cbbe98"}, "tags": [], "refs": [["dx_pbc_sales_cust_wk_prod_extend_full"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/transformations/btg_extend/dx_pbc_sales_cust_wk_prod_extend_wm.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "view", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "\n\nSELECT *\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_pbc_sales_cust_wk_prod_extend_full\nWHERE UPPER(TRIM(retailer)) IN ('ALL OTHER WALMART', 'NEIGHBORHOOD MARKET')", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_pbc_sales_cust_wk_prod_extend_wm"}, "model.sdna_project.dx_retailer_trade_area_sc": {"raw_sql": "{{ config(materialized='view') }}\n\nSELECT *\nFROM {{ ref('dx_retailer_trade_area_full') }}\nWHERE dx_id IN (SELECT dx_id FROM {{ ref('dx_id_sc') }})", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.dx_retailer_trade_area_full", "model.sdna_project.dx_id_sc"]}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "transformations", "btg_extend", "dx_retailer_trade_area_sc"], "unique_id": "model.sdna_project.dx_retailer_trade_area_sc", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/transformations/btg_extend/dx_retailer_trade_area_sc.sql", "original_file_path": "models/walmart_data_infra/transformations/btg_extend/dx_retailer_trade_area_sc.sql", "name": "dx_retailer_trade_area_sc", "alias": "dx_retailer_trade_area_sc", "checksum": {"name": "sha256", "checksum": "77446d0f32a7d944d50ff2ca4a0144ec80731ccd60538d032f91391bf4e4070e"}, "tags": [], "refs": [["dx_retailer_trade_area_full"], ["dx_id_sc"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/transformations/btg_extend/dx_retailer_trade_area_sc.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "view", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "\n\nSELECT *\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_retailer_trade_area_full\nWHERE dx_id IN (SELECT dx_id FROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_id_sc)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_retailer_trade_area_sc"}, "model.sdna_project.dx_retailer_trade_area_wm": {"raw_sql": "{{ config(materialized='view') }}\n\nSELECT *\nFROM {{ ref('dx_retailer_trade_area_full') }}\nWHERE dx_id IN (SELECT dx_id FROM {{ ref('dx_id_wm') }})", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.dx_retailer_trade_area_full", "model.sdna_project.dx_id_wm"]}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "transformations", "btg_extend", "dx_retailer_trade_area_wm"], "unique_id": "model.sdna_project.dx_retailer_trade_area_wm", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/transformations/btg_extend/dx_retailer_trade_area_wm.sql", "original_file_path": "models/walmart_data_infra/transformations/btg_extend/dx_retailer_trade_area_wm.sql", "name": "dx_retailer_trade_area_wm", "alias": "dx_retailer_trade_area_wm", "checksum": {"name": "sha256", "checksum": "7a6094877d9e1c1b2a20bdbb9c356eb8ae2664ff153bd0249752ad7ed7fa6cc2"}, "tags": [], "refs": [["dx_retailer_trade_area_full"], ["dx_id_wm"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/transformations/btg_extend/dx_retailer_trade_area_wm.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "view", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "\n\nSELECT *\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_retailer_trade_area_full\nWHERE dx_id IN (SELECT dx_id FROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_id_wm)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_retailer_trade_area_wm"}, "model.sdna_project.mvh_demog_data_sc": {"raw_sql": "{{ config(materialized='view') }}\n\nSELECT *\nFROM {{ ref('mvh_demog_data_full') }}\nWHERE dx_id IN (SELECT dx_id FROM {{ ref('dx_id_sc') }})", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mvh_demog_data_full", "model.sdna_project.dx_id_sc"]}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "transformations", "btg_extend", "mvh_demog_data_sc"], "unique_id": "model.sdna_project.mvh_demog_data_sc", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/transformations/btg_extend/mvh_demog_data_sc.sql", "original_file_path": "models/walmart_data_infra/transformations/btg_extend/mvh_demog_data_sc.sql", "name": "mvh_demog_data_sc", "alias": "mvh_demog_data_sc", "checksum": {"name": "sha256", "checksum": "2672054a285790e511162377bcf6a413a1f35af2891e45e8e571273e7d965d05"}, "tags": [], "refs": [["mvh_demog_data_full"], ["dx_id_sc"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/transformations/btg_extend/mvh_demog_data_sc.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "view", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "\n\nSELECT *\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.mvh_demog_data_full\nWHERE dx_id IN (SELECT dx_id FROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_id_sc)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.mvh_demog_data_sc"}, "model.sdna_project.mvh_demog_data_wm": {"raw_sql": "{{ config(materialized='view') }}\n\nSELECT *\nFROM {{ ref('mvh_demog_data_full') }}\nWHERE dx_id IN (SELECT dx_id FROM {{ ref('dx_id_wm') }})", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mvh_demog_data_full", "model.sdna_project.dx_id_wm"]}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "transformations", "btg_extend", "mvh_demog_data_wm"], "unique_id": "model.sdna_project.mvh_demog_data_wm", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/transformations/btg_extend/mvh_demog_data_wm.sql", "original_file_path": "models/walmart_data_infra/transformations/btg_extend/mvh_demog_data_wm.sql", "name": "mvh_demog_data_wm", "alias": "mvh_demog_data_wm", "checksum": {"name": "sha256", "checksum": "b9462ebe507b72fecd043c9cc66ff30c77f68fc4426f5e3f3776b45fc4c02723"}, "tags": [], "refs": [["mvh_demog_data_full"], ["dx_id_wm"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/transformations/btg_extend/mvh_demog_data_wm.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "view", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "\n\nSELECT *\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.mvh_demog_data_full\nWHERE dx_id IN (SELECT dx_id FROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_id_wm)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.mvh_demog_data_wm"}, "model.sdna_project.mvh_retailer_prod_attr_data_sc": {"raw_sql": "{{ config(materialized='view') }}\n\nSELECT *\nFROM {{ ref('mvh_retailer_prod_attr_data_full') }}\nWHERE dx_id IN (SELECT dx_id FROM {{ ref('dx_id_sc') }})", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mvh_retailer_prod_attr_data_full", "model.sdna_project.dx_id_sc"]}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "transformations", "btg_extend", "mvh_retailer_prod_attr_data_sc"], "unique_id": "model.sdna_project.mvh_retailer_prod_attr_data_sc", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/transformations/btg_extend/mvh_retailer_prod_attr_data_sc.sql", "original_file_path": "models/walmart_data_infra/transformations/btg_extend/mvh_retailer_prod_attr_data_sc.sql", "name": "mvh_retailer_prod_attr_data_sc", "alias": "mvh_retailer_prod_attr_data_sc", "checksum": {"name": "sha256", "checksum": "28a10118f200b8d00cc4a4d7c00480976c89a51f94e740f6e4f47b6706a20729"}, "tags": [], "refs": [["mvh_retailer_prod_attr_data_full"], ["dx_id_sc"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/transformations/btg_extend/mvh_retailer_prod_attr_data_sc.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "view", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "\n\nSELECT *\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.mvh_retailer_prod_attr_data_full\nWHERE dx_id IN (SELECT dx_id FROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_id_sc)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.mvh_retailer_prod_attr_data_sc"}, "model.sdna_project.mvh_retailer_prod_attr_data_wm": {"raw_sql": "{{ config(materialized='view') }}\n\nSELECT *\nFROM {{ ref('mvh_retailer_prod_attr_data_full') }}\nWHERE dx_id IN (SELECT dx_id FROM {{ ref('dx_id_wm') }})", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.sdna_project.mvh_retailer_prod_attr_data_full", "model.sdna_project.dx_id_wm"]}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "transient": false, "post-hook": [], "pre-hook": [{"sql": "alter session set timezone='{{ var(\"default_timezone\") }}'", "transaction": true, "index": null}, {"sql": "alter session set week_start = 0", "transaction": true, "index": null}, {"sql": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "transaction": true, "index": null}]}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "walmart_data_infra", "transformations", "btg_extend", "mvh_retailer_prod_attr_data_wm"], "unique_id": "model.sdna_project.mvh_retailer_prod_attr_data_wm", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "walmart_data_infra/transformations/btg_extend/mvh_retailer_prod_attr_data_wm.sql", "original_file_path": "models/walmart_data_infra/transformations/btg_extend/mvh_retailer_prod_attr_data_wm.sql", "name": "mvh_retailer_prod_attr_data_wm", "alias": "mvh_retailer_prod_attr_data_wm", "checksum": {"name": "sha256", "checksum": "b64222b6bbe5dbf8dca3ee28b55acb51ac493e38de75818b3e31b47dd10ad2f4"}, "tags": [], "refs": [["mvh_retailer_prod_attr_data_full"], ["dx_id_wm"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/walmart_data_infra/transformations/btg_extend/mvh_retailer_prod_attr_data_wm.sql", "build_path": null, "deferred": false, "unrendered_config": {"pre-hook": " ALTER SESSION SET QUERY_TAG = '{{this.database.upper()}}.{{this.schema.upper()}}.{{this.table.upper()}}'; {% if target.name == 'dev' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_M {% elif target.name == 'stage' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_XL {% elif target.name == 'prod' %} USE WAREHOUSE DP_WALMART_DATA_INFRA_2XL {% endif %}", "materialized": "view", "transient": false, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "\n\nSELECT *\nFROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.mvh_retailer_prod_attr_data_full\nWHERE dx_id IN (SELECT dx_id FROM DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.dx_id_wm)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.mvh_retailer_prod_attr_data_wm"}, "seed.sdna_project.field_column_mapping_sdna_mx": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "field_column_mapping", "schema": "SDNA_MX_DEV", "database": "DP_SDNA_MX", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "DP_SDNA_MX", "schema": "SDNA_MX_DEV", "fqn": ["sdna_project", "mappings", "sdna_mx", "field_column_mapping_sdna_mx"], "unique_id": "seed.sdna_project.field_column_mapping_sdna_mx", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "mappings/sdna_mx/field_column_mapping_sdna_mx.csv", "original_file_path": "data/mappings/sdna_mx/field_column_mapping_sdna_mx.csv", "name": "field_column_mapping_sdna_mx", "alias": "field_column_mapping", "checksum": {"name": "sha256", "checksum": "05fc4d2740d9cd1241e54b6824f00d47365693ab131d29ae4b7b74fef6624a0d"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "field_column_mapping", "database": "DP_SDNA_MX", "schema": "SDNA_MX_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_MX.SDNA_MX_DEV.field_column_mapping"}, "seed.sdna_project.field_column_mapping_sdna_us_hh": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "field_column_mapping", "schema": "HOUSEHOLD_DEV", "database": null, "tags": [], "full_refresh": null, "on_schema_change": "ignore", "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "DP_SDNA_US", "schema": "HOUSEHOLD_DEV", "fqn": ["sdna_project", "mappings", "sdna_us", "household", "field_column_mapping_sdna_us_hh"], "unique_id": "seed.sdna_project.field_column_mapping_sdna_us_hh", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "mappings/sdna_us/household/field_column_mapping_sdna_us_hh.csv", "original_file_path": "data/mappings/sdna_us/household/field_column_mapping_sdna_us_hh.csv", "name": "field_column_mapping_sdna_us_hh", "alias": "field_column_mapping", "checksum": {"name": "sha256", "checksum": "80d2ea783f511beb38e2cf382d8738fb5d12c9bbde7f2a6f50de1cb38958ec26"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "field_column_mapping", "schema": "HOUSEHOLD_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_SDNA_US.HOUSEHOLD_DEV.field_column_mapping"}, "seed.sdna_project.field_column_mapping_walmart": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "field_column_mapping", "schema": "WALMART_DATA_INFRA_DEV", "database": "DP_WALMART_DATA_INFRA", "tags": [], "full_refresh": null, "on_schema_change": "ignore", "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_DEV", "fqn": ["sdna_project", "mappings", "walmart_data_infra", "field_column_mapping_walmart"], "unique_id": "seed.sdna_project.field_column_mapping_walmart", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "mappings/walmart_data_infra/field_column_mapping_walmart.csv", "original_file_path": "data/mappings/walmart_data_infra/field_column_mapping_walmart.csv", "name": "field_column_mapping_walmart", "alias": "field_column_mapping", "checksum": {"name": "sha256", "checksum": "75150a2a3e1bf8f6b5c147ef54a794df9b80a3894459d560f1a76f867d4c288c"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "field_column_mapping", "database": "DP_WALMART_DATA_INFRA", "schema": "WALMART_DATA_INFRA_{{ env_var('AIRFLOW_ENVIRONMENT')|upper }}"}, "created_at": 1629326232, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DP_WALMART_DATA_INFRA.WALMART_DATA_INFRA_DEV.field_column_mapping"}, "test.sdna_project.unique_stg_lookup_geo_code.7670bcaf18": {"raw_sql": "{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "geo_code", "model": "{% if config.get('where') %}(select * from {{ ref('stg_lookup') }} where {{config.get('where')}}) stg_lookup{% else %}{{ ref('stg_lookup') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.sdna_project.stg_lookup"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "on_schema_change": "ignore", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "DP_SDNA_US", "schema": "dbt_test__audit", "fqn": ["sdna_project", "schema_test", "unique_stg_lookup_geo_code"], "unique_id": "test.sdna_project.unique_stg_lookup_geo_code.7670bcaf18", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "schema_test/unique_stg_lookup_geo_code.sql", "original_file_path": "models/sdna_mx/transformations/mobility/mobility.yml", "name": "unique_stg_lookup_geo_code", "alias": "unique_stg_lookup_geo_code", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["stg_lookup"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mobility/mobility.yml/schema_test/unique_stg_lookup_geo_code.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1629326232, "compiled_sql": "\n    \n    \n\nwith __dbt__cte__stg_lookup as (\nselect\n    unit_code as geo_code,\n    name as state,\n    centroid as centroid\n\nfrom dp_data_share_aws_to_az_replica.mapbox.mapbox_lookup_adm1\nwhere country = 'MX'\n)select\n    geo_code,\n    count(*) as n_records\n\nfrom __dbt__cte__stg_lookup\nwhere geo_code is not null\ngroup by geo_code\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sdna_project.stg_lookup", "sql": " __dbt__cte__stg_lookup as (\nselect\n    unit_code as geo_code,\n    name as state,\n    centroid as centroid\n\nfrom dp_data_share_aws_to_az_replica.mapbox.mapbox_lookup_adm1\nwhere country = 'MX'\n)"}], "relation_name": null, "column_name": "geo_code"}, "test.sdna_project.not_null_stg_lookup_geo_code.509632b757": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "geo_code", "model": "{% if config.get('where') %}(select * from {{ ref('stg_lookup') }} where {{config.get('where')}}) stg_lookup{% else %}{{ ref('stg_lookup') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.sdna_project.stg_lookup"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "on_schema_change": "ignore", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "DP_SDNA_US", "schema": "dbt_test__audit", "fqn": ["sdna_project", "schema_test", "not_null_stg_lookup_geo_code"], "unique_id": "test.sdna_project.not_null_stg_lookup_geo_code.509632b757", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "schema_test/not_null_stg_lookup_geo_code.sql", "original_file_path": "models/sdna_mx/transformations/mobility/mobility.yml", "name": "not_null_stg_lookup_geo_code", "alias": "not_null_stg_lookup_geo_code", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["stg_lookup"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mobility/mobility.yml/schema_test/not_null_stg_lookup_geo_code.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1629326232, "compiled_sql": "\n    \n    \n\nwith __dbt__cte__stg_lookup as (\nselect\n    unit_code as geo_code,\n    name as state,\n    centroid as centroid\n\nfrom dp_data_share_aws_to_az_replica.mapbox.mapbox_lookup_adm1\nwhere country = 'MX'\n)select *\nfrom __dbt__cte__stg_lookup\nwhere geo_code is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sdna_project.stg_lookup", "sql": " __dbt__cte__stg_lookup as (\nselect\n    unit_code as geo_code,\n    name as state,\n    centroid as centroid\n\nfrom dp_data_share_aws_to_az_replica.mapbox.mapbox_lookup_adm1\nwhere country = 'MX'\n)"}], "relation_name": null, "column_name": "geo_code"}, "test.sdna_project.not_null_stg_mobility_data_geo_code.e0da8e5729": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "geo_code", "model": "{% if config.get('where') %}(select * from {{ ref('stg_mobility_data') }} where {{config.get('where')}}) stg_mobility_data{% else %}{{ ref('stg_mobility_data') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.sdna_project.stg_mobility_data"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "on_schema_change": "ignore", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "DP_SDNA_US", "schema": "dbt_test__audit", "fqn": ["sdna_project", "schema_test", "not_null_stg_mobility_data_geo_code"], "unique_id": "test.sdna_project.not_null_stg_mobility_data_geo_code.e0da8e5729", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "schema_test/not_null_stg_mobility_data_geo_code.sql", "original_file_path": "models/sdna_mx/transformations/mobility/mobility.yml", "name": "not_null_stg_mobility_data_geo_code", "alias": "not_null_stg_mobility_data_geo_code", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["stg_mobility_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mobility/mobility.yml/schema_test/not_null_stg_mobility_data_geo_code.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1629326232, "compiled_sql": "\n    \n    \n\nwith __dbt__cte__stg_mobility_data as (\nselect\n    geography as geo_code,\n    agg_day_period as agg_day,\n    activity_index_total as activity_index_total\n\nfrom dp_data_share_aws_to_az_replica.mapbox.mapbox_v0_2_daily_adm1_total\nwhere country = 'MX'\n)select *\nfrom __dbt__cte__stg_mobility_data\nwhere geo_code is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sdna_project.stg_mobility_data", "sql": " __dbt__cte__stg_mobility_data as (\nselect\n    geography as geo_code,\n    agg_day_period as agg_day,\n    activity_index_total as activity_index_total\n\nfrom dp_data_share_aws_to_az_replica.mapbox.mapbox_v0_2_daily_adm1_total\nwhere country = 'MX'\n)"}], "relation_name": null, "column_name": "geo_code"}, "test.sdna_project.relationships_stg_mobility_data_geo_code__geo_code__ref_stg_lookup_.c2246064ff": {"raw_sql": "{{ test_relationships(**_dbt_schema_test_kwargs) }}{{ config(alias=\"relationships_stg_mobility_dat_ff82e1579d19e95193f8a5387d02c66c\") }}", "test_metadata": {"name": "relationships", "kwargs": {"to": "ref('stg_lookup')", "field": "geo_code", "column_name": "geo_code", "model": "{% if config.get('where') %}(select * from {{ ref('stg_mobility_data') }} where {{config.get('where')}}) stg_mobility_data{% else %}{{ ref('stg_mobility_data') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.default__test_relationships"], "nodes": ["model.sdna_project.stg_lookup", "model.sdna_project.stg_mobility_data"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "relationships_stg_mobility_dat_ff82e1579d19e95193f8a5387d02c66c", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "on_schema_change": "ignore", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "DP_SDNA_US", "schema": "dbt_test__audit", "fqn": ["sdna_project", "schema_test", "relationships_stg_mobility_data_geo_code__geo_code__ref_stg_lookup_"], "unique_id": "test.sdna_project.relationships_stg_mobility_data_geo_code__geo_code__ref_stg_lookup_.c2246064ff", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "schema_test/relationships_stg_mobility_dat_ff82e1579d19e95193f8a5387d02c66c.sql", "original_file_path": "models/sdna_mx/transformations/mobility/mobility.yml", "name": "relationships_stg_mobility_data_geo_code__geo_code__ref_stg_lookup_", "alias": "relationships_stg_mobility_dat_ff82e1579d19e95193f8a5387d02c66c", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["stg_lookup"], ["stg_mobility_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mobility/mobility.yml/schema_test/relationships_stg_mobility_dat_ff82e1579d19e95193f8a5387d02c66c.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_stg_mobility_dat_ff82e1579d19e95193f8a5387d02c66c"}, "created_at": 1629326232, "compiled_sql": "\n    \n    \n\nwith  __dbt__cte__stg_lookup as (\nselect\n    unit_code as geo_code,\n    name as state,\n    centroid as centroid\n\nfrom dp_data_share_aws_to_az_replica.mapbox.mapbox_lookup_adm1\nwhere country = 'MX'\n),  __dbt__cte__stg_mobility_data as (\nselect\n    geography as geo_code,\n    agg_day_period as agg_day,\n    activity_index_total as activity_index_total\n\nfrom dp_data_share_aws_to_az_replica.mapbox.mapbox_v0_2_daily_adm1_total\nwhere country = 'MX'\n),child as (\n    select * from __dbt__cte__stg_mobility_data\n    where geo_code is not null\n),\n\nparent as (\n    select * from __dbt__cte__stg_lookup\n)\n\nselect\n    child.geo_code\n\nfrom child\nleft join parent\n    on child.geo_code = parent.geo_code\n\nwhere parent.geo_code is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sdna_project.stg_lookup", "sql": " __dbt__cte__stg_lookup as (\nselect\n    unit_code as geo_code,\n    name as state,\n    centroid as centroid\n\nfrom dp_data_share_aws_to_az_replica.mapbox.mapbox_lookup_adm1\nwhere country = 'MX'\n)"}, {"id": "model.sdna_project.stg_mobility_data", "sql": " __dbt__cte__stg_mobility_data as (\nselect\n    geography as geo_code,\n    agg_day_period as agg_day,\n    activity_index_total as activity_index_total\n\nfrom dp_data_share_aws_to_az_replica.mapbox.mapbox_v0_2_daily_adm1_total\nwhere country = 'MX'\n)"}], "relation_name": null, "column_name": "geo_code"}, "test.sdna_project.not_null_mobility_adm1_mx_geo_code.c20309bd0c": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "geo_code", "model": "{% if config.get('where') %}(select * from {{ ref('mobility_adm1_mx') }} where {{config.get('where')}}) mobility_adm1_mx{% else %}{{ ref('mobility_adm1_mx') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.sdna_project.mobility_adm1_mx"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "on_schema_change": "ignore", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "DP_SDNA_US", "schema": "dbt_test__audit", "fqn": ["sdna_project", "schema_test", "not_null_mobility_adm1_mx_geo_code"], "unique_id": "test.sdna_project.not_null_mobility_adm1_mx_geo_code.c20309bd0c", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "schema_test/not_null_mobility_adm1_mx_geo_code.sql", "original_file_path": "models/sdna_mx/transformations/mobility/mobility.yml", "name": "not_null_mobility_adm1_mx_geo_code", "alias": "not_null_mobility_adm1_mx_geo_code", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["mobility_adm1_mx"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mobility/mobility.yml/schema_test/not_null_mobility_adm1_mx_geo_code.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1629326232, "compiled_sql": "\n    \n    \n\nselect *\nfrom DP_SDNA_MX.SDNA_MX_DEV.mobility_adm1_mx\nwhere geo_code is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "geo_code"}, "test.sdna_project.relationships_mobility_adm1_mx_geo_code__geo_code__ref_stg_lookup_.5bed1a886c": {"raw_sql": "{{ test_relationships(**_dbt_schema_test_kwargs) }}{{ config(alias=\"relationships_mobility_adm1_mx_ec21c04353155ce025c4ba2744a58e20\") }}", "test_metadata": {"name": "relationships", "kwargs": {"to": "ref('stg_lookup')", "field": "geo_code", "column_name": "geo_code", "model": "{% if config.get('where') %}(select * from {{ ref('mobility_adm1_mx') }} where {{config.get('where')}}) mobility_adm1_mx{% else %}{{ ref('mobility_adm1_mx') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.default__test_relationships"], "nodes": ["model.sdna_project.stg_lookup", "model.sdna_project.mobility_adm1_mx"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "relationships_mobility_adm1_mx_ec21c04353155ce025c4ba2744a58e20", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "on_schema_change": "ignore", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "DP_SDNA_US", "schema": "dbt_test__audit", "fqn": ["sdna_project", "schema_test", "relationships_mobility_adm1_mx_geo_code__geo_code__ref_stg_lookup_"], "unique_id": "test.sdna_project.relationships_mobility_adm1_mx_geo_code__geo_code__ref_stg_lookup_.5bed1a886c", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "schema_test/relationships_mobility_adm1_mx_ec21c04353155ce025c4ba2744a58e20.sql", "original_file_path": "models/sdna_mx/transformations/mobility/mobility.yml", "name": "relationships_mobility_adm1_mx_geo_code__geo_code__ref_stg_lookup_", "alias": "relationships_mobility_adm1_mx_ec21c04353155ce025c4ba2744a58e20", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["stg_lookup"], ["mobility_adm1_mx"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mobility/mobility.yml/schema_test/relationships_mobility_adm1_mx_ec21c04353155ce025c4ba2744a58e20.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_mobility_adm1_mx_ec21c04353155ce025c4ba2744a58e20"}, "created_at": 1629326232, "compiled_sql": "\n    \n    \n\nwith  __dbt__cte__stg_lookup as (\nselect\n    unit_code as geo_code,\n    name as state,\n    centroid as centroid\n\nfrom dp_data_share_aws_to_az_replica.mapbox.mapbox_lookup_adm1\nwhere country = 'MX'\n),child as (\n    select * from DP_SDNA_MX.SDNA_MX_DEV.mobility_adm1_mx\n    where geo_code is not null\n),\n\nparent as (\n    select * from __dbt__cte__stg_lookup\n)\n\nselect\n    child.geo_code\n\nfrom child\nleft join parent\n    on child.geo_code = parent.geo_code\n\nwhere parent.geo_code is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sdna_project.stg_lookup", "sql": " __dbt__cte__stg_lookup as (\nselect\n    unit_code as geo_code,\n    name as state,\n    centroid as centroid\n\nfrom dp_data_share_aws_to_az_replica.mapbox.mapbox_lookup_adm1\nwhere country = 'MX'\n)"}], "relation_name": null, "column_name": "geo_code"}, "test.sdna_project.not_null_mobility_adm1_mx_activity_index_total.514e6b3670": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "activity_index_total", "model": "{% if config.get('where') %}(select * from {{ ref('mobility_adm1_mx') }} where {{config.get('where')}}) mobility_adm1_mx{% else %}{{ ref('mobility_adm1_mx') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.sdna_project.mobility_adm1_mx"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "on_schema_change": "ignore", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "DP_SDNA_US", "schema": "dbt_test__audit", "fqn": ["sdna_project", "schema_test", "not_null_mobility_adm1_mx_activity_index_total"], "unique_id": "test.sdna_project.not_null_mobility_adm1_mx_activity_index_total.514e6b3670", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "schema_test/not_null_mobility_adm1_mx_activity_index_total.sql", "original_file_path": "models/sdna_mx/transformations/mobility/mobility.yml", "name": "not_null_mobility_adm1_mx_activity_index_total", "alias": "not_null_mobility_adm1_mx_activity_index_total", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["mobility_adm1_mx"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "/opt/airflow/dags/dbt/dbt/target/compiled/sdna_project/models/sdna_mx/transformations/mobility/mobility.yml/schema_test/not_null_mobility_adm1_mx_activity_index_total.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1629326232, "compiled_sql": "\n    \n    \n\nselect *\nfrom DP_SDNA_MX.SDNA_MX_DEV.mobility_adm1_mx\nwhere activity_index_total is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "activity_index_total"}}, "sources": {"source.sdna_project.store_sales.btg_fl_sales_cust_prod_v_extend": {"fqn": ["sdna_project", "walmart_data_infra", "store_sales", "btg_fl_sales_cust_prod_v_extend"], "database": "DP_SDNA_US", "schema": "store_sales_dev", "unique_id": "source.sdna_project.store_sales.btg_fl_sales_cust_prod_v_extend", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "models/walmart_data_infra/walmart_data_infra.yml", "original_file_path": "models/walmart_data_infra/walmart_data_infra.yml", "name": "btg_fl_sales_cust_prod_v_extend", "source_name": "store_sales", "source_description": "", "loader": "", "identifier": "btg_fl_sales_cust_prod_v_extend", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DP_SDNA_US.store_sales_dev.btg_fl_sales_cust_prod_v_extend", "created_at": 1629326232}, "source.sdna_project.store_sales.btg_fl_sales_cust_wk_prod_v_extend": {"fqn": ["sdna_project", "walmart_data_infra", "store_sales", "btg_fl_sales_cust_wk_prod_v_extend"], "database": "DP_SDNA_US", "schema": "store_sales_dev", "unique_id": "source.sdna_project.store_sales.btg_fl_sales_cust_wk_prod_v_extend", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "models/walmart_data_infra/walmart_data_infra.yml", "original_file_path": "models/walmart_data_infra/walmart_data_infra.yml", "name": "btg_fl_sales_cust_wk_prod_v_extend", "source_name": "store_sales", "source_description": "", "loader": "", "identifier": "btg_fl_sales_cust_wk_prod_v_extend", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DP_SDNA_US.store_sales_dev.btg_fl_sales_cust_wk_prod_v_extend", "created_at": 1629326232}, "source.sdna_project.store_sales.btg_pbc_sales_cust_prod_v_extend": {"fqn": ["sdna_project", "walmart_data_infra", "store_sales", "btg_pbc_sales_cust_prod_v_extend"], "database": "DP_SDNA_US", "schema": "store_sales_dev", "unique_id": "source.sdna_project.store_sales.btg_pbc_sales_cust_prod_v_extend", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "models/walmart_data_infra/walmart_data_infra.yml", "original_file_path": "models/walmart_data_infra/walmart_data_infra.yml", "name": "btg_pbc_sales_cust_prod_v_extend", "source_name": "store_sales", "source_description": "", "loader": "", "identifier": "btg_pbc_sales_cust_prod_v_extend", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DP_SDNA_US.store_sales_dev.btg_pbc_sales_cust_prod_v_extend", "created_at": 1629326232}, "source.sdna_project.store_sales.btg_pbc_sales_cust_wk_prod_v_extend": {"fqn": ["sdna_project", "walmart_data_infra", "store_sales", "btg_pbc_sales_cust_wk_prod_v_extend"], "database": "DP_SDNA_US", "schema": "store_sales_dev", "unique_id": "source.sdna_project.store_sales.btg_pbc_sales_cust_wk_prod_v_extend", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "models/walmart_data_infra/walmart_data_infra.yml", "original_file_path": "models/walmart_data_infra/walmart_data_infra.yml", "name": "btg_pbc_sales_cust_wk_prod_v_extend", "source_name": "store_sales", "source_description": "", "loader": "", "identifier": "btg_pbc_sales_cust_wk_prod_v_extend", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DP_SDNA_US.store_sales_dev.btg_pbc_sales_cust_wk_prod_v_extend", "created_at": 1629326232}, "source.sdna_project.store_sales.dx_fl_sales_cust_wk_prod_extend": {"fqn": ["sdna_project", "walmart_data_infra", "store_sales", "dx_fl_sales_cust_wk_prod_extend"], "database": "DP_SDNA_US", "schema": "store_sales_dev", "unique_id": "source.sdna_project.store_sales.dx_fl_sales_cust_wk_prod_extend", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "models/walmart_data_infra/walmart_data_infra.yml", "original_file_path": "models/walmart_data_infra/walmart_data_infra.yml", "name": "dx_fl_sales_cust_wk_prod_extend", "source_name": "store_sales", "source_description": "", "loader": "", "identifier": "dx_fl_sales_cust_wk_prod_extend", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DP_SDNA_US.store_sales_dev.dx_fl_sales_cust_wk_prod_extend", "created_at": 1629326232}, "source.sdna_project.store_sales.dx_pbc_sales_cust_wk_prod_extend": {"fqn": ["sdna_project", "walmart_data_infra", "store_sales", "dx_pbc_sales_cust_wk_prod_extend"], "database": "DP_SDNA_US", "schema": "store_sales_dev", "unique_id": "source.sdna_project.store_sales.dx_pbc_sales_cust_wk_prod_extend", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "models/walmart_data_infra/walmart_data_infra.yml", "original_file_path": "models/walmart_data_infra/walmart_data_infra.yml", "name": "dx_pbc_sales_cust_wk_prod_extend", "source_name": "store_sales", "source_description": "", "loader": "", "identifier": "dx_pbc_sales_cust_wk_prod_extend", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DP_SDNA_US.store_sales_dev.dx_pbc_sales_cust_wk_prod_extend", "created_at": 1629326232}, "source.sdna_project.store_sales.dx_retailer_trade_area": {"fqn": ["sdna_project", "walmart_data_infra", "store_sales", "dx_retailer_trade_area"], "database": "DP_SDNA_US", "schema": "store_sales_dev", "unique_id": "source.sdna_project.store_sales.dx_retailer_trade_area", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "models/walmart_data_infra/walmart_data_infra.yml", "original_file_path": "models/walmart_data_infra/walmart_data_infra.yml", "name": "dx_retailer_trade_area", "source_name": "store_sales", "source_description": "", "loader": "", "identifier": "dx_retailer_trade_area", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DP_SDNA_US.store_sales_dev.dx_retailer_trade_area", "created_at": 1629326232}}, "macros": {"macro.sdna_project.append_placekeys": {"unique_id": "macro.sdna_project.append_placekeys", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "macros/append_placekeys.sql", "original_file_path": "macros/append_placekeys.sql", "name": "append_placekeys", "macro_sql": "{% macro append_placekeys(tbl_in, tbl_out) %}\n\n    {% set query %}\n        CALL {{database}}.{{schema}}.APPEND_PLACEKEYS(\n          '{{ tbl_in }}',\n          (\n            SELECT object_construct(MAPPING.*)\n            FROM (\n              SELECT\n                'msa_id' AS PRIMARY_KEY,\n                'store_name' AS LOCATION_NAME,\n                'city' AS CITY,\n                'state' AS REGION,\n                'street_addr' AS STREET_ADDRESS,\n                'zipcode' AS POSTAL_CODE,\n                'LATITUDE' AS LATITUDE,\n                'LONGITUDE' AS LONGITUDE,\n                'false' AS strict_address_match,\n                'false' AS strict_name_match\n            ) AS MAPPING\n          ),\n          '{{ tbl_out }}', 'temp', 'get_placekeys_v', 1000\n        );\n    {% endset %}\n\n    {% do run_query(query) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.sdna_project.create_file_formats": {"unique_id": "macro.sdna_project.create_file_formats", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "macros/create_file_formats.sql", "original_file_path": "macros/create_file_formats.sql", "name": "create_file_formats", "macro_sql": "{% macro create_file_formats() %}\n    -- Creates or replaces file formats\n    CREATE OR REPLACE FILE FORMAT {{ database }}.{{ schema }}.btg_csv\n        TYPE = CSV\n        FIELD_DELIMITER = '|'\n        RECORD_DELIMITER = '\\n'\n        ENCODING = 'iso-8859-1'\n        TRIM_SPACE = TRUE\n        NULL_IF = ('NULL', 'null')\n        ESCAPE_UNENCLOSED_FIELD = NONE\n        EMPTY_FIELD_AS_NULL = TRUE\n        ERROR_ON_COLUMN_COUNT_MISMATCH=FALSE;\n\n    CREATE OR REPLACE FILE FORMAT {{ database }}.{{ schema }}.btg_csv_skip_header\n        TYPE = CSV\n        SKIP_HEADER = 1\n        FIELD_DELIMITER = '|'\n        RECORD_DELIMITER = '\\n'\n        ENCODING = 'iso-8859-1'\n        TRIM_SPACE = TRUE\n        NULL_IF = ('NULL', 'null')\n        ESCAPE_UNENCLOSED_FIELD = NONE\n        EMPTY_FIELD_AS_NULL = TRUE\n        ERROR_ON_COLUMN_COUNT_MISMATCH=FALSE;\n\n    CREATE OR REPLACE FILE FORMAT mvh_csv_skip_header_comma\n        TYPE = CSV\n        SKIP_HEADER = 1\n        FIELD_DELIMITER = ','\n        RECORD_DELIMITER = '\\n'\n        ENCODING = 'iso-8859-1'\n        TRIM_SPACE = TRUE\n        NULL_IF = ('NULL', 'null')\n        ESCAPE_UNENCLOSED_FIELD = NONE\n        EMPTY_FIELD_AS_NULL = TRUE\n        ERROR_ON_COLUMN_COUNT_MISMATCH=FALSE;\n\n\n    CREATE OR REPLACE FILE FORMAT {{ database }}.{{ schema }}.parquet\n        TYPE = PARQUET\n        TRIM_SPACE = TRUE\n        NULL_IF = ('NULL', 'null');\n\n    CREATE OR REPLACE FILE FORMAT {{ database }}.{{ schema }}.orc\n        TYPE = ORC\n        TRIM_SPACE = TRUE\n        NULL_IF = ('NULL', 'null');\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.sdna_project.external_stage": {"unique_id": "macro.sdna_project.external_stage", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "macros/from_external_stage_materialization.sql", "original_file_path": "macros/from_external_stage_materialization.sql", "name": "external_stage", "macro_sql": "{% macro external_stage(path='') %}\n    @{{ database }}.{{ schema }}.__STAGE_TOKEN__{{ path }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.sdna_project.materialization_from_external_stage_snowflake": {"unique_id": "macro.sdna_project.materialization_from_external_stage_snowflake", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "macros/from_external_stage_materialization.sql", "original_file_path": "macros/from_external_stage_materialization.sql", "name": "materialization_from_external_stage_snowflake", "macro_sql": "{% materialization from_external_stage, adapter='snowflake' -%}\n    -- set parameters\n    {%- set identifier = model['alias'] -%}\n    {%- set stage_name = config.get('stage_name', default=identifier ~ '_stage') -%}\n    {%- set truncate = config.get('truncate', default=True) -%}\n    {%- set file_format = config.get('file_format', default='type = csv field_delimiter = \\'|\\'') -%}\n    {%- set file_format_name = config.get('file_format_name') -%}\n    {%- set pattern = config.get('pattern') -%}\n    {%- set copy_transform = config.get('copy_transform', default=False) -%}\n\n    {% if 'PARQUET' in file_format_name.upper() or 'ORC' in file_format_name.upper() or 'PARQUET' in file_format.upper() or 'ORC' in file_format.upper() -%}\n        {%- set is_parquet_orc = True -%}\n    {% else -%}\n        {%- set is_parquet_orc = False -%}\n    {%- endif %}\n\n    {%- set old_relation = adapter.get_relation(schema=schema, database=database, identifier=identifier) -%}\n    {%- set target_relation = api.Relation.create(schema=schema, database=database, identifier=identifier, type='table') -%}\n    {%- set full_refresh_mode = (flags.FULL_REFRESH == True) -%}\n    {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n    {%- set should_drop = (full_refresh_mode or not exists_as_table) -%}\n    -- setup\n    {% if old_relation is none -%}\n        -- noop\n    {%- elif should_drop -%}\n        {{ adapter.drop_relation(old_relation) }}\n        {%- set old_relation = none -%}\n    {%- endif %}\n\n    -- build model\n    {{ run_hooks(pre_hooks, inside_transaction=False) }}\n    -- `BEGIN` happens here:\n    {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n    -- truncate target relation\n    {% if truncate -%}\n        {# -- Truncate the table #}\n        {%- call statement() -%}\n            TRUNCATE TABLE IF EXISTS {{ target_relation }}\n        {%- endcall -%}\n    {%- endif %}\n\n    {# Perform the main load operation using COPY INTO #}\n    {# See https://docs.snowflake.net/manuals/user-guide/data-load-considerations-load.html #}\n    {# See https://docs.snowflake.net/manuals/user-guide/data-load-transform.html #}\n\n    {%- call statement() -%}\n        SET last_updt_dt = CURRENT_TIMESTAMP();\n        SET current_session = CAST(CURRENT_SESSION() AS BIGINT)\n    {%- endcall -%}\n\n    {%- call statement('main') -%}\n        COPY INTO {{ target_relation }}\n        FROM {{ sql | replace('__STAGE_TOKEN__', stage_name)}}\n        file_format = ( {% if file_format_name -%} format_name = '{{ database }}.{{ schema }}.{{ file_format_name }}' {% else -%} {{ file_format }} {% endif %})\n        {% if pattern -%} pattern = '{{ pattern }}' {% endif %}\n        ON_ERROR = CONTINUE\n        {% if is_parquet_orc and not copy_transform -%} MATCH_BY_COLUMN_NAME = CASE_INSENSITIVE {%- endif %}\n    {% endcall %}\n\n    {% if not is_parquet_orc or not copy_transform -%}\n        {%- call statement() -%}\n            UPDATE {{ target_relation }}\n            SET last_updt_dt = $last_updt_dt\n        {%- endcall -%}\n    {%- endif %}\n\n    {{ run_hooks(post_hooks, inside_transaction=True) }}\n    -- `COMMIT` happens here\n    {{ adapter.commit() }}\n    {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n    {{ run_hooks(pre_hooks, inside_transaction=False) }}\n    -- `BEGIN` happens here:\n    {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n    {% if not is_parquet_orc -%}\n        {%- call statement() -%}\n            SET job_id = (SELECT TOP 1 QUERY_ID\n            FROM TABLE(INFORMATION_SCHEMA.QUERY_HISTORY_BY_SESSION(SESSION_ID => $current_session))\n            WHERE QUERY_TEXT LIKE 'COPY INTO%'\n            ORDER BY START_TIME DESC);\n\n            INSERT INTO SAVE_COPY_ERRORS\n            SELECT $job_id, '{{target_relation}}', validate_tbl.*,\n                   query_history_tbl.QUERY_TEXT, query_history_tbl.DATABASE_NAME, query_history_tbl.SCHEMA_NAME,\n                   query_history_tbl.USER_NAME, query_history_tbl.ROLE_NAME, query_history_tbl.WAREHOUSE_NAME,\n                   query_history_tbl.QUERY_TAG, query_history_tbl.START_TIME, query_history_tbl.END_TIME\n            FROM TABLE(validate({{ target_relation }}, job_id => $job_id)) AS validate_tbl\n            LEFT JOIN TABLE(information_schema.query_history()) AS query_history_tbl ON query_history_tbl.query_id = $job_id;\n        {%- endcall -%}\n    {%- endif %}\n\n    {{ run_hooks(post_hooks, inside_transaction=True) }}\n    -- `COMMIT` happens here\n    {{ adapter.commit() }}\n    {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n    -- Return the relations created in this materialization\n    {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.sdna_project.generate_schema_name": {"unique_id": "macro.sdna_project.generate_schema_name", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "macros/generate_schema_name.sql", "original_file_path": "macros/generate_schema_name.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.sdna_project.get_cols": {"unique_id": "macro.sdna_project.get_cols", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "macros/get_cols.sql", "original_file_path": "macros/get_cols.sql", "name": "get_cols", "macro_sql": "{% macro get_cols() %}\n\n    {%- set identifier = model['alias']|upper -%}\n\n    {% set query %}\n        SELECT 'src.$' || ROW_NUMBER() OVER(ORDER BY ORDINAL_POSITION) AS COLS\n        FROM {{ database }}.INFORMATION_SCHEMA.COLUMNS\n        WHERE TABLE_SCHEMA = '{{ schema }}' AND TABLE_NAME = '{{ identifier }}' AND COLUMN_NAME != 'LAST_UPDT_DT'\n        ORDER BY ORDINAL_POSITION\n    {% endset %}\n\n    {% set results = run_query(query) %}\n\n    {% if execute %}\n    {% set results_list = results.columns[0].values() %}\n    {% else %}\n    {% set results_list = [] %}\n    {% endif %}\n    {{ return(results_list) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.sdna_project.get_cols_experian": {"unique_id": "macro.sdna_project.get_cols_experian", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "macros/get_cols_experian.sql", "original_file_path": "macros/get_cols_experian.sql", "name": "get_cols_experian", "macro_sql": "{% macro get_cols_experian() %}\n\n    {%- set identifier = model['alias']|upper -%}\n\n    {% set query %}\n        WITH experian_cols AS\n        (\n            SELECT COLUMN_NAME\n            FROM DP_DATA_SHARE_AWS_TO_AZ_REPLICA.INFORMATION_SCHEMA.COLUMNS\n            WHERE TABLE_NAME = 'MVH_CV_LIVING_UNIT_X261'\n        )\n        SELECT\n            CASE WHEN CDP_COL LIKE 'FILLER%' OR experian_cols.COLUMN_NAME IS NULL THEN NULL ELSE CDP_COL END AS CDP_COL,\n            EXP_CV_STG\n        FROM {{ database }}.{{ schema }}.EXPERIAN_MAPPING_X258 AS map\n        LEFT JOIN experian_cols ON map.CDP_COL = experian_cols.COLUMN_NAME\n        WHERE EXP_CV_STG != ''\n    {% endset %}\n\n    {% set results = run_query(query) %}\n\n    {{ return(results) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.sdna_project.get_cols_field_column_mapping": {"unique_id": "macro.sdna_project.get_cols_field_column_mapping", "package_name": "sdna_project", "root_path": "/opt/airflow/dags/dbt/dbt", "path": "macros/get_cols_field_column_mapping.sql", "original_file_path": "macros/get_cols_field_column_mapping.sql", "name": "get_cols_field_column_mapping", "macro_sql": "{% macro get_cols_field_column_mapping(table_name) %}\n\n    {%- set identifier = model['alias']|upper -%}\n\n    {% set query %}\n        SELECT\n            FIELD_NAME,\n            DATA_TYPE,\n            COLUMN_NAME\n        FROM {{ database }}.{{ schema }}.FIELD_COLUMN_MAPPING\n        WHERE\n            UPPER(TABLE_NAME) = UPPER('{{ table_name }}')\n            AND UPPER(COLUMN_NAME) != 'LAST_UPDT_DT'\n        ORDER BY ORDINAL_POSITION\n    {% endset %}\n\n    {% set results = run_query(query) %}\n\n    {{ return(results) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.snowflake__get_catalog": {"unique_id": "macro.dbt_snowflake.snowflake__get_catalog", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "snowflake__get_catalog", "macro_sql": "{% macro snowflake__get_catalog(information_schema, schemas) -%}\n  {% set query %}\n      with tables as (\n\n          select\n              table_catalog as \"table_database\",\n              table_schema as \"table_schema\",\n              table_name as \"table_name\",\n              table_type as \"table_type\",\n              comment as \"table_comment\",\n\n              -- note: this is the _role_ that owns the table\n              table_owner as \"table_owner\",\n\n              'Clustering Key' as \"stats:clustering_key:label\",\n              clustering_key as \"stats:clustering_key:value\",\n              'The key used to cluster this table' as \"stats:clustering_key:description\",\n              (clustering_key is not null) as \"stats:clustering_key:include\",\n\n              'Row Count' as \"stats:row_count:label\",\n              row_count as \"stats:row_count:value\",\n              'An approximate count of rows in this table' as \"stats:row_count:description\",\n              (row_count is not null) as \"stats:row_count:include\",\n\n              'Approximate Size' as \"stats:bytes:label\",\n              bytes as \"stats:bytes:value\",\n              'Approximate size of the table as reported by Snowflake' as \"stats:bytes:description\",\n              (bytes is not null) as \"stats:bytes:include\",\n\n              'Last Modified' as \"stats:last_modified:label\",\n              to_varchar(convert_timezone('UTC', last_altered), 'yyyy-mm-dd HH24:MI'||'UTC') as \"stats:last_modified:value\",\n              'The timestamp for last update/change' as \"stats:last_modified:description\",\n              (last_altered is not null and table_type='BASE TABLE') as \"stats:last_modified:include\"\n\n          from {{ information_schema }}.tables\n\n      ),\n\n      columns as (\n\n          select\n              table_catalog as \"table_database\",\n              table_schema as \"table_schema\",\n              table_name as \"table_name\",\n\n              column_name as \"column_name\",\n              ordinal_position as \"column_index\",\n              data_type as \"column_type\",\n              comment as \"column_comment\"\n\n          from {{ information_schema }}.columns\n      )\n\n      select *\n      from tables\n      join columns using (\"table_database\", \"table_schema\", \"table_name\")\n      where (\n        {%- for schema in schemas -%}\n          upper(\"table_schema\") = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n      )\n      order by \"column_index\"\n    {%- endset -%}\n\n  {{ return(run_query(query)) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.snowflake__create_table_as": {"unique_id": "macro.dbt_snowflake.snowflake__create_table_as", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__create_table_as", "macro_sql": "{% macro snowflake__create_table_as(temporary, relation, sql) -%}\n  {%- set transient = config.get('transient', default=true) -%}\n  {%- set cluster_by_keys = config.get('cluster_by', default=none) -%}\n  {%- set enable_automatic_clustering = config.get('automatic_clustering', default=false) -%}\n  {%- set copy_grants = config.get('copy_grants', default=false) -%}\n\n  {%- if cluster_by_keys is not none and cluster_by_keys is string -%}\n    {%- set cluster_by_keys = [cluster_by_keys] -%}\n  {%- endif -%}\n  {%- if cluster_by_keys is not none -%}\n    {%- set cluster_by_string = cluster_by_keys|join(\", \")-%}\n  {% else %}\n    {%- set cluster_by_string = none -%}\n  {%- endif -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n      create or replace {% if temporary -%}\n        temporary\n      {%- elif transient -%}\n        transient\n      {%- endif %} table {{ relation }} {% if copy_grants and not temporary -%} copy grants {%- endif %} as\n      (\n        {%- if cluster_by_string is not none -%}\n          select * from(\n            {{ sql }}\n            ) order by ({{ cluster_by_string }})\n        {%- else -%}\n          {{ sql }}\n        {%- endif %}\n      );\n    {% if cluster_by_string is not none and not temporary -%}\n      alter table {{relation}} cluster by ({{cluster_by_string}});\n    {%- endif -%}\n    {% if enable_automatic_clustering and cluster_by_string is not none and not temporary  -%}\n      alter table {{relation}} resume recluster;\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.snowflake__create_view_as": {"unique_id": "macro.dbt_snowflake.snowflake__create_view_as", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__create_view_as", "macro_sql": "{% macro snowflake__create_view_as(relation, sql) -%}\n  {%- set secure = config.get('secure', default=false) -%}\n  {%- set copy_grants = config.get('copy_grants', default=false) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create or replace {% if secure -%}\n    secure\n  {%- endif %} view {{ relation }} {% if copy_grants -%} copy grants {%- endif %} as (\n    {{ sql }}\n  );\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.snowflake__get_columns_in_relation": {"unique_id": "macro.dbt_snowflake.snowflake__get_columns_in_relation", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__get_columns_in_relation", "macro_sql": "{% macro snowflake__get_columns_in_relation(relation) -%}\n  {%- set sql -%}\n    describe table {{ relation }}\n  {%- endset -%}\n  {%- set result = run_query(sql) -%}\n\n  {% set maximum = 10000 %}\n  {% if (result | length) >= maximum %}\n    {% set msg %}\n      Too many columns in relation {{ relation }}! dbt can only get\n      information about relations with fewer than {{ maximum }} columns.\n    {% endset %}\n    {% do exceptions.raise_compiler_error(msg) %}\n  {% endif %}\n\n  {% set columns = [] %}\n  {% for row in result %}\n    {% do columns.append(api.Column.from_description(row['name'], row['type'])) %}\n  {% endfor %}\n  {% do return(columns) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.snowflake__list_schemas": {"unique_id": "macro.dbt_snowflake.snowflake__list_schemas", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__list_schemas", "macro_sql": "{% macro snowflake__list_schemas(database) -%}\n  {# 10k limit from here: https://docs.snowflake.net/manuals/sql-reference/sql/show-schemas.html#usage-notes #}\n  {% set maximum = 10000 %}\n  {% set sql -%}\n    show terse schemas in database {{ database }}\n    limit {{ maximum }}\n  {%- endset %}\n  {% set result = run_query(sql) %}\n  {% if (result | length) >= maximum %}\n    {% set msg %}\n      Too many schemas in database {{ database }}! dbt can only get\n      information about databases with fewer than {{ maximum }} schemas.\n    {% endset %}\n    {% do exceptions.raise_compiler_error(msg) %}\n  {% endif %}\n  {{ return(result) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.snowflake__list_relations_without_caching": {"unique_id": "macro.dbt_snowflake.snowflake__list_relations_without_caching", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__list_relations_without_caching", "macro_sql": "{% macro snowflake__list_relations_without_caching(schema_relation) %}\n  {%- set sql -%}\n    show terse objects in {{ schema_relation }}\n  {%- endset -%}\n\n  {%- set result = run_query(sql) -%}\n  {% set maximum = 10000 %}\n  {% if (result | length) >= maximum %}\n    {% set msg %}\n      Too many schemas in schema  {{ schema_relation }}! dbt can only get\n      information about schemas with fewer than {{ maximum }} objects.\n    {% endset %}\n    {% do exceptions.raise_compiler_error(msg) %}\n  {% endif %}\n  {%- do return(result) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.snowflake__check_schema_exists": {"unique_id": "macro.dbt_snowflake.snowflake__check_schema_exists", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__check_schema_exists", "macro_sql": "{% macro snowflake__check_schema_exists(information_schema, schema) -%}\n  {% call statement('check_schema_exists', fetch_result=True) -%}\n        select count(*)\n        from {{ information_schema }}.schemata\n        where upper(schema_name) = upper('{{ schema }}')\n            and upper(catalog_name) = upper('{{ information_schema.database }}')\n  {%- endcall %}\n  {{ return(load_result('check_schema_exists').table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.snowflake__current_timestamp": {"unique_id": "macro.dbt_snowflake.snowflake__current_timestamp", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__current_timestamp", "macro_sql": "{% macro snowflake__current_timestamp() -%}\n  convert_timezone('UTC', current_timestamp())\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.snowflake__snapshot_string_as_time": {"unique_id": "macro.dbt_snowflake.snowflake__snapshot_string_as_time", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__snapshot_string_as_time", "macro_sql": "{% macro snowflake__snapshot_string_as_time(timestamp) -%}\n    {%- set result = \"to_timestamp_ntz('\" ~ timestamp ~ \"')\" -%}\n    {{ return(result) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.snowflake__snapshot_get_time": {"unique_id": "macro.dbt_snowflake.snowflake__snapshot_get_time", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__snapshot_get_time", "macro_sql": "{% macro snowflake__snapshot_get_time() -%}\n  to_timestamp_ntz({{ current_timestamp() }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.snowflake__rename_relation": {"unique_id": "macro.dbt_snowflake.snowflake__rename_relation", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__rename_relation", "macro_sql": "{% macro snowflake__rename_relation(from_relation, to_relation) -%}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ to_relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.snowflake__alter_column_type": {"unique_id": "macro.dbt_snowflake.snowflake__alter_column_type", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__alter_column_type", "macro_sql": "{% macro snowflake__alter_column_type(relation, column_name, new_column_type) -%}\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} alter {{ adapter.quote(column_name) }} set data type {{ new_column_type }};\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.snowflake__alter_relation_comment": {"unique_id": "macro.dbt_snowflake.snowflake__alter_relation_comment", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__alter_relation_comment", "macro_sql": "{% macro snowflake__alter_relation_comment(relation, relation_comment) -%}\n  comment on {{ relation.type }} {{ relation }} IS $${{ relation_comment | replace('$', '[$]') }}$$;\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.snowflake__alter_column_comment": {"unique_id": "macro.dbt_snowflake.snowflake__alter_column_comment", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__alter_column_comment", "macro_sql": "{% macro snowflake__alter_column_comment(relation, column_dict) -%}\n    {% set existing_columns = adapter.get_columns_in_relation(relation) | map(attribute=\"name\") | list %}\n    alter {{ relation.type }} {{ relation }} alter\n    {% for column_name in column_dict if (column_name in existing_columns) or (column_name|upper in existing_columns) %}\n        {{ adapter.quote(column_name) if column_dict[column_name]['quote'] else column_name }} COMMENT $${{ column_dict[column_name]['description'] | replace('$', '[$]') }}$$ {{ ',' if not loop.last else ';' }}\n    {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.get_current_query_tag": {"unique_id": "macro.dbt_snowflake.get_current_query_tag", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "get_current_query_tag", "macro_sql": "{% macro get_current_query_tag() -%}\n  {{ return(run_query(\"show parameters like 'query_tag' in session\").rows[0]['value']) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.set_query_tag": {"unique_id": "macro.dbt_snowflake.set_query_tag", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "set_query_tag", "macro_sql": "{% macro set_query_tag() -%}\n  {% set new_query_tag = config.get('query_tag') %}\n  {% if new_query_tag %}\n    {% set original_query_tag = get_current_query_tag() %}\n    {{ log(\"Setting query_tag to '\" ~ new_query_tag ~ \"'. Will reset to '\" ~ original_query_tag ~ \"' after materialization.\") }}\n    {% do run_query(\"alter session set query_tag = '{}'\".format(new_query_tag)) %}\n    {{ return(original_query_tag)}}\n  {% endif %}\n  {{ return(none)}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.get_current_query_tag", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.unset_query_tag": {"unique_id": "macro.dbt_snowflake.unset_query_tag", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "unset_query_tag", "macro_sql": "{% macro unset_query_tag(original_query_tag) -%}\n  {% set new_query_tag = config.get('query_tag') %}\n  {% if new_query_tag %}\n    {% if original_query_tag %}\n      {{ log(\"Resetting query_tag to '\" ~ original_query_tag ~ \"'.\") }}\n      {% do run_query(\"alter session set query_tag = '{}'\".format(original_query_tag)) %}\n    {% else %}\n      {{ log(\"No original query_tag, unsetting parameter.\") }}\n      {% do run_query(\"alter session unset query_tag\") %}\n    {% endif %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.snowflake__alter_relation_add_remove_columns": {"unique_id": "macro.dbt_snowflake.snowflake__alter_relation_add_remove_columns", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__alter_relation_add_remove_columns", "macro_sql": "{% macro snowflake__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n  \n  {% if add_columns %}\n    \n    {% set sql -%}\n       alter {{ relation.type }} {{ relation }} add column\n          {% for column in add_columns %}\n            {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n          {% endfor %}\n    {%- endset -%}\n\n    {% do run_query(sql) %}\n\n  {% endif %}\n\n  {% if remove_columns %}\n  \n    {% set sql -%}\n        alter {{ relation.type }} {{ relation }} drop column\n            {% for column in remove_columns %}\n                {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n    {%- endset -%}\n    \n    {% do run_query(sql) %}\n    \n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.snowflake_dml_explicit_transaction": {"unique_id": "macro.dbt_snowflake.snowflake_dml_explicit_transaction", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake_dml_explicit_transaction", "macro_sql": "{% macro snowflake_dml_explicit_transaction(dml) %}\n  {#\n    Use this macro to wrap all INSERT, MERGE, UPDATE, DELETE, and TRUNCATE \n    statements before passing them into run_query(), or calling in the 'main' statement\n    of a materialization\n  #}\n  {% set dml_transaction -%}\n    begin;\n    {{ dml }};\n    commit;\n  {%- endset %}\n  \n  {% do return(dml_transaction) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.snowflake__truncate_relation": {"unique_id": "macro.dbt_snowflake.snowflake__truncate_relation", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__truncate_relation", "macro_sql": "{% macro snowflake__truncate_relation(relation) -%}\n  {% set truncate_dml %}\n    truncate table {{ relation }}\n  {% endset %}\n  {% call statement('truncate_relation') -%}\n    {{ snowflake_dml_explicit_transaction(truncate_dml) }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy": {"unique_id": "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "name": "dbt_snowflake_validate_get_incremental_strategy", "macro_sql": "{% macro dbt_snowflake_validate_get_incremental_strategy(config) %}\n  {#-- Find and validate the incremental strategy #}\n  {%- set strategy = config.get(\"incremental_strategy\", default=\"merge\") -%}\n\n  {% set invalid_strategy_msg -%}\n    Invalid incremental strategy provided: {{ strategy }}\n    Expected one of: 'merge', 'delete+insert'\n  {%- endset %}\n  {% if strategy not in ['merge', 'delete+insert'] %}\n    {% do exceptions.raise_compiler_error(invalid_strategy_msg) %}\n  {% endif %}\n\n  {% do return(strategy) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql": {"unique_id": "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "name": "dbt_snowflake_get_incremental_sql", "macro_sql": "{% macro dbt_snowflake_get_incremental_sql(strategy, tmp_relation, target_relation, unique_key, dest_columns) %}\n  {% if strategy == 'merge' %}\n    {% do return(get_merge_sql(target_relation, tmp_relation, unique_key, dest_columns)) %}\n  {% elif strategy == 'delete+insert' %}\n    {% do return(get_delete_insert_merge_sql(target_relation, tmp_relation, unique_key, dest_columns)) %}\n  {% else %}\n    {% do exceptions.raise_compiler_error('invalid strategy: ' ~ strategy) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_merge_sql", "macro.dbt.get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.materialization_incremental_snowflake": {"unique_id": "macro.dbt_snowflake.materialization_incremental_snowflake", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "name": "materialization_incremental_snowflake", "macro_sql": "{% materialization incremental, adapter='snowflake' -%}\n   \n  {% set original_query_tag = set_query_tag() %}\n\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {% set target_relation = this %}\n  {% set existing_relation = load_relation(this) %}\n  {% set tmp_relation = make_temp_relation(this) %}\n\n  {#-- Validate early so we don't run SQL if the strategy is invalid --#}\n  {% set strategy = dbt_snowflake_validate_get_incremental_strategy(config) -%}\n  {% set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {% if existing_relation is none %}\n    {% set build_sql = create_table_as(False, target_relation, sql) %}\n  \n  {% elif existing_relation.is_view %}\n    {#-- Can't overwrite a view with a table - we must drop --#}\n    {{ log(\"Dropping relation \" ~ target_relation ~ \" because it is a view and this model is a table.\") }}\n    {% do adapter.drop_relation(existing_relation) %}\n    {% set build_sql = create_table_as(False, target_relation, sql) %}\n  \n  {% elif full_refresh_mode %}\n    {% set build_sql = create_table_as(False, target_relation, sql) %}\n  \n  {% else %}\n    {% do run_query(create_table_as(True, tmp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n           from_relation=tmp_relation,\n           to_relation=target_relation) %}\n    {% do process_schema_changes(on_schema_change, tmp_relation, existing_relation) %}\n    {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% set build_sql = dbt_snowflake_get_incremental_sql(strategy, tmp_relation, target_relation, unique_key, dest_columns) %}\n  \n  {% endif %}\n\n  {%- call statement('main') -%}\n    {{ build_sql }}\n  {%- endcall -%}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% set target_relation = target_relation.incorporate(type='table') %}\n  {% do persist_docs(target_relation, model) %}\n\n  {% do unset_query_tag(original_query_tag) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.snowflake__load_csv_rows": {"unique_id": "macro.dbt_snowflake.snowflake__load_csv_rows", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "name": "snowflake__load_csv_rows", "macro_sql": "{% macro snowflake__load_csv_rows(model, agate_table) %}\n    {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n    {% set bindings = [] %}\n\n    {% set statements = [] %}\n\n    {% for chunk in agate_table.rows | batch(batch_size) %}\n        {% set bindings = [] %}\n\n        {% for row in chunk %}\n            {% do bindings.extend(row) %}\n        {% endfor %}\n\n        {% set sql %}\n            insert into {{ this.render() }} ({{ cols_sql }}) values\n            {% for row in chunk -%}\n                ({%- for column in agate_table.column_names -%}\n                    %s\n                    {%- if not loop.last%},{%- endif %}\n                {%- endfor -%})\n                {%- if not loop.last%},{%- endif %}\n            {%- endfor %}\n        {% endset %}\n\n        {% do adapter.add_query('BEGIN', auto_begin=False) %}\n        {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n        {% do adapter.add_query('COMMIT', auto_begin=False) %}\n\n        {% if loop.index0 == 0 %}\n            {% do statements.append(sql) %}\n        {% endif %}\n    {% endfor %}\n\n    {# Return SQL so we can render it out into the compiled files #}\n    {{ return(statements[0]) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_seed_column_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.snowflake__get_merge_sql": {"unique_id": "macro.dbt_snowflake.snowflake__get_merge_sql", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/materializations/merge.sql", "original_file_path": "macros/materializations/merge.sql", "name": "snowflake__get_merge_sql", "macro_sql": "{% macro snowflake__get_merge_sql(target, source_sql, unique_key, dest_columns, predicates) -%}\n\n    {#\n       Workaround for Snowflake not being happy with a merge on a constant-false predicate.\n       When no unique_key is provided, this macro will do a regular insert. If a unique_key\n       is provided, then this macro will do a proper merge instead.\n    #}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute='name')) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {%- set dml -%}\n    {%- if unique_key is none -%}\n\n        {{ sql_header if sql_header is not none }}\n\n        insert into {{ target }} ({{ dest_cols_csv }})\n        (\n            select {{ dest_cols_csv }}\n            from {{ source_sql }}\n        )\n\n    {%- else -%}\n\n        {{ default__get_merge_sql(target, source_sql, unique_key, dest_columns, predicates) }}\n\n    {%- endif -%}\n    {%- endset -%}\n    \n    {% do return(snowflake_dml_explicit_transaction(dml)) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt.default__get_merge_sql", "macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.snowflake__get_delete_insert_merge_sql": {"unique_id": "macro.dbt_snowflake.snowflake__get_delete_insert_merge_sql", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/materializations/merge.sql", "original_file_path": "macros/materializations/merge.sql", "name": "snowflake__get_delete_insert_merge_sql", "macro_sql": "{% macro snowflake__get_delete_insert_merge_sql(target, source, unique_key, dest_columns) %}\n    {% set dml = default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns) %}\n    {% do return(snowflake_dml_explicit_transaction(dml)) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql", "macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.snowflake__snapshot_merge_sql": {"unique_id": "macro.dbt_snowflake.snowflake__snapshot_merge_sql", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/materializations/merge.sql", "original_file_path": "macros/materializations/merge.sql", "name": "snowflake__snapshot_merge_sql", "macro_sql": "{% macro snowflake__snapshot_merge_sql(target, source, insert_cols) %}\n    {% set dml = default__snapshot_merge_sql(target, source, insert_cols) %}\n    {% do return(snowflake_dml_explicit_transaction(dml)) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_merge_sql", "macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.materialization_table_snowflake": {"unique_id": "macro.dbt_snowflake.materialization_table_snowflake", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/materializations/table.sql", "original_file_path": "macros/materializations/table.sql", "name": "materialization_table_snowflake", "macro_sql": "{% materialization table, adapter='snowflake' %}\n\n  {% set original_query_tag = set_query_tag() %}\n\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier,\n                                                schema=schema,\n                                                database=database, type='table') -%}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {#-- Drop the relation if it was a view to \"convert\" it in a table. This may lead to\n    -- downtime, but it should be a relatively infrequent occurrence  #}\n  {% if old_relation is not none and not old_relation.is_table %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ drop_relation_if_exists(old_relation) }}\n  {% endif %}\n\n  --build model\n  {% call statement('main') -%}\n    {{ create_table_as(false, target_relation, sql) }}\n  {%- endcall %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% do unset_query_tag(original_query_tag) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt_snowflake.materialization_view_snowflake": {"unique_id": "macro.dbt_snowflake.materialization_view_snowflake", "package_name": "dbt_snowflake", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/snowflake", "path": "macros/materializations/view.sql", "original_file_path": "macros/materializations/view.sql", "name": "materialization_view_snowflake", "macro_sql": "{% materialization view, adapter='snowflake' -%}\n\n    {% set original_query_tag = set_query_tag() %}\n    {% set to_return = create_or_replace_view() %}\n\n    {% set target_relation = this.incorporate(type='view') %}\n    {% do persist_docs(target_relation, model, for_columns=false) %}\n\n    {% do return(to_return) %}\n\n    {% do unset_query_tag(original_query_tag) %}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.statement": {"unique_id": "macro.dbt.statement", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/core.sql", "original_file_path": "macros/core.sql", "name": "statement", "macro_sql": "{% macro statement(name=None, fetch_result=False, auto_begin=True) -%}\n  {%- if execute: -%}\n    {%- set sql = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n      {{ write(sql) }}\n    {%- endif -%}\n\n    {%- set res, table = adapter.execute(sql, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.noop_statement": {"unique_id": "macro.dbt.noop_statement", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/core.sql", "original_file_path": "macros/core.sql", "name": "noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.get_test_sql": {"unique_id": "macro.dbt.get_test_sql", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/test.sql", "original_file_path": "macros/materializations/test.sql", "name": "get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__get_test_sql": {"unique_id": "macro.dbt.default__get_test_sql", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/test.sql", "original_file_path": "macros/materializations/test.sql", "name": "default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.materialization_test_default": {"unique_id": "macro.dbt.materialization_test_default", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/test.sql", "original_file_path": "macros/materializations/test.sql", "name": "materialization_test_default", "macro_sql": "\n\n{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type='table') -%} %}\n    \n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n    \n    {% call statement(auto_begin=True) %}\n        {{ create_table_as(False, target_relation, sql) }}\n    {% endcall %}\n    \n    {% do relations.append(target_relation) %}\n  \n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n    \n    {{ adapter.commit() }}\n  \n  {% else %}\n\n      {% set main_sql = sql %}\n  \n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n  \n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.run_hooks": {"unique_id": "macro.dbt.run_hooks", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.column_list": {"unique_id": "macro.dbt.column_list", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "column_list", "macro_sql": "{% macro column_list(columns) %}\n  {%- for col in columns %}\n    {{ col.name }} {% if not loop.last %},{% endif %}\n  {% endfor -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.column_list_for_create_table": {"unique_id": "macro.dbt.column_list_for_create_table", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "column_list_for_create_table", "macro_sql": "{% macro column_list_for_create_table(columns) %}\n  {%- for col in columns %}\n    {{ col.name }} {{ col.data_type }} {%- if not loop.last %},{% endif %}\n  {% endfor -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.make_hook_config": {"unique_id": "macro.dbt.make_hook_config", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.before_begin": {"unique_id": "macro.dbt.before_begin", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.in_transaction": {"unique_id": "macro.dbt.in_transaction", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.after_commit": {"unique_id": "macro.dbt.after_commit", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.drop_relation_if_exists": {"unique_id": "macro.dbt.drop_relation_if_exists", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.load_relation": {"unique_id": "macro.dbt.load_relation", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "load_relation", "macro_sql": "{% macro load_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.should_full_refresh": {"unique_id": "macro.dbt.should_full_refresh", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.should_store_failures": {"unique_id": "macro.dbt.should_store_failures", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.strategy_dispatch": {"unique_id": "macro.dbt.strategy_dispatch", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.snapshot_hash_arguments": {"unique_id": "macro.dbt.snapshot_hash_arguments", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments')(args) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__snapshot_hash_arguments": {"unique_id": "macro.dbt.default__snapshot_hash_arguments", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.snapshot_get_time": {"unique_id": "macro.dbt.snapshot_get_time", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_get_time", "macro_sql": "{% macro snapshot_get_time() -%}\n  {{ adapter.dispatch('snapshot_get_time')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__snapshot_get_time": {"unique_id": "macro.dbt.default__snapshot_get_time", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() -%}\n  {{ current_timestamp() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.snapshot_timestamp_strategy": {"unique_id": "macro.dbt.snapshot_timestamp_strategy", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/fishtown-analytics/dbt/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.snapshot_string_as_time": {"unique_id": "macro.dbt.snapshot_string_as_time", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time')(timestamp) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__snapshot_string_as_time": {"unique_id": "macro.dbt.default__snapshot_string_as_time", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.snapshot_check_all_get_existing_columns": {"unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists) -%}\n    {%- set query_columns = get_columns_in_query(node['compiled_sql']) -%}\n    {%- if not target_exists -%}\n        {# no table yet -> return whatever the query does #}\n        {{ return([false, query_columns]) }}\n    {%- endif -%}\n    {# handle any schema changes #}\n    {%- set target_table = node.get('alias', node.get('name')) -%}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=target_table) -%}\n    {%- set existing_cols = get_columns_in_query('select * from ' ~ target_relation) -%}\n    {%- set ns = namespace() -%} {# handle for-loop scoping with a namespace #}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(col) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return([ns.column_added, intersection]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.snapshot_check_strategy": {"unique_id": "macro.dbt.snapshot_check_strategy", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    \n    {% set select_current_time -%}\n        select {{ snapshot_get_time() }} as snapshot_start\n    {%- endset %}\n\n    {#-- don't access the column by name, to avoid dealing with casing issues on snowflake #}\n    {%- set now = run_query(select_current_time)[0][0] -%}\n    {% if now is none or now is undefined -%}\n        {%- do exceptions.raise_compiler_error('Could not get a snapshot start time from the database') -%}\n    {%- endif %}\n    {% set updated_at = config.get('updated_at', snapshot_string_as_time(now)) %}\n\n    {% set column_added = false %}\n\n    {% if check_cols_config == 'all' %}\n        {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists) %}\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {% set check_cols = check_cols_config %}\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        TRUE\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.run_query", "macro.dbt.snapshot_string_as_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.snapshot_merge_sql": {"unique_id": "macro.dbt.snapshot_merge_sql", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot/snapshot_merge.sql", "name": "snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql')(target, source, insert_cols) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__snapshot_merge_sql": {"unique_id": "macro.dbt.default__snapshot_merge_sql", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot/snapshot_merge.sql", "name": "default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.create_columns": {"unique_id": "macro.dbt.create_columns", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns')(relation, columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__create_columns": {"unique_id": "macro.dbt.default__create_columns", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.post_snapshot": {"unique_id": "macro.dbt.post_snapshot", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot')(staging_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__post_snapshot": {"unique_id": "macro.dbt.default__post_snapshot", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.snapshot_staging_table": {"unique_id": "macro.dbt.snapshot_staging_table", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select \n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n    \n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n    \n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.build_snapshot_table": {"unique_id": "macro.dbt.build_snapshot_table", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.get_or_create_relation": {"unique_id": "macro.dbt.get_or_create_relation", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.build_snapshot_staging_table": {"unique_id": "macro.dbt.build_snapshot_staging_table", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set tmp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, tmp_relation, select) }}\n    {% endcall %}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.materialization_snapshot_default": {"unique_id": "macro.dbt.materialization_snapshot_default", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n\n  {% if not adapter.check_schema_exists(model.database, model.schema) %}\n    {% do create_schema(model.database, model.schema) %}\n  {% endif %}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_sql']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_schema", "macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.materialization_table_default": {"unique_id": "macro.dbt.materialization_table_default", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/table/table.sql", "original_file_path": "macros/materializations/table/table.sql", "name": "materialization_table_default", "macro_sql": "{% materialization table, default %}\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type='table') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema,\n                                                      database=database,\n                                                      type='table') -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                   schema=schema,\n                                                                   database=database) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type=backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                             schema=schema,\n                                                             database=database) -%}\n\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ create_table_as(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if old_relation is not none %}\n      {{ adapter.rename_relation(old_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.create_indexes", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.handle_existing_table": {"unique_id": "macro.dbt.handle_existing_table", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/view/create_or_replace_view.sql", "name": "handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', macro_namespace = 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__handle_existing_table": {"unique_id": "macro.dbt.default__handle_existing_table", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/view/create_or_replace_view.sql", "name": "default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.create_or_replace_view": {"unique_id": "macro.dbt.create_or_replace_view", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/view/create_or_replace_view.sql", "name": "create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ create_view_as(target_relation, sql) }}\n  {%- endcall %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.materialization_view_default": {"unique_id": "macro.dbt.materialization_view_default", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/view/view.sql", "original_file_path": "macros/materializations/view/view.sql", "name": "materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier, schema=schema, database=database,\n                                                type='view') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema, database=database, type='view') -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                   schema=schema,\n                                                                   database=database) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"old_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the old_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the old_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema, database=database,\n                                                type=backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                             schema=schema,\n                                                             database=database) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ create_view_as(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if old_relation is not none %}\n    {{ adapter.rename_relation(old_relation, backup_relation) }}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_view_as", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.get_merge_sql": {"unique_id": "macro.dbt.get_merge_sql", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, predicates=none) -%}\n  {{ adapter.dispatch('get_merge_sql')(target, source, unique_key, dest_columns, predicates) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.get_delete_insert_merge_sql": {"unique_id": "macro.dbt.get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql')(target, source, unique_key, dest_columns) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__get_merge_sql": {"unique_id": "macro.dbt.default__get_merge_sql", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, predicates) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set update_columns = config.get('merge_update_columns', default = dest_columns | map(attribute=\"quoted\") | list) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% set unique_key_match %}\n            DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n        {% endset %}\n        {% do predicates.append(unique_key_match) %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{ predicates | join(' and ') }}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.get_quoted_csv": {"unique_id": "macro.dbt.get_quoted_csv", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.common_get_delete_insert_merge_sql": {"unique_id": "macro.dbt.common_get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "common_get_delete_insert_merge_sql", "macro_sql": "{% macro common_get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key is not none %}\n    delete from {{ target }}\n    where ({{ unique_key }}) in (\n        select ({{ unique_key }})\n        from {{ source }}\n    );\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__get_delete_insert_merge_sql": {"unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n    {{ common_get_delete_insert_merge_sql(target, source, unique_key, dest_columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.common_get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.materialization_incremental_default": {"unique_id": "macro.dbt.materialization_incremental_default", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/incremental.sql", "original_file_path": "macros/materializations/incremental/incremental.sql", "name": "materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  {% set unique_key = config.get('unique_key') %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% set existing_relation = load_relation(this) %}\n  {% set tmp_relation = make_temp_relation(target_relation) %}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {% set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') %}\n\n  {% set tmp_identifier = model['name'] + '__dbt_tmp' %}\n  {% set backup_identifier = model['name'] + \"__dbt_backup\" %}\n\n  -- the intermediate_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {% set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                  schema=schema,\n                                                                  database=database) %}                                               \n  {% set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                            schema=schema,\n                                                            database=database) %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {# -- first check whether we want to full refresh for source view or config reasons #}\n  {% set trigger_full_refresh = (full_refresh_mode or existing_relation.is_view) %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n{% elif trigger_full_refresh %}\n      {#-- Make sure the backup doesn't exist so we don't encounter issues with the rename below #}\n      {% set tmp_identifier = model['name'] + '__dbt_tmp' %}\n      {% set backup_identifier = model['name'] + '__dbt_backup' %}\n      {% set intermediate_relation = existing_relation.incorporate(path={\"identifier\": tmp_identifier}) %}\n      {% set backup_relation = existing_relation.incorporate(path={\"identifier\": backup_identifier}) %}\n\n      {% set build_sql = create_table_as(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n      {% do to_drop.append(backup_relation) %}\n  {% else %}\n    {% do run_query(create_table_as(True, tmp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n             from_relation=tmp_relation,\n             to_relation=target_relation) %}\n    {% do process_schema_changes(on_schema_change, tmp_relation, existing_relation) %}\n    {% set build_sql = incremental_upsert(tmp_relation, target_relation, unique_key=unique_key) %}\n  \n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %} \n      {% do adapter.rename_relation(target_relation, backup_relation) %} \n      {% do adapter.rename_relation(intermediate_relation, target_relation) %} \n  {% endif %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.incremental_upsert", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.incremental_validate_on_schema_change": {"unique_id": "macro.dbt.incremental_validate_on_schema_change", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/incremental/on_schema_change.sql", "name": "incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n   \n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n     \n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n     \n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n   \n   {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.diff_columns": {"unique_id": "macro.dbt.diff_columns", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/incremental/on_schema_change.sql", "name": "diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n   \n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n  \n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.diff_column_data_types": {"unique_id": "macro.dbt.diff_column_data_types", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/incremental/on_schema_change.sql", "name": "diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n  \n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }} \n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.check_for_schema_changes": {"unique_id": "macro.dbt.check_for_schema_changes", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/incremental/on_schema_change.sql", "name": "check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n  \n  {% set schema_changed = False %}\n  \n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n  \n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n  \n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n  \n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.sync_column_schemas": {"unique_id": "macro.dbt.sync_column_schemas", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/incremental/on_schema_change.sql", "name": "sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n  \n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n  \n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n  \n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %} \n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n  \n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n  \n  {% do log(schema_change_message) %}\n  \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.process_schema_changes": {"unique_id": "macro.dbt.process_schema_changes", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/incremental/on_schema_change.sql", "name": "process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n    \n    {% if on_schema_change != 'ignore' %}\n    \n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n      \n      {% if schema_changes_dict['schema_changed'] %}\n    \n        {% if on_schema_change == 'fail' %}\n        \n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways: \n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n          {% endset %}\n          \n          {% do exceptions.raise_compiler_error(fail_msg) %}\n        \n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n          \n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n        \n        {% endif %}\n      \n      {% endif %}\n    \n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.incremental_upsert": {"unique_id": "macro.dbt.incremental_upsert", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/helpers.sql", "original_file_path": "macros/materializations/incremental/helpers.sql", "name": "incremental_upsert", "macro_sql": "{% macro incremental_upsert(tmp_relation, target_relation, unique_key=none, statement_name=\"main\") %}\n    \n    {%- set dest_columns = adapter.get_columns_in_relation(target_relation) -%}\n    {%- set dest_cols_csv = dest_columns | map(attribute='quoted') | join(', ') -%}\n\n    {%- if unique_key is not none -%}\n    delete\n    from {{ target_relation }}\n    where ({{ unique_key }}) in (\n        select ({{ unique_key }})\n        from {{ tmp_relation }}\n    );\n    {%- endif %}\n\n    insert into {{ target_relation }} ({{ dest_cols_csv }})\n    (\n       select {{ dest_cols_csv }}\n       from {{ tmp_relation }}\n    );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.create_csv_table": {"unique_id": "macro.dbt.create_csv_table", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.reset_csv_table": {"unique_id": "macro.dbt.reset_csv_table", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.load_csv_rows": {"unique_id": "macro.dbt.load_csv_rows", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__create_csv_table": {"unique_id": "macro.dbt.default__create_csv_table", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__reset_csv_table": {"unique_id": "macro.dbt.default__reset_csv_table", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.get_seed_column_quoted_csv": {"unique_id": "macro.dbt.get_seed_column_quoted_csv", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.basic_load_csv_rows": {"unique_id": "macro.dbt.basic_load_csv_rows", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "basic_load_csv_rows", "macro_sql": "{% macro basic_load_csv_rows(model, batch_size, agate_table) %}\n    {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n    {% set bindings = [] %}\n\n    {% set statements = [] %}\n\n    {% for chunk in agate_table.rows | batch(batch_size) %}\n        {% set bindings = [] %}\n\n        {% for row in chunk %}\n            {% do bindings.extend(row) %}\n        {% endfor %}\n\n        {% set sql %}\n            insert into {{ this.render() }} ({{ cols_sql }}) values\n            {% for row in chunk -%}\n                ({%- for column in agate_table.column_names -%}\n                    %s\n                    {%- if not loop.last%},{%- endif %}\n                {%- endfor -%})\n                {%- if not loop.last%},{%- endif %}\n            {%- endfor %}\n        {% endset %}\n\n        {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n        {% if loop.index0 == 0 %}\n            {% do statements.append(sql) %}\n        {% endif %}\n    {% endfor %}\n\n    {# Return SQL so we can render it out into the compiled files #}\n    {{ return(statements[0]) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_seed_column_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__load_csv_rows": {"unique_id": "macro.dbt.default__load_csv_rows", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n  {{ return(basic_load_csv_rows(model, 10000, agate_table) )}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.basic_load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.materialization_seed_default": {"unique_id": "macro.dbt.materialization_seed_default", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set agate_table = load_agate_table() -%}\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ create_table_sql }};\n    -- dbt seed --\n    {{ sql }}\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.run_query": {"unique_id": "macro.dbt.run_query", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/etc/query.sql", "original_file_path": "macros/etc/query.sql", "name": "run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.generate_schema_name": {"unique_id": "macro.dbt.generate_schema_name", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_schema.sql", "original_file_path": "macros/etc/get_custom_schema.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.generate_schema_name_for_env": {"unique_id": "macro.dbt.generate_schema_name_for_env", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_schema.sql", "original_file_path": "macros/etc/get_custom_schema.sql", "name": "generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.generate_database_name": {"unique_id": "macro.dbt.generate_database_name", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_database.sql", "original_file_path": "macros/etc/get_custom_database.sql", "name": "generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name')(custom_database_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__generate_database_name": {"unique_id": "macro.dbt.default__generate_database_name", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_database.sql", "original_file_path": "macros/etc/get_custom_database.sql", "name": "default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.convert_datetime": {"unique_id": "macro.dbt.convert_datetime", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.dates_in_range": {"unique_id": "macro.dbt.dates_in_range", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partiton start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.partition_range": {"unique_id": "macro.dbt.partition_range", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.py_current_timestring": {"unique_id": "macro.dbt.py_current_timestring", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.is_incremental": {"unique_id": "macro.dbt.is_incremental", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/etc/is_incremental.sql", "original_file_path": "macros/etc/is_incremental.sql", "name": "is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.generate_alias_name": {"unique_id": "macro.dbt.generate_alias_name", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_alias.sql", "original_file_path": "macros/etc/get_custom_alias.sql", "name": "generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name is none -%}\n\n        {{ node.name }}\n\n    {%- else -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.get_columns_in_query": {"unique_id": "macro.dbt.get_columns_in_query", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query')(select_sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__get_columns_in_query": {"unique_id": "macro.dbt.default__get_columns_in_query", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        select * from (\n            {{ select_sql }}\n        ) as __dbt_sbq\n        where false\n        limit 0\n    {% endcall %}\n\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.create_schema": {"unique_id": "macro.dbt.create_schema", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__create_schema": {"unique_id": "macro.dbt.default__create_schema", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.drop_schema": {"unique_id": "macro.dbt.drop_schema", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__drop_schema": {"unique_id": "macro.dbt.default__drop_schema", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.create_table_as": {"unique_id": "macro.dbt.create_table_as", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, sql) -%}\n  {{ adapter.dispatch('create_table_as')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__create_table_as": {"unique_id": "macro.dbt.default__create_table_as", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  as (\n    {{ sql }}\n  );\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.get_create_index_sql": {"unique_id": "macro.dbt.get_create_index_sql", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql')(relation, index_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__get_create_index_sql": {"unique_id": "macro.dbt.default__get_create_index_sql", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.create_indexes": {"unique_id": "macro.dbt.create_indexes", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes')(relation) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__create_indexes": {"unique_id": "macro.dbt.default__create_indexes", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.create_view_as": {"unique_id": "macro.dbt.create_view_as", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__create_view_as": {"unique_id": "macro.dbt.default__create_view_as", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }} as (\n    {{ sql }}\n  );\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.get_catalog": {"unique_id": "macro.dbt.get_catalog", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog')(information_schema, schemas)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__get_catalog": {"unique_id": "macro.dbt.default__get_catalog", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.get_columns_in_relation": {"unique_id": "macro.dbt.get_columns_in_relation", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.sql_convert_columns_in_relation": {"unique_id": "macro.dbt.sql_convert_columns_in_relation", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__get_columns_in_relation": {"unique_id": "macro.dbt.default__get_columns_in_relation", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.alter_column_type": {"unique_id": "macro.dbt.alter_column_type", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.alter_column_comment": {"unique_id": "macro.dbt.alter_column_comment", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment')(relation, column_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__alter_column_comment": {"unique_id": "macro.dbt.default__alter_column_comment", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.alter_relation_comment": {"unique_id": "macro.dbt.alter_relation_comment", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment')(relation, relation_comment)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__alter_relation_comment": {"unique_id": "macro.dbt.default__alter_relation_comment", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.persist_docs": {"unique_id": "macro.dbt.persist_docs", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__persist_docs": {"unique_id": "macro.dbt.default__persist_docs", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__alter_column_type": {"unique_id": "macro.dbt.default__alter_column_type", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.drop_relation": {"unique_id": "macro.dbt.drop_relation", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n  {{ return(adapter.dispatch('drop_relation')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__drop_relation": {"unique_id": "macro.dbt.default__drop_relation", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n  {% call statement('drop_relation', auto_begin=False) -%}\n    drop {{ relation.type }} if exists {{ relation }} cascade\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.truncate_relation": {"unique_id": "macro.dbt.truncate_relation", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__truncate_relation": {"unique_id": "macro.dbt.default__truncate_relation", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.rename_relation": {"unique_id": "macro.dbt.rename_relation", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation')(from_relation, to_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__rename_relation": {"unique_id": "macro.dbt.default__rename_relation", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.information_schema_name": {"unique_id": "macro.dbt.information_schema_name", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__information_schema_name": {"unique_id": "macro.dbt.default__information_schema_name", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.list_schemas": {"unique_id": "macro.dbt.list_schemas", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__list_schemas": {"unique_id": "macro.dbt.default__list_schemas", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.check_schema_exists": {"unique_id": "macro.dbt.check_schema_exists", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists')(information_schema, schema)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__check_schema_exists": {"unique_id": "macro.dbt.default__check_schema_exists", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.list_relations_without_caching": {"unique_id": "macro.dbt.list_relations_without_caching", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching')(schema_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__list_relations_without_caching": {"unique_id": "macro.dbt.default__list_relations_without_caching", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.current_timestamp": {"unique_id": "macro.dbt.current_timestamp", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "current_timestamp", "macro_sql": "{% macro current_timestamp() -%}\n  {{ adapter.dispatch('current_timestamp')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__current_timestamp": {"unique_id": "macro.dbt.default__current_timestamp", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter '+adapter.type()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.collect_freshness": {"unique_id": "macro.dbt.collect_freshness", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness')(source, loaded_at_field, filter))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__collect_freshness": {"unique_id": "macro.dbt.default__collect_freshness", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.make_temp_relation": {"unique_id": "macro.dbt.make_temp_relation", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation')(base_relation, suffix))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__make_temp_relation": {"unique_id": "macro.dbt.default__make_temp_relation", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {% set tmp_identifier = base_relation.identifier ~ suffix %}\n    {% set tmp_relation = base_relation.incorporate(\n                                path={\"identifier\": tmp_identifier}) -%}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.set_sql_header": {"unique_id": "macro.dbt.set_sql_header", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.alter_relation_add_remove_columns": {"unique_id": "macro.dbt.alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__alter_relation_add_remove_columns": {"unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n  \n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n  \n  {% set sql -%}\n     \n     alter {{ relation.type }} {{ relation }}\n       \n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if remove_columns | length > 0 }}\n            \n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n  \n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__test_relationships": {"unique_id": "macro.dbt.default__test_relationships", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/schema_tests/relationships.sql", "original_file_path": "macros/schema_tests/relationships.sql", "name": "default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select * from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select * from {{ to }}\n)\n\nselect\n    child.{{ column_name }}\n\nfrom child\nleft join parent\n    on child.{{ column_name }} = parent.{{ field }}\n\nwhere parent.{{ field }} is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.test_relationships": {"unique_id": "macro.dbt.test_relationships", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/schema_tests/relationships.sql", "original_file_path": "macros/schema_tests/relationships.sql", "name": "test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__test_accepted_values": {"unique_id": "macro.dbt.default__test_accepted_values", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/schema_tests/accepted_values.sql", "original_file_path": "macros/schema_tests/accepted_values.sql", "name": "default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by 1\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.test_accepted_values": {"unique_id": "macro.dbt.test_accepted_values", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/schema_tests/accepted_values.sql", "original_file_path": "macros/schema_tests/accepted_values.sql", "name": "test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__test_not_null": {"unique_id": "macro.dbt.default__test_not_null", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/schema_tests/not_null.sql", "original_file_path": "macros/schema_tests/not_null.sql", "name": "default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\nselect *\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.test_not_null": {"unique_id": "macro.dbt.test_not_null", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/schema_tests/not_null.sql", "original_file_path": "macros/schema_tests/not_null.sql", "name": "test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.default__test_unique": {"unique_id": "macro.dbt.default__test_unique", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/schema_tests/unique.sql", "original_file_path": "macros/schema_tests/unique.sql", "name": "default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }},\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}, "macro.dbt.test_unique": {"unique_id": "macro.dbt.test_unique", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/schema_tests/unique.sql", "original_file_path": "macros/schema_tests/unique.sql", "name": "test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1629326230}}, "docs": {"dbt.__overview__": {"unique_id": "dbt.__overview__", "package_name": "dbt", "root_path": "/home/airflow/.local/lib/python3.7/site-packages/dbt/include/global_project", "path": "overview.md", "original_file_path": "docs/overview.md", "name": "__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--models` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/overview)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [chat](https://community.getdbt.com/) on Slack for live questions and support."}}, "exposures": {}, "selectors": {}, "disabled": [], "parent_map": {"model.sdna_project.mx_stores_stg": ["model.sdna_project.dls_latam_ins_cia_ruta", "model.sdna_project.dls_latam_ins_maestrocliente", "model.sdna_project.dls_latam_ins_nivelcliente", "model.sdna_project.dls_latam_ins_ruta", "model.sdna_project.dls_latam_ins_sucursal", "model.sdna_project.dls_latam_ins_tipocliente", "model.sdna_project.dls_latam_ins_tiporuta", "model.sdna_project.dls_latam_ins_vtaclipro_sem_v"], "model.sdna_project.stg_dataplor_coordinates": ["model.sdna_project.dataplor"], "model.sdna_project.stg_mx_store_coordinates": ["model.sdna_project.mx_stores"], "model.sdna_project.inegi2_step1": ["model.sdna_project.inegi_2_stg"], "model.sdna_project.inegi2_step2": ["model.sdna_project.inegi2_step1", "model.sdna_project.urbanicity"], "model.sdna_project.inegi2_step3": ["model.sdna_project.inegi2_step2"], "model.sdna_project.inegi2_step4": ["model.sdna_project.inegi2_step3", "model.sdna_project.nse"], "model.sdna_project.inegi2_step5": ["model.sdna_project.inegi", "model.sdna_project.inegi2_step4"], "model.sdna_project.stg_lookup": [], "model.sdna_project.stg_mobility_data": [], "model.sdna_project.tradearea_df_lf": ["model.sdna_project.inegi_2", "model.sdna_project.mx_stores"], "model.sdna_project.tradearea_df_sf": ["model.sdna_project.inegi_2", "model.sdna_project.mx_stores"], "model.sdna_project.tradearea_r_lf": ["model.sdna_project.inegi_2", "model.sdna_project.mx_stores"], "model.sdna_project.tradearea_r_sf": ["model.sdna_project.inegi_2", "model.sdna_project.mx_stores"], "model.sdna_project.tradearea_ranked_step3": ["model.sdna_project.tradearea_union_step2"], "model.sdna_project.tradearea_u_lf": ["model.sdna_project.inegi_2", "model.sdna_project.mx_stores"], "model.sdna_project.tradearea_u_sf": ["model.sdna_project.inegi_2", "model.sdna_project.mx_stores"], "model.sdna_project.tradearea_union_step2": ["model.sdna_project.tradearea_df_lf", "model.sdna_project.tradearea_df_sf", "model.sdna_project.tradearea_r_lf", "model.sdna_project.tradearea_r_sf", "model.sdna_project.tradearea_u_lf", "model.sdna_project.tradearea_u_sf"], "model.sdna_project.dataplor": [], "model.sdna_project.dls_latam_ins_categoria": [], "model.sdna_project.dls_latam_ins_cia_ruta": [], "model.sdna_project.dls_latam_ins_maestrocliente": [], "model.sdna_project.dls_latam_ins_nivelcliente": [], "model.sdna_project.dls_latam_ins_producto": [], "model.sdna_project.dls_latam_ins_ruta": [], "model.sdna_project.dls_latam_ins_semana": [], "model.sdna_project.dls_latam_ins_sucursal": [], "model.sdna_project.dls_latam_ins_tipocliente": [], "model.sdna_project.dls_latam_ins_tiporuta": [], "model.sdna_project.dls_latam_ins_vtaclipro_sem_v": [], "model.sdna_project.inegi_2_stg": [], "model.sdna_project.inegi_stg": [], "model.sdna_project.nse_stg": [], "model.sdna_project.urbanicity_stg": [], "model.sdna_project.demand_space_mx_ent": ["model.sdna_project.mx_ind_ent_buck"], "model.sdna_project.demand_space_mx_piv": ["model.sdna_project.demand_space_mx_ent"], "model.sdna_project.inegi": ["model.sdna_project.inegi_stg"], "model.sdna_project.inegi_2": ["model.sdna_project.inegi2_step5"], "model.sdna_project.inegi_2pbi": ["model.sdna_project.inegi_2"], "model.sdna_project.mapping_id_cliente_dataplor_all": ["model.sdna_project.stg_dataplor_coordinates", "model.sdna_project.stg_mx_store_coordinates"], "model.sdna_project.mapping_id_cliente_quadkey": ["model.sdna_project.mx_stores"], "model.sdna_project.mex_con_per": ["model.sdna_project.inegi_2pbi"], "model.sdna_project.mex_con_per_ent": ["model.sdna_project.inegi_2"], "model.sdna_project.mx_buck_piv_pbi": ["model.sdna_project.demand_space_mx_piv", "model.sdna_project.mx_ind_ent_buck_piv"], "model.sdna_project.mx_ind_ent": ["model.sdna_project.mex_con_per_ent", "model.sdna_project.mxstore_ent", "model.sdna_project.tradearea"], "model.sdna_project.mx_ind_ent_buck": ["model.sdna_project.mx_ind_ent"], "model.sdna_project.mx_ind_ent_buck_piv": ["model.sdna_project.mx_ind_ent_buck"], "model.sdna_project.mx_products": ["model.sdna_project.dls_latam_ins_categoria", "model.sdna_project.dls_latam_ins_producto", "model.sdna_project.dls_latam_ins_vtaclipro_sem_v"], "model.sdna_project.mx_sales_cy_ly": ["model.sdna_project.dls_latam_ins_semana", "model.sdna_project.dls_latam_ins_semana", "model.sdna_project.mx_sales_wk", "model.sdna_project.mx_sales_wk"], "model.sdna_project.mx_sales_l26_wk": ["model.sdna_project.mx_sales_wk"], "model.sdna_project.mx_sales_l52_wk": ["model.sdna_project.mx_sales_wk"], "model.sdna_project.mx_sales_periodo": ["model.sdna_project.dls_latam_ins_semana", "model.sdna_project.mx_sales_wk"], "model.sdna_project.mx_sales_tri": ["model.sdna_project.dls_latam_ins_semana", "model.sdna_project.mx_sales_wk"], "model.sdna_project.mx_sales_wk": ["model.sdna_project.dls_latam_ins_producto", "model.sdna_project.dls_latam_ins_semana", "model.sdna_project.dls_latam_ins_vtaclipro_sem_v"], "model.sdna_project.mx_stores": ["model.sdna_project.mx_stores_stg"], "model.sdna_project.mxstore_ent": ["model.sdna_project.inegi_2", "model.sdna_project.mx_stores"], "model.sdna_project.nse": ["model.sdna_project.nse_stg"], "model.sdna_project.store_mobility": ["model.sdna_project.mapping_id_cliente_quadkey"], "model.sdna_project.store_poi_counts": ["model.sdna_project.dataplor", "model.sdna_project.mapping_id_cliente_dataplor_all"], "model.sdna_project.tradearea": ["model.sdna_project.tradearea_ranked_step3"], "model.sdna_project.urbanicity": ["model.sdna_project.urbanicity_stg"], "model.sdna_project.mobility_adm1_mx": ["model.sdna_project.stg_lookup", "model.sdna_project.stg_mobility_data"], "model.sdna_project.btg_fl_sales_cust_prod_v_extend_full": [], "model.sdna_project.btg_fl_sales_cust_wk_prod_v_extend_full": [], "model.sdna_project.btg_pbc_sales_cust_prod_v_extend_full": [], "model.sdna_project.btg_pbc_sales_cust_wk_prod_v_extend_full": [], "model.sdna_project.dx_fl_sales_cust_wk_prod_extend_full": [], "model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_full": [], "model.sdna_project.dx_retailer_trade_area_full": [], "model.sdna_project.mvh_demog_data_full": [], "model.sdna_project.mvh_retailer_prod_attr_data_full": [], "model.sdna_project.btg_fl_sales_cust_prod_v_extend_sc": ["model.sdna_project.btg_fl_sales_cust_prod_v_extend_full"], "model.sdna_project.btg_fl_sales_cust_prod_v_extend_wm": ["model.sdna_project.btg_fl_sales_cust_prod_v_extend_full"], "model.sdna_project.btg_fl_sales_cust_wk_prod_v_extend_sc": ["model.sdna_project.btg_fl_sales_cust_wk_prod_v_extend_full"], "model.sdna_project.btg_fl_sales_cust_wk_prod_v_extend_wm": ["model.sdna_project.btg_fl_sales_cust_wk_prod_v_extend_full"], "model.sdna_project.btg_pbc_sales_cust_prod_v_extend_sc": ["model.sdna_project.btg_pbc_sales_cust_prod_v_extend_full"], "model.sdna_project.btg_pbc_sales_cust_prod_v_extend_wm": ["model.sdna_project.btg_pbc_sales_cust_prod_v_extend_full"], "model.sdna_project.btg_pbc_sales_cust_wk_prod_v_extend_sc": ["model.sdna_project.btg_pbc_sales_cust_wk_prod_v_extend_full"], "model.sdna_project.btg_pbc_sales_cust_wk_prod_v_extend_wm": ["model.sdna_project.btg_pbc_sales_cust_wk_prod_v_extend_full"], "model.sdna_project.dx_fl_sales_cust_wk_prod_extend_sc": ["model.sdna_project.dx_fl_sales_cust_wk_prod_extend_full"], "model.sdna_project.dx_fl_sales_cust_wk_prod_extend_wm": ["model.sdna_project.dx_fl_sales_cust_wk_prod_extend_full"], "model.sdna_project.dx_id_sc": ["model.sdna_project.dx_fl_sales_cust_wk_prod_extend_sc", "model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_sc"], "model.sdna_project.dx_id_wm": ["model.sdna_project.dx_fl_sales_cust_wk_prod_extend_wm", "model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_wm"], "model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_sc": ["model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_full"], "model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_wm": ["model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_full"], "model.sdna_project.dx_retailer_trade_area_sc": ["model.sdna_project.dx_id_sc", "model.sdna_project.dx_retailer_trade_area_full"], "model.sdna_project.dx_retailer_trade_area_wm": ["model.sdna_project.dx_id_wm", "model.sdna_project.dx_retailer_trade_area_full"], "model.sdna_project.mvh_demog_data_sc": ["model.sdna_project.dx_id_sc", "model.sdna_project.mvh_demog_data_full"], "model.sdna_project.mvh_demog_data_wm": ["model.sdna_project.dx_id_wm", "model.sdna_project.mvh_demog_data_full"], "model.sdna_project.mvh_retailer_prod_attr_data_sc": ["model.sdna_project.dx_id_sc", "model.sdna_project.mvh_retailer_prod_attr_data_full"], "model.sdna_project.mvh_retailer_prod_attr_data_wm": ["model.sdna_project.dx_id_wm", "model.sdna_project.mvh_retailer_prod_attr_data_full"], "seed.sdna_project.field_column_mapping_sdna_mx": [], "seed.sdna_project.field_column_mapping_sdna_us_hh": [], "seed.sdna_project.field_column_mapping_walmart": [], "test.sdna_project.unique_stg_lookup_geo_code.7670bcaf18": ["model.sdna_project.stg_lookup"], "test.sdna_project.not_null_stg_lookup_geo_code.509632b757": ["model.sdna_project.stg_lookup"], "test.sdna_project.not_null_stg_mobility_data_geo_code.e0da8e5729": ["model.sdna_project.stg_mobility_data"], "test.sdna_project.relationships_stg_mobility_data_geo_code__geo_code__ref_stg_lookup_.c2246064ff": ["model.sdna_project.stg_lookup", "model.sdna_project.stg_mobility_data"], "test.sdna_project.not_null_mobility_adm1_mx_geo_code.c20309bd0c": ["model.sdna_project.mobility_adm1_mx"], "test.sdna_project.relationships_mobility_adm1_mx_geo_code__geo_code__ref_stg_lookup_.5bed1a886c": ["model.sdna_project.mobility_adm1_mx", "model.sdna_project.stg_lookup"], "test.sdna_project.not_null_mobility_adm1_mx_activity_index_total.514e6b3670": ["model.sdna_project.mobility_adm1_mx"], "source.sdna_project.store_sales.btg_fl_sales_cust_prod_v_extend": [], "source.sdna_project.store_sales.btg_fl_sales_cust_wk_prod_v_extend": [], "source.sdna_project.store_sales.btg_pbc_sales_cust_prod_v_extend": [], "source.sdna_project.store_sales.btg_pbc_sales_cust_wk_prod_v_extend": [], "source.sdna_project.store_sales.dx_fl_sales_cust_wk_prod_extend": [], "source.sdna_project.store_sales.dx_pbc_sales_cust_wk_prod_extend": [], "source.sdna_project.store_sales.dx_retailer_trade_area": []}, "child_map": {"model.sdna_project.mx_stores_stg": ["model.sdna_project.mx_stores"], "model.sdna_project.stg_dataplor_coordinates": ["model.sdna_project.mapping_id_cliente_dataplor_all"], "model.sdna_project.stg_mx_store_coordinates": ["model.sdna_project.mapping_id_cliente_dataplor_all"], "model.sdna_project.inegi2_step1": ["model.sdna_project.inegi2_step2"], "model.sdna_project.inegi2_step2": ["model.sdna_project.inegi2_step3"], "model.sdna_project.inegi2_step3": ["model.sdna_project.inegi2_step4"], "model.sdna_project.inegi2_step4": ["model.sdna_project.inegi2_step5"], "model.sdna_project.inegi2_step5": ["model.sdna_project.inegi_2"], "model.sdna_project.stg_lookup": ["model.sdna_project.mobility_adm1_mx", "test.sdna_project.not_null_stg_lookup_geo_code.509632b757", "test.sdna_project.relationships_mobility_adm1_mx_geo_code__geo_code__ref_stg_lookup_.5bed1a886c", "test.sdna_project.relationships_stg_mobility_data_geo_code__geo_code__ref_stg_lookup_.c2246064ff", "test.sdna_project.unique_stg_lookup_geo_code.7670bcaf18"], "model.sdna_project.stg_mobility_data": ["model.sdna_project.mobility_adm1_mx", "test.sdna_project.not_null_stg_mobility_data_geo_code.e0da8e5729", "test.sdna_project.relationships_stg_mobility_data_geo_code__geo_code__ref_stg_lookup_.c2246064ff"], "model.sdna_project.tradearea_df_lf": ["model.sdna_project.tradearea_union_step2"], "model.sdna_project.tradearea_df_sf": ["model.sdna_project.tradearea_union_step2"], "model.sdna_project.tradearea_r_lf": ["model.sdna_project.tradearea_union_step2"], "model.sdna_project.tradearea_r_sf": ["model.sdna_project.tradearea_union_step2"], "model.sdna_project.tradearea_ranked_step3": ["model.sdna_project.tradearea"], "model.sdna_project.tradearea_u_lf": ["model.sdna_project.tradearea_union_step2"], "model.sdna_project.tradearea_u_sf": ["model.sdna_project.tradearea_union_step2"], "model.sdna_project.tradearea_union_step2": ["model.sdna_project.tradearea_ranked_step3"], "model.sdna_project.dataplor": ["model.sdna_project.stg_dataplor_coordinates", "model.sdna_project.store_poi_counts"], "model.sdna_project.dls_latam_ins_categoria": ["model.sdna_project.mx_products"], "model.sdna_project.dls_latam_ins_cia_ruta": ["model.sdna_project.mx_stores_stg"], "model.sdna_project.dls_latam_ins_maestrocliente": ["model.sdna_project.mx_stores_stg"], "model.sdna_project.dls_latam_ins_nivelcliente": ["model.sdna_project.mx_stores_stg"], "model.sdna_project.dls_latam_ins_producto": ["model.sdna_project.mx_products", "model.sdna_project.mx_sales_wk"], "model.sdna_project.dls_latam_ins_ruta": ["model.sdna_project.mx_stores_stg"], "model.sdna_project.dls_latam_ins_semana": ["model.sdna_project.mx_sales_cy_ly", "model.sdna_project.mx_sales_cy_ly", "model.sdna_project.mx_sales_periodo", "model.sdna_project.mx_sales_tri", "model.sdna_project.mx_sales_wk"], "model.sdna_project.dls_latam_ins_sucursal": ["model.sdna_project.mx_stores_stg"], "model.sdna_project.dls_latam_ins_tipocliente": ["model.sdna_project.mx_stores_stg"], "model.sdna_project.dls_latam_ins_tiporuta": ["model.sdna_project.mx_stores_stg"], "model.sdna_project.dls_latam_ins_vtaclipro_sem_v": ["model.sdna_project.mx_products", "model.sdna_project.mx_sales_wk", "model.sdna_project.mx_stores_stg"], "model.sdna_project.inegi_2_stg": ["model.sdna_project.inegi2_step1"], "model.sdna_project.inegi_stg": ["model.sdna_project.inegi"], "model.sdna_project.nse_stg": ["model.sdna_project.nse"], "model.sdna_project.urbanicity_stg": ["model.sdna_project.urbanicity"], "model.sdna_project.demand_space_mx_ent": ["model.sdna_project.demand_space_mx_piv"], "model.sdna_project.demand_space_mx_piv": ["model.sdna_project.mx_buck_piv_pbi"], "model.sdna_project.inegi": ["model.sdna_project.inegi2_step5"], "model.sdna_project.inegi_2": ["model.sdna_project.inegi_2pbi", "model.sdna_project.mex_con_per_ent", "model.sdna_project.mxstore_ent", "model.sdna_project.tradearea_df_lf", "model.sdna_project.tradearea_df_sf", "model.sdna_project.tradearea_r_lf", "model.sdna_project.tradearea_r_sf", "model.sdna_project.tradearea_u_lf", "model.sdna_project.tradearea_u_sf"], "model.sdna_project.inegi_2pbi": ["model.sdna_project.mex_con_per"], "model.sdna_project.mapping_id_cliente_dataplor_all": ["model.sdna_project.store_poi_counts"], "model.sdna_project.mapping_id_cliente_quadkey": ["model.sdna_project.store_mobility"], "model.sdna_project.mex_con_per": [], "model.sdna_project.mex_con_per_ent": ["model.sdna_project.mx_ind_ent"], "model.sdna_project.mx_buck_piv_pbi": [], "model.sdna_project.mx_ind_ent": ["model.sdna_project.mx_ind_ent_buck"], "model.sdna_project.mx_ind_ent_buck": ["model.sdna_project.demand_space_mx_ent", "model.sdna_project.mx_ind_ent_buck_piv"], "model.sdna_project.mx_ind_ent_buck_piv": ["model.sdna_project.mx_buck_piv_pbi"], "model.sdna_project.mx_products": [], "model.sdna_project.mx_sales_cy_ly": [], "model.sdna_project.mx_sales_l26_wk": [], "model.sdna_project.mx_sales_l52_wk": [], "model.sdna_project.mx_sales_periodo": [], "model.sdna_project.mx_sales_tri": [], "model.sdna_project.mx_sales_wk": ["model.sdna_project.mx_sales_cy_ly", "model.sdna_project.mx_sales_cy_ly", "model.sdna_project.mx_sales_l26_wk", "model.sdna_project.mx_sales_l52_wk", "model.sdna_project.mx_sales_periodo", "model.sdna_project.mx_sales_tri"], "model.sdna_project.mx_stores": ["model.sdna_project.mapping_id_cliente_quadkey", "model.sdna_project.mxstore_ent", "model.sdna_project.stg_mx_store_coordinates", "model.sdna_project.tradearea_df_lf", "model.sdna_project.tradearea_df_sf", "model.sdna_project.tradearea_r_lf", "model.sdna_project.tradearea_r_sf", "model.sdna_project.tradearea_u_lf", "model.sdna_project.tradearea_u_sf"], "model.sdna_project.mxstore_ent": ["model.sdna_project.mx_ind_ent"], "model.sdna_project.nse": ["model.sdna_project.inegi2_step4"], "model.sdna_project.store_mobility": [], "model.sdna_project.store_poi_counts": [], "model.sdna_project.tradearea": ["model.sdna_project.mx_ind_ent"], "model.sdna_project.urbanicity": ["model.sdna_project.inegi2_step2"], "model.sdna_project.mobility_adm1_mx": ["test.sdna_project.not_null_mobility_adm1_mx_activity_index_total.514e6b3670", "test.sdna_project.not_null_mobility_adm1_mx_geo_code.c20309bd0c", "test.sdna_project.relationships_mobility_adm1_mx_geo_code__geo_code__ref_stg_lookup_.5bed1a886c"], "model.sdna_project.btg_fl_sales_cust_prod_v_extend_full": ["model.sdna_project.btg_fl_sales_cust_prod_v_extend_sc", "model.sdna_project.btg_fl_sales_cust_prod_v_extend_wm"], "model.sdna_project.btg_fl_sales_cust_wk_prod_v_extend_full": ["model.sdna_project.btg_fl_sales_cust_wk_prod_v_extend_sc", "model.sdna_project.btg_fl_sales_cust_wk_prod_v_extend_wm"], "model.sdna_project.btg_pbc_sales_cust_prod_v_extend_full": ["model.sdna_project.btg_pbc_sales_cust_prod_v_extend_sc", "model.sdna_project.btg_pbc_sales_cust_prod_v_extend_wm"], "model.sdna_project.btg_pbc_sales_cust_wk_prod_v_extend_full": ["model.sdna_project.btg_pbc_sales_cust_wk_prod_v_extend_sc", "model.sdna_project.btg_pbc_sales_cust_wk_prod_v_extend_wm"], "model.sdna_project.dx_fl_sales_cust_wk_prod_extend_full": ["model.sdna_project.dx_fl_sales_cust_wk_prod_extend_sc", "model.sdna_project.dx_fl_sales_cust_wk_prod_extend_wm"], "model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_full": ["model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_sc", "model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_wm"], "model.sdna_project.dx_retailer_trade_area_full": ["model.sdna_project.dx_retailer_trade_area_sc", "model.sdna_project.dx_retailer_trade_area_wm"], "model.sdna_project.mvh_demog_data_full": ["model.sdna_project.mvh_demog_data_sc", "model.sdna_project.mvh_demog_data_wm"], "model.sdna_project.mvh_retailer_prod_attr_data_full": ["model.sdna_project.mvh_retailer_prod_attr_data_sc", "model.sdna_project.mvh_retailer_prod_attr_data_wm"], "model.sdna_project.btg_fl_sales_cust_prod_v_extend_sc": [], "model.sdna_project.btg_fl_sales_cust_prod_v_extend_wm": [], "model.sdna_project.btg_fl_sales_cust_wk_prod_v_extend_sc": [], "model.sdna_project.btg_fl_sales_cust_wk_prod_v_extend_wm": [], "model.sdna_project.btg_pbc_sales_cust_prod_v_extend_sc": [], "model.sdna_project.btg_pbc_sales_cust_prod_v_extend_wm": [], "model.sdna_project.btg_pbc_sales_cust_wk_prod_v_extend_sc": [], "model.sdna_project.btg_pbc_sales_cust_wk_prod_v_extend_wm": [], "model.sdna_project.dx_fl_sales_cust_wk_prod_extend_sc": ["model.sdna_project.dx_id_sc"], "model.sdna_project.dx_fl_sales_cust_wk_prod_extend_wm": ["model.sdna_project.dx_id_wm"], "model.sdna_project.dx_id_sc": ["model.sdna_project.dx_retailer_trade_area_sc", "model.sdna_project.mvh_demog_data_sc", "model.sdna_project.mvh_retailer_prod_attr_data_sc"], "model.sdna_project.dx_id_wm": ["model.sdna_project.dx_retailer_trade_area_wm", "model.sdna_project.mvh_demog_data_wm", "model.sdna_project.mvh_retailer_prod_attr_data_wm"], "model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_sc": ["model.sdna_project.dx_id_sc"], "model.sdna_project.dx_pbc_sales_cust_wk_prod_extend_wm": ["model.sdna_project.dx_id_wm"], "model.sdna_project.dx_retailer_trade_area_sc": [], "model.sdna_project.dx_retailer_trade_area_wm": [], "model.sdna_project.mvh_demog_data_sc": [], "model.sdna_project.mvh_demog_data_wm": [], "model.sdna_project.mvh_retailer_prod_attr_data_sc": [], "model.sdna_project.mvh_retailer_prod_attr_data_wm": [], "seed.sdna_project.field_column_mapping_sdna_mx": [], "seed.sdna_project.field_column_mapping_sdna_us_hh": [], "seed.sdna_project.field_column_mapping_walmart": [], "test.sdna_project.unique_stg_lookup_geo_code.7670bcaf18": [], "test.sdna_project.not_null_stg_lookup_geo_code.509632b757": [], "test.sdna_project.not_null_stg_mobility_data_geo_code.e0da8e5729": [], "test.sdna_project.relationships_stg_mobility_data_geo_code__geo_code__ref_stg_lookup_.c2246064ff": [], "test.sdna_project.not_null_mobility_adm1_mx_geo_code.c20309bd0c": [], "test.sdna_project.relationships_mobility_adm1_mx_geo_code__geo_code__ref_stg_lookup_.5bed1a886c": [], "test.sdna_project.not_null_mobility_adm1_mx_activity_index_total.514e6b3670": [], "source.sdna_project.store_sales.btg_fl_sales_cust_prod_v_extend": [], "source.sdna_project.store_sales.btg_fl_sales_cust_wk_prod_v_extend": [], "source.sdna_project.store_sales.btg_pbc_sales_cust_prod_v_extend": [], "source.sdna_project.store_sales.btg_pbc_sales_cust_wk_prod_v_extend": [], "source.sdna_project.store_sales.dx_fl_sales_cust_wk_prod_extend": [], "source.sdna_project.store_sales.dx_pbc_sales_cust_wk_prod_extend": [], "source.sdna_project.store_sales.dx_retailer_trade_area": []}}